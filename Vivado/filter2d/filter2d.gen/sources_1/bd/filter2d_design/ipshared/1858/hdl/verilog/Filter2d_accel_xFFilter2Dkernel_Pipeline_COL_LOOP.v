// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        src_kernel_win_5,
        src_kernel_win_3,
        src_kernel_win,
        widthloop,
        cmp245,
        zext_ln696,
        brmerge31,
        cmp200,
        locy,
        cmp1_i18,
        cmp220_1,
        cmp226_1,
        locy_1,
        empty,
        locy_2,
        p_filter_kernel_0_0_val1,
        p_filter_kernel_0_1_val2,
        p_filter_kernel_0_2_val3,
        p_filter_kernel_1_0_val4,
        p_filter_kernel_1_1_val5,
        p_filter_kernel_1_2_val6,
        p_filter_kernel_2_0_val7,
        p_filter_kernel_2_1_val8,
        p_filter_kernel_2_2_val9,
        shift,
        src_kernel_win_11_out,
        src_kernel_win_11_out_ap_vld,
        src_kernel_win_10_out_i,
        src_kernel_win_10_out_o,
        src_kernel_win_10_out_o_ap_vld,
        src_kernel_win_9_out,
        src_kernel_win_9_out_ap_vld,
        src_kernel_win_8_out_i,
        src_kernel_win_8_out_o,
        src_kernel_win_8_out_o_ap_vld,
        src_kernel_win_7_out_i,
        src_kernel_win_7_out_o,
        src_kernel_win_7_out_o_ap_vld,
        src_kernel_win_6_out,
        src_kernel_win_6_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] imgInput_data_dout;
input  [1:0] imgInput_data_num_data_valid;
input  [1:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [23:0] imgOutput_data_din;
input  [1:0] imgOutput_data_num_data_valid;
input  [1:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [23:0] src_kernel_win_5;
input  [23:0] src_kernel_win_3;
input  [23:0] src_kernel_win;
input  [16:0] widthloop;
input  [0:0] cmp245;
input  [15:0] zext_ln696;
input  [0:0] brmerge31;
input  [0:0] cmp200;
input  [1:0] locy;
input  [0:0] cmp1_i18;
input  [0:0] cmp220_1;
input  [0:0] cmp226_1;
input  [1:0] locy_1;
input  [0:0] empty;
input  [1:0] locy_2;
input  [15:0] p_filter_kernel_0_0_val1;
input  [15:0] p_filter_kernel_0_1_val2;
input  [15:0] p_filter_kernel_0_2_val3;
input  [15:0] p_filter_kernel_1_0_val4;
input  [15:0] p_filter_kernel_1_1_val5;
input  [15:0] p_filter_kernel_1_2_val6;
input  [15:0] p_filter_kernel_2_0_val7;
input  [15:0] p_filter_kernel_2_1_val8;
input  [15:0] p_filter_kernel_2_2_val9;
input  [7:0] shift;
output  [23:0] src_kernel_win_11_out;
output   src_kernel_win_11_out_ap_vld;
input  [23:0] src_kernel_win_10_out_i;
output  [23:0] src_kernel_win_10_out_o;
output   src_kernel_win_10_out_o_ap_vld;
output  [23:0] src_kernel_win_9_out;
output   src_kernel_win_9_out_ap_vld;
input  [23:0] src_kernel_win_8_out_i;
output  [23:0] src_kernel_win_8_out_o;
output   src_kernel_win_8_out_o_ap_vld;
input  [23:0] src_kernel_win_7_out_i;
output  [23:0] src_kernel_win_7_out_o;
output   src_kernel_win_7_out_o_ap_vld;
output  [23:0] src_kernel_win_6_out;
output   src_kernel_win_6_out_ap_vld;

reg ap_idle;
reg imgInput_data_read;
reg imgOutput_data_write;
reg src_kernel_win_11_out_ap_vld;
reg[23:0] src_kernel_win_10_out_o;
reg src_kernel_win_10_out_o_ap_vld;
reg src_kernel_win_9_out_ap_vld;
reg[23:0] src_kernel_win_8_out_o;
reg src_kernel_win_8_out_o_ap_vld;
reg[23:0] src_kernel_win_7_out_o;
reg src_kernel_win_7_out_o_ap_vld;
reg src_kernel_win_6_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln709_reg_892;
wire   [0:0] brmerge31_read_reg_888;
reg   [0:0] and_ln637_reg_901;
reg    ap_predicate_op87_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
reg   [0:0] and_ln794_reg_915;
reg   [0:0] and_ln794_reg_915_pp0_iter10_reg;
reg    ap_block_state12_pp0_stage0_iter11;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln709_fu_423_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    imgInput_data_blk_n;
wire    ap_block_pp0_stage0;
reg    imgOutput_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] tmp_reg_855;
wire   [0:0] cmp200_read_reg_884;
wire   [0:0] brmerge31_read_read_fu_268_p2;
reg   [0:0] icmp_ln709_reg_892_pp0_iter1_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter2_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter3_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter4_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter5_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter6_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter7_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter8_reg;
reg   [0:0] icmp_ln709_reg_892_pp0_iter9_reg;
wire  signed [15:0] ImagLocx_fu_435_p2;
reg  signed [15:0] ImagLocx_reg_896;
wire   [0:0] and_ln637_fu_465_p2;
reg   [0:0] and_ln637_reg_901_pp0_iter1_reg;
reg   [0:0] and_ln637_reg_901_pp0_iter2_reg;
wire   [0:0] tmp_3_fu_471_p3;
reg   [0:0] tmp_3_reg_906;
reg   [0:0] tmp_3_reg_906_pp0_iter1_reg;
reg   [0:0] tmp_3_reg_906_pp0_iter2_reg;
wire   [0:0] icmp_ln765_fu_479_p2;
reg   [0:0] icmp_ln765_reg_910;
reg   [0:0] icmp_ln765_reg_910_pp0_iter1_reg;
reg   [0:0] icmp_ln765_reg_910_pp0_iter2_reg;
wire   [0:0] and_ln794_fu_501_p2;
reg   [0:0] and_ln794_reg_915_pp0_iter1_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter2_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter3_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter4_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter5_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter6_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter7_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter8_reg;
reg   [0:0] and_ln794_reg_915_pp0_iter9_reg;
reg   [0:0] tmp_2_reg_919;
reg   [0:0] tmp_2_reg_919_pp0_iter2_reg;
reg   [11:0] k_buf_1_addr_reg_931;
reg   [11:0] k_buf_2_addr_reg_937;
wire   [23:0] k_buf_2_q1;
reg   [23:0] k_buf_2_load_reg_943;
wire   [23:0] src_kernel_win_10_fu_533_p3;
reg   [23:0] src_kernel_win_10_reg_948;
wire   [23:0] src_kernel_win_11_fu_541_p3;
reg   [23:0] src_kernel_win_11_reg_956;
reg   [23:0] src_kernel_win_6_reg_964;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter4_reg;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter5_reg;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter6_reg;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter7_reg;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter8_reg;
reg   [23:0] src_kernel_win_6_reg_964_pp0_iter9_reg;
reg   [23:0] src_kernel_win_7_reg_971;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter4_reg;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter5_reg;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter6_reg;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter7_reg;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter8_reg;
reg   [23:0] src_kernel_win_7_reg_971_pp0_iter9_reg;
reg   [23:0] src_kernel_win_8_reg_978;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter4_reg;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter5_reg;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter6_reg;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter7_reg;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter8_reg;
reg   [23:0] src_kernel_win_8_reg_978_pp0_iter9_reg;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [11:0] k_buf_address0;
reg    k_buf_ce0;
reg    k_buf_we0;
wire   [23:0] k_buf_q0;
wire   [11:0] k_buf_1_address0;
reg    k_buf_1_ce0;
reg    k_buf_1_we0;
wire   [23:0] k_buf_1_d0;
wire   [11:0] k_buf_1_address1;
reg    k_buf_1_ce1;
wire   [23:0] k_buf_1_q1;
wire   [11:0] k_buf_2_address0;
reg    k_buf_2_ce0;
reg    k_buf_2_we0;
wire   [23:0] k_buf_2_d0;
wire   [11:0] k_buf_2_address1;
reg    k_buf_2_ce1;
wire   [23:0] grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_return;
reg    grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_ce;
reg    ap_predicate_op137_call_state5;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call6;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call6;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call6;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call6;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call6;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call6;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call6;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call6;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call6;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call6;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call6;
reg    ap_block_state12_pp0_stage0_iter11_ignore_call6;
reg    ap_block_pp0_stage0_11001_ignoreCallOp137;
wire   [63:0] idxprom_fu_526_p1;
reg   [15:0] j_fu_132;
wire   [15:0] j_4_fu_429_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_j_3;
reg   [23:0] src_kernel_win_1_fu_136;
wire   [23:0] src_kernel_win_13_fu_573_p3;
wire   [23:0] src_kernel_win_16_fu_651_p3;
reg   [23:0] src_kernel_win_2_fu_140;
wire   [23:0] src_kernel_win_15_fu_593_p3;
wire   [23:0] src_kernel_win_17_fu_643_p3;
reg   [23:0] src_kernel_win_4_fu_144;
wire   [23:0] src_kernel_win_19_fu_616_p5;
wire   [23:0] src_kernel_win_18_fu_635_p3;
wire   [23:0] src_kernel_win_9_fu_558_p3;
reg    ap_block_pp0_stage0_01001;
wire   [16:0] zext_ln709_fu_419_p1;
wire   [0:0] tmp_1_fu_445_p3;
wire  signed [16:0] sext_ln637_fu_441_p1;
wire   [16:0] zext_ln696_cast_fu_392_p1;
wire   [0:0] icmp_ln637_fu_459_p2;
wire   [0:0] xor_ln637_fu_453_p2;
wire   [14:0] tmp_4_fu_485_p4;
wire   [0:0] icmp_ln794_fu_495_p2;
wire   [15:0] x_fu_512_p3;
wire   [23:0] src_kernel_win_12_fu_564_p5;
wire   [0:0] or_ln783_fu_580_p2;
wire   [23:0] src_kernel_win_14_fu_584_p5;
wire   [0:0] xor_ln765_fu_630_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op88_store_state2;
reg    ap_enable_operation_88;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_enable_operation_82;
reg    ap_enable_operation_89;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_84;
reg    ap_enable_operation_90;
reg    ap_predicate_op95_store_state3;
reg    ap_enable_operation_95;
reg    ap_enable_operation_86;
reg    ap_enable_operation_91;
reg    ap_predicate_op94_store_state3;
reg    ap_enable_operation_94;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_940;
reg    ap_condition_946;
reg    ap_condition_952;
reg    ap_condition_956;
reg    ap_condition_959;
reg    ap_condition_962;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_done_reg = 1'b0;
end

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_RAM_AUTO_1R1W #(
    .DataWidth( 24 ),
    .AddressRange( 2160 ),
    .AddressWidth( 12 ))
k_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_address0),
    .ce0(k_buf_ce0),
    .we0(k_buf_we0),
    .d0(imgInput_data_dout),
    .q0(k_buf_q0)
);

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_1_RAM_AUTO_1R1W #(
    .DataWidth( 24 ),
    .AddressRange( 2160 ),
    .AddressWidth( 12 ))
k_buf_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_1_address0),
    .ce0(k_buf_1_ce0),
    .we0(k_buf_1_we0),
    .d0(k_buf_1_d0),
    .address1(k_buf_1_address1),
    .ce1(k_buf_1_ce1),
    .q1(k_buf_1_q1)
);

Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP_k_buf_1_RAM_AUTO_1R1W #(
    .DataWidth( 24 ),
    .AddressRange( 2160 ),
    .AddressWidth( 12 ))
k_buf_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(k_buf_2_address0),
    .ce0(k_buf_2_ce0),
    .we0(k_buf_2_we0),
    .d0(k_buf_2_d0),
    .address1(k_buf_2_address1),
    .ce1(k_buf_2_ce1),
    .q1(k_buf_2_q1)
);

Filter2d_accel_xFApplyFilter2D_16_16_3_3_3_s grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_kernel_pixel_0_0_val(src_kernel_win_1_fu_136),
    .p_kernel_pixel_0_1_val(src_kernel_win_6_reg_964),
    .p_kernel_pixel_0_2_val(src_kernel_win_7_out_i),
    .p_kernel_pixel_1_0_val(src_kernel_win_2_fu_140),
    .p_kernel_pixel_1_1_val(src_kernel_win_7_reg_971),
    .p_kernel_pixel_1_2_val(src_kernel_win_10_out_i),
    .p_kernel_pixel_2_0_val(src_kernel_win_4_fu_144),
    .p_kernel_pixel_2_1_val(src_kernel_win_8_reg_978),
    .p_kernel_pixel_2_2_val(src_kernel_win_8_out_i),
    .p_kernel_filter_0_0_val(p_filter_kernel_0_0_val1),
    .p_kernel_filter_0_1_val(p_filter_kernel_0_1_val2),
    .p_kernel_filter_0_2_val(p_filter_kernel_0_2_val3),
    .p_kernel_filter_1_0_val(p_filter_kernel_1_0_val4),
    .p_kernel_filter_1_1_val(p_filter_kernel_1_1_val5),
    .p_kernel_filter_1_2_val(p_filter_kernel_1_2_val6),
    .p_kernel_filter_2_0_val(p_filter_kernel_2_0_val7),
    .p_kernel_filter_2_1_val(p_filter_kernel_2_1_val8),
    .p_kernel_filter_2_2_val(p_filter_kernel_2_2_val9),
    .shift(shift),
    .ap_return(grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_return),
    .ap_ce(grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_ce)
);

Filter2d_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U84(
    .din0(src_kernel_win_11_reg_956),
    .din1(src_kernel_win_10_reg_948),
    .din2(src_kernel_win_9_fu_558_p3),
    .din3(locy),
    .dout(src_kernel_win_12_fu_564_p5)
);

Filter2d_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U85(
    .din0(src_kernel_win_11_reg_956),
    .din1(src_kernel_win_10_reg_948),
    .din2(src_kernel_win_9_fu_558_p3),
    .din3(locy_1),
    .dout(src_kernel_win_14_fu_584_p5)
);

Filter2d_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U86(
    .din0(src_kernel_win_11_reg_956),
    .din1(src_kernel_win_10_reg_948),
    .din2(src_kernel_win_9_fu_558_p3),
    .din3(locy_2),
    .dout(src_kernel_win_19_fu_616_p5)
);

Filter2d_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln709_fu_423_p2 == 1'd1))) begin
            j_fu_132 <= j_4_fu_429_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_132 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_kernel_win_1_fu_136 <= src_kernel_win;
        end else if ((1'b1 == ap_condition_956)) begin
            src_kernel_win_1_fu_136 <= src_kernel_win_11_reg_956;
        end else if ((1'b1 == ap_condition_952)) begin
            src_kernel_win_1_fu_136 <= 24'd0;
        end else if ((1'b1 == ap_condition_946)) begin
            src_kernel_win_1_fu_136 <= src_kernel_win_16_fu_651_p3;
        end else if ((1'b1 == ap_condition_940)) begin
            src_kernel_win_1_fu_136 <= src_kernel_win_13_fu_573_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_kernel_win_2_fu_140 <= src_kernel_win_3;
        end else if ((1'b1 == ap_condition_956)) begin
            src_kernel_win_2_fu_140 <= src_kernel_win_10_reg_948;
        end else if ((1'b1 == ap_condition_952)) begin
            src_kernel_win_2_fu_140 <= 24'd0;
        end else if ((1'b1 == ap_condition_946)) begin
            src_kernel_win_2_fu_140 <= src_kernel_win_17_fu_643_p3;
        end else if ((1'b1 == ap_condition_940)) begin
            src_kernel_win_2_fu_140 <= src_kernel_win_15_fu_593_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            src_kernel_win_4_fu_144 <= src_kernel_win_5;
        end else if ((1'b1 == ap_condition_956)) begin
            src_kernel_win_4_fu_144 <= src_kernel_win_9_fu_558_p3;
        end else if ((1'b1 == ap_condition_952)) begin
            src_kernel_win_4_fu_144 <= 24'd0;
        end else if ((1'b1 == ap_condition_946)) begin
            src_kernel_win_4_fu_144 <= src_kernel_win_18_fu_635_p3;
        end else if ((1'b1 == ap_condition_962)) begin
            src_kernel_win_4_fu_144 <= src_kernel_win_19_fu_616_p5;
        end else if ((1'b1 == ap_condition_959)) begin
            src_kernel_win_4_fu_144 <= 24'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln709_fu_423_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ImagLocx_reg_896 <= ImagLocx_fu_435_p2;
        and_ln637_reg_901 <= and_ln637_fu_465_p2;
        and_ln794_reg_915 <= and_ln794_fu_501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln637_reg_901_pp0_iter1_reg <= and_ln637_reg_901;
        and_ln794_reg_915_pp0_iter1_reg <= and_ln794_reg_915;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln709_reg_892 <= icmp_ln709_fu_423_p2;
        icmp_ln709_reg_892_pp0_iter1_reg <= icmp_ln709_reg_892;
        icmp_ln765_reg_910_pp0_iter1_reg <= icmp_ln765_reg_910;
        tmp_3_reg_906_pp0_iter1_reg <= tmp_3_reg_906;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln637_reg_901_pp0_iter2_reg <= and_ln637_reg_901_pp0_iter1_reg;
        and_ln794_reg_915_pp0_iter10_reg <= and_ln794_reg_915_pp0_iter9_reg;
        and_ln794_reg_915_pp0_iter2_reg <= and_ln794_reg_915_pp0_iter1_reg;
        and_ln794_reg_915_pp0_iter3_reg <= and_ln794_reg_915_pp0_iter2_reg;
        and_ln794_reg_915_pp0_iter4_reg <= and_ln794_reg_915_pp0_iter3_reg;
        and_ln794_reg_915_pp0_iter5_reg <= and_ln794_reg_915_pp0_iter4_reg;
        and_ln794_reg_915_pp0_iter6_reg <= and_ln794_reg_915_pp0_iter5_reg;
        and_ln794_reg_915_pp0_iter7_reg <= and_ln794_reg_915_pp0_iter6_reg;
        and_ln794_reg_915_pp0_iter8_reg <= and_ln794_reg_915_pp0_iter7_reg;
        and_ln794_reg_915_pp0_iter9_reg <= and_ln794_reg_915_pp0_iter8_reg;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln709_reg_892_pp0_iter2_reg <= icmp_ln709_reg_892_pp0_iter1_reg;
        icmp_ln709_reg_892_pp0_iter3_reg <= icmp_ln709_reg_892_pp0_iter2_reg;
        icmp_ln709_reg_892_pp0_iter4_reg <= icmp_ln709_reg_892_pp0_iter3_reg;
        icmp_ln709_reg_892_pp0_iter5_reg <= icmp_ln709_reg_892_pp0_iter4_reg;
        icmp_ln709_reg_892_pp0_iter6_reg <= icmp_ln709_reg_892_pp0_iter5_reg;
        icmp_ln709_reg_892_pp0_iter7_reg <= icmp_ln709_reg_892_pp0_iter6_reg;
        icmp_ln709_reg_892_pp0_iter8_reg <= icmp_ln709_reg_892_pp0_iter7_reg;
        icmp_ln709_reg_892_pp0_iter9_reg <= icmp_ln709_reg_892_pp0_iter8_reg;
        icmp_ln765_reg_910_pp0_iter2_reg <= icmp_ln765_reg_910_pp0_iter1_reg;
        src_kernel_win_6_reg_964_pp0_iter4_reg <= src_kernel_win_6_reg_964;
        src_kernel_win_6_reg_964_pp0_iter5_reg <= src_kernel_win_6_reg_964_pp0_iter4_reg;
        src_kernel_win_6_reg_964_pp0_iter6_reg <= src_kernel_win_6_reg_964_pp0_iter5_reg;
        src_kernel_win_6_reg_964_pp0_iter7_reg <= src_kernel_win_6_reg_964_pp0_iter6_reg;
        src_kernel_win_6_reg_964_pp0_iter8_reg <= src_kernel_win_6_reg_964_pp0_iter7_reg;
        src_kernel_win_6_reg_964_pp0_iter9_reg <= src_kernel_win_6_reg_964_pp0_iter8_reg;
        src_kernel_win_7_reg_971_pp0_iter4_reg <= src_kernel_win_7_reg_971;
        src_kernel_win_7_reg_971_pp0_iter5_reg <= src_kernel_win_7_reg_971_pp0_iter4_reg;
        src_kernel_win_7_reg_971_pp0_iter6_reg <= src_kernel_win_7_reg_971_pp0_iter5_reg;
        src_kernel_win_7_reg_971_pp0_iter7_reg <= src_kernel_win_7_reg_971_pp0_iter6_reg;
        src_kernel_win_7_reg_971_pp0_iter8_reg <= src_kernel_win_7_reg_971_pp0_iter7_reg;
        src_kernel_win_7_reg_971_pp0_iter9_reg <= src_kernel_win_7_reg_971_pp0_iter8_reg;
        src_kernel_win_8_reg_978_pp0_iter4_reg <= src_kernel_win_8_reg_978;
        src_kernel_win_8_reg_978_pp0_iter5_reg <= src_kernel_win_8_reg_978_pp0_iter4_reg;
        src_kernel_win_8_reg_978_pp0_iter6_reg <= src_kernel_win_8_reg_978_pp0_iter5_reg;
        src_kernel_win_8_reg_978_pp0_iter7_reg <= src_kernel_win_8_reg_978_pp0_iter6_reg;
        src_kernel_win_8_reg_978_pp0_iter8_reg <= src_kernel_win_8_reg_978_pp0_iter7_reg;
        src_kernel_win_8_reg_978_pp0_iter9_reg <= src_kernel_win_8_reg_978_pp0_iter8_reg;
        tmp_2_reg_919_pp0_iter2_reg <= tmp_2_reg_919;
        tmp_3_reg_906_pp0_iter2_reg <= tmp_3_reg_906_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_3_fu_471_p3 == 1'd0) & (brmerge31_read_read_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln637_fu_465_p2) & (icmp_ln709_fu_423_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln765_reg_910 <= icmp_ln765_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln709_reg_892 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_addr_reg_931 <= idxprom_fu_526_p1;
        k_buf_2_addr_reg_937 <= idxprom_fu_526_p1;
        tmp_2_reg_919 <= x_fu_512_p3[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln709_reg_892_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_load_reg_943 <= k_buf_2_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln709_reg_892_pp0_iter1_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_10_reg_948 <= src_kernel_win_10_fu_533_p3;
        src_kernel_win_11_reg_956 <= src_kernel_win_11_fu_541_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_6_reg_964 <= src_kernel_win_1_fu_136;
        src_kernel_win_7_reg_971 <= src_kernel_win_2_fu_140;
        src_kernel_win_8_reg_978 <= src_kernel_win_4_fu_144;
    end
end

always @ (posedge ap_clk) begin
    if (((brmerge31_read_read_fu_268_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd0 == and_ln637_fu_465_p2) & (icmp_ln709_fu_423_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_3_reg_906 <= ImagLocx_fu_435_p2[32'd15];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln709_fu_423_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_892_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_3 = 16'd0;
    end else begin
        ap_sig_allocacmp_j_3 = j_fu_132;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp137))) begin
        grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_ce = 1'b1;
    end else begin
        grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op87_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        imgInput_data_blk_n = imgInput_data_empty_n;
    end else begin
        imgInput_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op87_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgInput_data_read = 1'b1;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        imgOutput_data_blk_n = imgOutput_data_full_n;
    end else begin
        imgOutput_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        imgOutput_data_write = 1'b1;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_ce0 = 1'b1;
    end else begin
        k_buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_ce1 = 1'b1;
    end else begin
        k_buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901_pp0_iter1_reg) & (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_1_we0 = 1'b1;
    end else begin
        k_buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_ce0 = 1'b1;
    end else begin
        k_buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_ce1 = 1'b1;
    end else begin
        k_buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901_pp0_iter1_reg) & (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_2_we0 = 1'b1;
    end else begin
        k_buf_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_ce0 = 1'b1;
    end else begin
        k_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901) & (icmp_ln709_reg_892 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_buf_we0 = 1'b1;
    end else begin
        k_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_10_out_o = src_kernel_win_7_reg_971;
    end else begin
        src_kernel_win_10_out_o = src_kernel_win_10_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_10_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_10_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_892_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_11_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_11_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_892_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_6_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_7_out_o = src_kernel_win_6_reg_964;
    end else begin
        src_kernel_win_7_out_o = src_kernel_win_7_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_7_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_7_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        src_kernel_win_8_out_o = src_kernel_win_8_reg_978;
    end else begin
        src_kernel_win_8_out_o = src_kernel_win_8_out_i;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_8_out_o_ap_vld = 1'b1;
    end else begin
        src_kernel_win_8_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln709_reg_892_pp0_iter9_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_kernel_win_9_out_ap_vld = 1'b1;
    end else begin
        src_kernel_win_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ImagLocx_fu_435_p2 = ($signed(ap_sig_allocacmp_j_3) + $signed(16'd65535));

assign and_ln637_fu_465_p2 = (xor_ln637_fu_453_p2 & icmp_ln637_fu_459_p2);

assign and_ln794_fu_501_p2 = (icmp_ln794_fu_495_p2 & cmp245);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp137 = (((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg) & (ap_enable_reg_pp0_iter11 == 1'b1)) | ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_pp0_stage0_iter11 = ((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg));
end

always @ (*) begin
    ap_block_state12_pp0_stage0_iter11_ignore_call6 = ((imgOutput_data_full_n == 1'b0) & (1'd1 == and_ln794_reg_915_pp0_iter10_reg));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call6 = ((ap_predicate_op87_read_state2 == 1'b1) & (imgInput_data_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call6 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_940 = ((brmerge31_read_reg_888 == 1'd0) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (cmp200_read_reg_884 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_946 = ((brmerge31 == 1'd1) & (tmp_3_reg_906_pp0_iter2_reg == 1'd0) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln637_reg_901_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_952 = ((brmerge31 == 1'd1) & (tmp_3_reg_906_pp0_iter2_reg == 1'd1) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'd0 == and_ln637_reg_901_pp0_iter2_reg));
end

always @ (*) begin
    ap_condition_956 = ((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901_pp0_iter2_reg) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_959 = ((brmerge31_read_reg_888 == 1'd0) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (cmp200_read_reg_884 == 1'd1) & (tmp_reg_855 == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_condition_962 = ((brmerge31_read_reg_888 == 1'd0) & (icmp_ln709_reg_892_pp0_iter2_reg == 1'd1) & (cmp200_read_reg_884 == 1'd1) & (tmp_reg_855 == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1));
end

always @ (*) begin
    ap_enable_operation_82 = (icmp_ln709_reg_892 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_84 = (icmp_ln709_reg_892 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_86 = (icmp_ln709_reg_892 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_88 = (ap_predicate_op88_store_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_89 = (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_90 = (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_91 = (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_94 = (ap_predicate_op94_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_95 = (ap_predicate_op95_store_state3 == 1'b1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op137_call_state5 = ((1'd1 == and_ln794_reg_915_pp0_iter3_reg) & (icmp_ln709_reg_892_pp0_iter3_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op87_read_state2 = ((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901) & (icmp_ln709_reg_892 == 1'd1));
end

always @ (*) begin
    ap_predicate_op88_store_state2 = ((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901) & (icmp_ln709_reg_892 == 1'd1));
end

always @ (*) begin
    ap_predicate_op94_store_state3 = ((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901_pp0_iter1_reg) & (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1));
end

always @ (*) begin
    ap_predicate_op95_store_state3 = ((brmerge31 == 1'd1) & (1'd1 == and_ln637_reg_901_pp0_iter1_reg) & (icmp_ln709_reg_892_pp0_iter1_reg == 1'd1));
end

assign brmerge31_read_read_fu_268_p2 = brmerge31;

assign brmerge31_read_reg_888 = brmerge31;

assign cmp200_read_reg_884 = cmp200;

assign icmp_ln637_fu_459_p2 = (($signed(sext_ln637_fu_441_p1) < $signed(zext_ln696_cast_fu_392_p1)) ? 1'b1 : 1'b0);

assign icmp_ln709_fu_423_p2 = ((widthloop > zext_ln709_fu_419_p1) ? 1'b1 : 1'b0);

assign icmp_ln765_fu_479_p2 = (($signed(sext_ln637_fu_441_p1) < $signed(zext_ln696_cast_fu_392_p1)) ? 1'b1 : 1'b0);

assign icmp_ln794_fu_495_p2 = ((tmp_4_fu_485_p4 != 15'd0) ? 1'b1 : 1'b0);

assign idxprom_fu_526_p1 = x_fu_512_p3;

assign imgOutput_data_din = grp_xFApplyFilter2D_16_16_3_3_3_s_fu_368_ap_return;

assign j_4_fu_429_p2 = (ap_sig_allocacmp_j_3 + 16'd1);

assign k_buf_1_address0 = k_buf_1_addr_reg_931;

assign k_buf_1_address1 = idxprom_fu_526_p1;

assign k_buf_1_d0 = ((tmp_2_reg_919[0:0] == 1'b1) ? 24'd0 : k_buf_q0);

assign k_buf_2_address0 = k_buf_2_addr_reg_937;

assign k_buf_2_address1 = idxprom_fu_526_p1;

assign k_buf_2_d0 = ((tmp_2_reg_919[0:0] == 1'b1) ? 24'd0 : k_buf_1_q1);

assign k_buf_address0 = idxprom_fu_526_p1;

assign or_ln783_fu_580_p2 = (cmp226_1 | cmp220_1);

assign sext_ln637_fu_441_p1 = ImagLocx_fu_435_p2;

assign src_kernel_win_10_fu_533_p3 = ((tmp_2_reg_919[0:0] == 1'b1) ? 24'd0 : k_buf_1_q1);

assign src_kernel_win_11_fu_541_p3 = ((tmp_2_reg_919[0:0] == 1'b1) ? 24'd0 : k_buf_q0);

assign src_kernel_win_11_out = src_kernel_win_8_reg_978_pp0_iter9_reg;

assign src_kernel_win_13_fu_573_p3 = ((cmp1_i18[0:0] == 1'b1) ? src_kernel_win_12_fu_564_p5 : 24'd0);

assign src_kernel_win_15_fu_593_p3 = ((or_ln783_fu_580_p2[0:0] == 1'b1) ? 24'd0 : src_kernel_win_14_fu_584_p5);

assign src_kernel_win_16_fu_651_p3 = ((xor_ln765_fu_630_p2[0:0] == 1'b1) ? 24'd0 : src_kernel_win_1_fu_136);

assign src_kernel_win_17_fu_643_p3 = ((xor_ln765_fu_630_p2[0:0] == 1'b1) ? 24'd0 : src_kernel_win_2_fu_140);

assign src_kernel_win_18_fu_635_p3 = ((xor_ln765_fu_630_p2[0:0] == 1'b1) ? 24'd0 : src_kernel_win_4_fu_144);

assign src_kernel_win_6_out = src_kernel_win_6_reg_964_pp0_iter9_reg;

assign src_kernel_win_9_fu_558_p3 = ((tmp_2_reg_919_pp0_iter2_reg[0:0] == 1'b1) ? 24'd0 : k_buf_2_load_reg_943);

assign src_kernel_win_9_out = src_kernel_win_7_reg_971_pp0_iter9_reg;

assign tmp_1_fu_445_p3 = ImagLocx_fu_435_p2[32'd15];

assign tmp_3_fu_471_p3 = ImagLocx_fu_435_p2[32'd15];

assign tmp_4_fu_485_p4 = {{ap_sig_allocacmp_j_3[15:1]}};

assign tmp_reg_855 = empty;

assign x_fu_512_p3 = ((and_ln637_reg_901[0:0] == 1'b1) ? ImagLocx_reg_896 : 16'd65535);

assign xor_ln637_fu_453_p2 = (tmp_1_fu_445_p3 ^ 1'd1);

assign xor_ln765_fu_630_p2 = (icmp_ln765_reg_910_pp0_iter2_reg ^ 1'd1);

assign zext_ln696_cast_fu_392_p1 = zext_ln696;

assign zext_ln709_fu_419_p1 = ap_sig_allocacmp_j_3;

endmodule //Filter2d_accel_xFFilter2Dkernel_Pipeline_COL_LOOP
