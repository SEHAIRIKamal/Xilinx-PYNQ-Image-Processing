// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module sobel_accel_xFGradientY3x3_16_4_s (
        ap_clk,
        ap_rst,
        t0_val,
        t1_val,
        t2_val,
        b0_val,
        b1_val,
        b2_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] t0_val;
input  [14:0] t1_val;
input  [7:0] t2_val;
input  [15:0] b0_val;
input  [14:0] b1_val;
input  [7:0] b2_val;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg   [7:0] b2_val_read_reg_109;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [14:0] b1_val_read_reg_114;
wire   [15:0] out_pix_2_fu_82_p2;
reg   [15:0] out_pix_2_reg_119;
wire    ap_block_pp0_stage0;
wire   [15:0] zext_ln110_fu_66_p1;
wire   [15:0] add_ln109_1_fu_70_p2;
wire   [15:0] M00_fu_58_p3;
wire   [15:0] add_ln109_fu_76_p2;
wire   [15:0] M01_fu_88_p3;
wire   [15:0] zext_ln109_fu_95_p1;
wire   [15:0] add_ln115_fu_98_p2;
wire   [15:0] out_pix_fu_104_p2;
reg    ap_ce_reg;
reg   [15:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= out_pix_fu_104_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b1_val_read_reg_114 <= b1_val;
        b2_val_read_reg_109 <= b2_val;
        out_pix_2_reg_119 <= out_pix_2_fu_82_p2;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = out_pix_fu_104_p2;
    end else begin
        ap_return = 'bx;
    end
end

assign M00_fu_58_p3 = {{t1_val}, {1'd0}};

assign M01_fu_88_p3 = {{b1_val_read_reg_114}, {1'd0}};

assign add_ln109_1_fu_70_p2 = (zext_ln110_fu_66_p1 + t0_val);

assign add_ln109_fu_76_p2 = (add_ln109_1_fu_70_p2 + M00_fu_58_p3);

assign add_ln115_fu_98_p2 = (M01_fu_88_p3 + zext_ln109_fu_95_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign out_pix_2_fu_82_p2 = (b0_val - add_ln109_fu_76_p2);

assign out_pix_fu_104_p2 = (add_ln115_fu_98_p2 + out_pix_2_reg_119);

assign zext_ln109_fu_95_p1 = b2_val_read_reg_109;

assign zext_ln110_fu_66_p1 = t2_val;

endmodule //sobel_accel_xFGradientY3x3_16_4_s
