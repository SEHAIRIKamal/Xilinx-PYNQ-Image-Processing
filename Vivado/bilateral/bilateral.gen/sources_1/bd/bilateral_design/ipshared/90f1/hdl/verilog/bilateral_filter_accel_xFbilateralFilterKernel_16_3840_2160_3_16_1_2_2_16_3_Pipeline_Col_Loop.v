// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bilateral_filter_accel_xFbilateralFilterKernel_16_3840_2160_3_16_1_2_2_16_3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        imgwidth,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        row_ind_9,
        row_ind_8,
        row_ind_7,
        sub_i274_i_i_cast,
        spec_select1264,
        spec_select1268,
        spec_select1272,
        exp_lut_sigma_color_address0,
        exp_lut_sigma_color_ce0,
        exp_lut_sigma_color_q0,
        exp_lut_sigma_color_address1,
        exp_lut_sigma_color_ce1,
        exp_lut_sigma_color_q1,
        exp_lut_sigma_color_1_address0,
        exp_lut_sigma_color_1_ce0,
        exp_lut_sigma_color_1_q0,
        exp_lut_sigma_color_2_address0,
        exp_lut_sigma_color_2_ce0,
        exp_lut_sigma_color_2_q0,
        cmp_i_i65_i_i,
        grp_fu_715_p_din0,
        grp_fu_715_p_dout0,
        grp_fu_715_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] imgInput_data_dout;
input  [2:0] imgInput_data_num_data_valid;
input  [1:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [23:0] imgOutput_data_din;
input  [1:0] imgOutput_data_num_data_valid;
input  [1:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [15:0] imgwidth;
output  [11:0] buf_2_address0;
output   buf_2_ce0;
input  [23:0] buf_2_q0;
output  [11:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [23:0] buf_2_d1;
output  [11:0] buf_r_address0;
output   buf_r_ce0;
input  [23:0] buf_r_q0;
output  [11:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [23:0] buf_r_d1;
output  [11:0] buf_1_address0;
output   buf_1_ce0;
input  [23:0] buf_1_q0;
output  [11:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [23:0] buf_1_d1;
input  [1:0] row_ind_9;
input  [1:0] row_ind_8;
input  [1:0] row_ind_7;
input  [1:0] sub_i274_i_i_cast;
input  [0:0] spec_select1264;
input  [0:0] spec_select1268;
input  [0:0] spec_select1272;
output  [9:0] exp_lut_sigma_color_address0;
output   exp_lut_sigma_color_ce0;
input  [15:0] exp_lut_sigma_color_q0;
output  [9:0] exp_lut_sigma_color_address1;
output   exp_lut_sigma_color_ce1;
input  [15:0] exp_lut_sigma_color_q1;
output  [9:0] exp_lut_sigma_color_1_address0;
output   exp_lut_sigma_color_1_ce0;
input  [15:0] exp_lut_sigma_color_1_q0;
output  [9:0] exp_lut_sigma_color_2_address0;
output   exp_lut_sigma_color_2_ce0;
input  [15:0] exp_lut_sigma_color_2_q0;
input  [0:0] cmp_i_i65_i_i;
output  [31:0] grp_fu_715_p_din0;
input  [63:0] grp_fu_715_p_dout0;
output   grp_fu_715_p_ce;

reg ap_idle;
reg imgInput_data_read;
reg imgOutput_data_write;
reg buf_2_ce0;
reg buf_2_ce1;
reg buf_2_we1;
reg buf_r_ce0;
reg buf_r_ce1;
reg buf_r_we1;
reg buf_1_ce0;
reg buf_1_ce1;
reg buf_1_we1;
reg exp_lut_sigma_color_ce0;
reg exp_lut_sigma_color_ce1;
reg exp_lut_sigma_color_1_ce0;
reg exp_lut_sigma_color_2_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] and_ln191_reg_3645;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
reg   [0:0] icmp_ln336_reg_3664;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter35_reg;
reg    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_488_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    imgInput_data_blk_n;
wire    ap_block_pp0_stage0;
wire    imgOutput_data_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_9_read_reg_3621;
reg   [12:0] col_reg_3627;
reg   [12:0] col_reg_3627_pp0_iter1_reg;
wire   [0:0] icmp_ln191_fu_500_p2;
reg   [0:0] icmp_ln191_reg_3638;
reg   [0:0] icmp_ln191_reg_3638_pp0_iter1_reg;
reg   [0:0] icmp_ln191_reg_3638_pp0_iter2_reg;
wire   [0:0] and_ln191_fu_506_p2;
wire   [0:0] icmp_ln336_fu_529_p2;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter3_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter4_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter5_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter6_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter7_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter8_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter9_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter10_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter11_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter12_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter13_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter14_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter15_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter16_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter17_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter18_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter19_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter20_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter21_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter22_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter23_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter24_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter25_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter26_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter27_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter28_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter29_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter30_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter31_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter32_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter33_reg;
reg   [0:0] icmp_ln336_reg_3664_pp0_iter34_reg;
reg   [23:0] p_load132_reg_3669;
reg   [23:0] p_load132_reg_3669_pp0_iter4_reg;
reg   [23:0] p_load132_reg_3669_pp0_iter5_reg;
reg   [23:0] p_load132_reg_3669_pp0_iter6_reg;
reg   [23:0] p_load132_reg_3669_pp0_iter7_reg;
reg   [23:0] p_load132_reg_3669_pp0_iter8_reg;
wire   [23:0] select_ln328_1_fu_624_p3;
reg   [23:0] select_ln328_1_reg_3674;
wire   [7:0] trunc_ln92_fu_638_p1;
reg   [7:0] trunc_ln92_reg_3679;
reg   [7:0] trunc_ln92_reg_3679_pp0_iter4_reg;
reg   [7:0] trunc_ln92_reg_3679_pp0_iter5_reg;
wire   [8:0] zext_ln92_1_fu_650_p1;
reg   [8:0] zext_ln92_1_reg_3684;
wire   [7:0] tmp_5_fu_686_p4;
reg   [7:0] tmp_5_reg_3690;
reg   [7:0] tmp_5_reg_3690_pp0_iter4_reg;
reg   [7:0] tmp_5_reg_3690_pp0_iter5_reg;
wire   [8:0] zext_ln93_1_fu_710_p1;
reg   [8:0] zext_ln93_1_reg_3695;
wire   [7:0] tmp_9_fu_746_p4;
reg   [7:0] tmp_9_reg_3701;
reg   [7:0] tmp_9_reg_3701_pp0_iter4_reg;
reg   [7:0] tmp_9_reg_3701_pp0_iter5_reg;
wire   [8:0] zext_ln94_1_fu_770_p1;
reg   [8:0] zext_ln94_1_reg_3706;
wire   [9:0] add_ln68_fu_826_p2;
reg   [9:0] add_ln68_reg_3712;
reg   [0:0] tmp_12_reg_3718;
wire   [7:0] trunc_ln92_3_fu_840_p1;
reg   [7:0] trunc_ln92_3_reg_3723;
reg   [7:0] trunc_ln92_3_reg_3723_pp0_iter4_reg;
reg   [7:0] trunc_ln92_3_reg_3723_pp0_iter5_reg;
reg   [7:0] trunc_ln92_3_reg_3723_pp0_iter6_reg;
reg   [7:0] tmp_20_reg_3729;
reg   [7:0] tmp_20_reg_3729_pp0_iter4_reg;
reg   [7:0] tmp_20_reg_3729_pp0_iter5_reg;
reg   [7:0] tmp_20_reg_3729_pp0_iter6_reg;
reg   [7:0] tmp_22_reg_3735;
reg   [7:0] tmp_22_reg_3735_pp0_iter4_reg;
reg   [7:0] tmp_22_reg_3735_pp0_iter5_reg;
reg   [7:0] tmp_22_reg_3735_pp0_iter6_reg;
wire   [7:0] trunc_ln92_4_fu_864_p1;
reg   [7:0] trunc_ln92_4_reg_3741;
reg   [7:0] trunc_ln92_4_reg_3741_pp0_iter4_reg;
reg   [7:0] trunc_ln92_4_reg_3741_pp0_iter5_reg;
wire   [7:0] tmp_25_fu_904_p4;
reg   [7:0] tmp_25_reg_3746;
reg   [7:0] tmp_25_reg_3746_pp0_iter4_reg;
reg   [7:0] tmp_25_reg_3746_pp0_iter5_reg;
wire   [7:0] tmp_28_fu_950_p4;
reg   [7:0] tmp_28_reg_3751;
reg   [7:0] tmp_28_reg_3751_pp0_iter4_reg;
reg   [7:0] tmp_28_reg_3751_pp0_iter5_reg;
wire   [9:0] add_ln68_3_fu_1016_p2;
reg   [9:0] add_ln68_3_reg_3756;
reg   [0:0] tmp_30_reg_3762;
reg   [7:0] tmp_53_reg_3767;
reg   [7:0] tmp_53_reg_3767_pp0_iter4_reg;
reg   [7:0] tmp_53_reg_3767_pp0_iter5_reg;
reg   [7:0] tmp_53_reg_3767_pp0_iter6_reg;
reg   [7:0] tmp_53_reg_3767_pp0_iter7_reg;
reg   [7:0] tmp_53_reg_3767_pp0_iter8_reg;
reg   [7:0] tmp_56_reg_3772;
reg   [7:0] tmp_56_reg_3772_pp0_iter4_reg;
reg   [7:0] tmp_56_reg_3772_pp0_iter5_reg;
reg   [7:0] tmp_56_reg_3772_pp0_iter6_reg;
reg   [7:0] tmp_56_reg_3772_pp0_iter7_reg;
reg   [7:0] tmp_56_reg_3772_pp0_iter8_reg;
reg   [23:0] p_load133_reg_3777;
wire   [7:0] trunc_ln92_2_fu_1087_p1;
reg   [7:0] trunc_ln92_2_reg_3787;
reg   [7:0] trunc_ln92_2_reg_3787_pp0_iter5_reg;
reg   [7:0] trunc_ln92_2_reg_3787_pp0_iter6_reg;
wire   [7:0] tmp_14_fu_1126_p4;
reg   [7:0] tmp_14_reg_3792;
reg   [7:0] tmp_14_reg_3792_pp0_iter5_reg;
reg   [7:0] tmp_14_reg_3792_pp0_iter6_reg;
wire   [7:0] tmp_16_fu_1171_p4;
reg   [7:0] tmp_16_reg_3797;
reg   [7:0] tmp_16_reg_3797_pp0_iter5_reg;
reg   [7:0] tmp_16_reg_3797_pp0_iter6_reg;
wire   [9:0] add_ln68_1_fu_1236_p2;
reg   [9:0] add_ln68_1_reg_3802;
reg   [0:0] tmp_18_reg_3808;
wire   [9:0] add_ln68_2_fu_1372_p2;
reg   [9:0] add_ln68_2_reg_3813;
reg   [0:0] tmp_24_reg_3819;
reg   [15:0] color_weights_reg_3829;
reg   [15:0] color_weights_3_reg_3845;
reg   [15:0] color_weights_3_reg_3845_pp0_iter6_reg;
wire   [23:0] zext_ln107_fu_1444_p1;
reg   [15:0] color_weights_1_reg_3863;
reg   [15:0] color_weights_2_reg_3868;
wire   [16:0] empty_46_fu_1457_p2;
reg   [16:0] empty_46_reg_3874;
wire   [23:0] zext_ln107_7_fu_1463_p1;
wire   [23:0] mul_ln107_fu_1487_p2;
reg   [23:0] mul_ln107_reg_3911;
wire   [23:0] mul_ln107_1_fu_1499_p2;
reg   [23:0] mul_ln107_1_reg_3916;
wire   [19:0] weight_sum_fu_1546_p2;
reg   [19:0] weight_sum_reg_3921;
reg   [19:0] weight_sum_reg_3921_pp0_iter8_reg;
wire   [23:0] mul_ln107_4_fu_1555_p2;
reg   [23:0] mul_ln107_4_reg_3927;
wire   [23:0] mul_ln107_5_fu_1564_p2;
reg   [23:0] mul_ln107_5_reg_3932;
wire   [23:0] mul_ln107_8_fu_1573_p2;
reg   [23:0] mul_ln107_8_reg_3937;
wire   [23:0] mul_ln107_9_fu_1582_p2;
reg   [23:0] mul_ln107_9_reg_3942;
wire   [31:0] zext_ln64_fu_1594_p1;
reg   [31:0] zext_ln64_reg_3957;
wire   [31:0] sub_ln114_fu_1615_p2;
reg   [31:0] sub_ln114_reg_3963;
wire   [4:0] sub_ln114_3_fu_1625_p2;
reg   [4:0] sub_ln114_3_reg_3970;
wire   [7:0] trunc_ln114_1_fu_1631_p1;
reg   [7:0] trunc_ln114_1_reg_3975;
reg   [7:0] trunc_ln114_1_reg_3975_pp0_iter9_reg;
reg   [7:0] trunc_ln114_1_reg_3975_pp0_iter10_reg;
wire   [27:0] px_sum_1_fu_1680_p2;
reg   [27:0] px_sum_1_reg_4000;
reg   [27:0] px_sum_1_reg_4000_pp0_iter10_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter11_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter12_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter13_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter14_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter15_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter16_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter17_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter18_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter19_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter20_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter21_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter22_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter23_reg;
reg   [27:0] px_sum_1_reg_4000_pp0_iter24_reg;
wire   [1:0] or_ln_fu_1766_p3;
reg   [1:0] or_ln_reg_4007;
wire   [0:0] icmp_ln114_2_fu_1777_p2;
reg   [0:0] icmp_ln114_2_reg_4012;
wire   [63:0] lshr_ln114_fu_1792_p2;
reg   [63:0] lshr_ln114_reg_4017;
wire   [63:0] shl_ln114_fu_1807_p2;
reg   [63:0] shl_ln114_reg_4022;
wire   [27:0] px_sum_3_fu_1848_p2;
reg   [27:0] px_sum_3_reg_4027;
reg   [27:0] px_sum_3_reg_4027_pp0_iter10_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter11_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter12_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter13_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter14_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter15_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter16_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter17_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter18_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter19_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter20_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter21_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter22_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter23_reg;
reg   [27:0] px_sum_3_reg_4027_pp0_iter24_reg;
wire   [27:0] px_sum_5_fu_1889_p2;
reg   [27:0] px_sum_5_reg_4034;
reg   [27:0] px_sum_5_reg_4034_pp0_iter10_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter11_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter12_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter13_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter14_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter15_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter16_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter17_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter18_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter19_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter20_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter21_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter22_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter23_reg;
reg   [27:0] px_sum_5_reg_4034_pp0_iter24_reg;
reg   [62:0] lshr_ln114_1_reg_4041;
reg   [0:0] tmp_39_reg_4046;
wire   [31:0] LD_fu_1968_p1;
reg   [31:0] LD_reg_4051;
wire   [31:0] zext_ln65_1_fu_1976_p1;
reg   [31:0] zext_ln65_1_reg_4061;
wire   [31:0] sub_ln115_fu_1997_p2;
reg   [31:0] sub_ln115_reg_4067;
wire   [4:0] sub_ln115_9_fu_2007_p2;
reg   [4:0] sub_ln115_9_reg_4074;
wire   [7:0] trunc_ln115_1_fu_2013_p1;
reg   [7:0] trunc_ln115_1_reg_4079;
reg   [7:0] trunc_ln115_1_reg_4079_pp0_iter25_reg;
reg   [7:0] trunc_ln115_1_reg_4079_pp0_iter26_reg;
wire   [31:0] zext_ln65_3_fu_2017_p1;
reg   [31:0] zext_ln65_3_reg_4084;
wire   [31:0] sub_ln115_2_fu_2038_p2;
reg   [31:0] sub_ln115_2_reg_4090;
wire   [4:0] sub_ln115_10_fu_2048_p2;
reg   [4:0] sub_ln115_10_reg_4097;
wire   [7:0] trunc_ln115_3_fu_2054_p1;
reg   [7:0] trunc_ln115_3_reg_4102;
reg   [7:0] trunc_ln115_3_reg_4102_pp0_iter25_reg;
reg   [7:0] trunc_ln115_3_reg_4102_pp0_iter26_reg;
wire   [31:0] zext_ln65_5_fu_2058_p1;
reg   [31:0] zext_ln65_5_reg_4107;
wire   [31:0] sub_ln115_4_fu_2079_p2;
reg   [31:0] sub_ln115_4_reg_4113;
wire   [4:0] sub_ln115_11_fu_2089_p2;
reg   [4:0] sub_ln115_11_reg_4120;
wire   [7:0] trunc_ln115_5_fu_2095_p1;
reg   [7:0] trunc_ln115_5_reg_4125;
reg   [7:0] trunc_ln115_5_reg_4125_pp0_iter25_reg;
reg   [7:0] trunc_ln115_5_reg_4125_pp0_iter26_reg;
wire   [0:0] icmp_ln115_fu_2099_p2;
reg   [0:0] icmp_ln115_reg_4130;
reg   [0:0] icmp_ln115_reg_4130_pp0_iter26_reg;
wire   [1:0] or_ln1_fu_2184_p3;
reg   [1:0] or_ln1_reg_4135;
wire   [0:0] icmp_ln115_3_fu_2195_p2;
reg   [0:0] icmp_ln115_3_reg_4140;
wire   [63:0] lshr_ln115_fu_2210_p2;
reg   [63:0] lshr_ln115_reg_4145;
wire   [63:0] shl_ln115_fu_2225_p2;
reg   [63:0] shl_ln115_reg_4150;
wire   [0:0] icmp_ln115_4_fu_2231_p2;
reg   [0:0] icmp_ln115_4_reg_4155;
reg   [0:0] icmp_ln115_4_reg_4155_pp0_iter26_reg;
wire   [1:0] or_ln115_1_fu_2316_p3;
reg   [1:0] or_ln115_1_reg_4160;
wire   [0:0] icmp_ln115_7_fu_2327_p2;
reg   [0:0] icmp_ln115_7_reg_4165;
wire   [63:0] lshr_ln115_2_fu_2342_p2;
reg   [63:0] lshr_ln115_2_reg_4170;
wire   [63:0] shl_ln115_1_fu_2357_p2;
reg   [63:0] shl_ln115_1_reg_4175;
wire   [0:0] icmp_ln115_8_fu_2363_p2;
reg   [0:0] icmp_ln115_8_reg_4180;
reg   [0:0] icmp_ln115_8_reg_4180_pp0_iter26_reg;
wire   [1:0] or_ln115_2_fu_2448_p3;
reg   [1:0] or_ln115_2_reg_4185;
wire   [0:0] icmp_ln115_11_fu_2459_p2;
reg   [0:0] icmp_ln115_11_reg_4190;
wire   [63:0] lshr_ln115_4_fu_2474_p2;
reg   [63:0] lshr_ln115_4_reg_4195;
wire   [63:0] shl_ln115_2_fu_2489_p2;
reg   [63:0] shl_ln115_2_reg_4200;
reg   [62:0] lshr_ln115_1_reg_4205;
reg   [0:0] tmp_45_reg_4210;
reg   [62:0] lshr_ln115_3_reg_4215;
reg   [0:0] tmp_57_reg_4220;
reg   [62:0] lshr_ln115_5_reg_4225;
reg   [0:0] tmp_64_reg_4230;
wire   [31:0] grp_fu_442_p2;
reg   [31:0] val_reg_4235;
wire   [31:0] select_ln115_2_fu_2640_p3;
reg   [31:0] select_ln115_2_reg_4242;
wire   [31:0] select_ln115_5_fu_2696_p3;
reg   [31:0] select_ln115_5_reg_4247;
wire   [31:0] select_ln115_8_fu_2752_p3;
reg   [31:0] select_ln115_8_reg_4252;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] mul_val_reg_4257;
reg   [31:0] mul_val_reg_4257_pp0_iter32_reg;
reg   [31:0] mul_val_reg_4257_pp0_iter33_reg;
reg   [31:0] mul_val_reg_4257_pp0_iter34_reg;
reg   [31:0] mul_val_reg_4257_pp0_iter35_reg;
wire   [31:0] grp_fu_434_p2;
reg   [31:0] mul_val_1_reg_4263;
reg   [31:0] mul_val_1_reg_4263_pp0_iter32_reg;
reg   [31:0] mul_val_1_reg_4263_pp0_iter33_reg;
reg   [31:0] mul_val_1_reg_4263_pp0_iter34_reg;
reg   [31:0] mul_val_1_reg_4263_pp0_iter35_reg;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] mul_val_2_reg_4269;
reg   [31:0] mul_val_2_reg_4269_pp0_iter32_reg;
reg   [31:0] mul_val_2_reg_4269_pp0_iter33_reg;
reg   [31:0] mul_val_2_reg_4269_pp0_iter34_reg;
reg   [31:0] mul_val_2_reg_4269_pp0_iter35_reg;
wire   [62:0] trunc_ln116_fu_2763_p1;
reg   [62:0] trunc_ln116_reg_4275;
reg   [0:0] tmp_46_reg_4280;
reg   [10:0] tmp_49_reg_4285;
wire   [51:0] trunc_ln116_1_fu_2785_p1;
reg   [51:0] trunc_ln116_1_reg_4290;
wire   [62:0] trunc_ln116_6_fu_2793_p1;
reg   [62:0] trunc_ln116_6_reg_4295;
reg   [0:0] tmp_58_reg_4300;
reg   [10:0] tmp_59_reg_4305;
wire   [51:0] trunc_ln116_7_fu_2815_p1;
reg   [51:0] trunc_ln116_7_reg_4310;
wire   [62:0] trunc_ln116_12_fu_2823_p1;
reg   [62:0] trunc_ln116_12_reg_4315;
reg   [0:0] tmp_65_reg_4320;
reg   [10:0] tmp_66_reg_4325;
wire   [51:0] trunc_ln116_13_fu_2845_p1;
reg   [51:0] trunc_ln116_13_reg_4330;
wire   [53:0] select_ln116_fu_2869_p3;
reg   [53:0] select_ln116_reg_4335;
wire   [0:0] icmp_ln116_fu_2876_p2;
reg   [0:0] icmp_ln116_reg_4340;
wire   [0:0] icmp_ln116_1_fu_2887_p2;
reg   [0:0] icmp_ln116_1_reg_4347;
wire  signed [11:0] select_ln116_1_fu_2905_p3;
reg  signed [11:0] select_ln116_1_reg_4352;
wire   [0:0] icmp_ln116_2_fu_2913_p2;
reg   [0:0] icmp_ln116_2_reg_4358;
wire   [23:0] trunc_ln116_2_fu_2919_p1;
reg   [23:0] trunc_ln116_2_reg_4364;
wire   [0:0] icmp_ln116_4_fu_2933_p2;
reg   [0:0] icmp_ln116_4_reg_4370;
wire   [53:0] select_ln116_4_fu_2959_p3;
reg   [53:0] select_ln116_4_reg_4375;
wire   [0:0] icmp_ln116_5_fu_2966_p2;
reg   [0:0] icmp_ln116_5_reg_4380;
wire   [0:0] icmp_ln116_6_fu_2977_p2;
reg   [0:0] icmp_ln116_6_reg_4387;
wire  signed [11:0] select_ln116_5_fu_2995_p3;
reg  signed [11:0] select_ln116_5_reg_4392;
wire   [0:0] icmp_ln116_7_fu_3003_p2;
reg   [0:0] icmp_ln116_7_reg_4398;
wire   [23:0] trunc_ln116_8_fu_3009_p1;
reg   [23:0] trunc_ln116_8_reg_4404;
wire   [0:0] icmp_ln116_9_fu_3023_p2;
reg   [0:0] icmp_ln116_9_reg_4410;
wire   [53:0] select_ln116_8_fu_3049_p3;
reg   [53:0] select_ln116_8_reg_4415;
wire   [0:0] icmp_ln116_10_fu_3056_p2;
reg   [0:0] icmp_ln116_10_reg_4420;
wire   [0:0] icmp_ln116_11_fu_3067_p2;
reg   [0:0] icmp_ln116_11_reg_4427;
wire  signed [11:0] select_ln116_9_fu_3085_p3;
reg  signed [11:0] select_ln116_9_reg_4432;
wire   [0:0] icmp_ln116_12_fu_3093_p2;
reg   [0:0] icmp_ln116_12_reg_4438;
wire   [23:0] trunc_ln116_14_fu_3099_p1;
reg   [23:0] trunc_ln116_14_reg_4444;
wire   [0:0] icmp_ln116_14_fu_3113_p2;
reg   [0:0] icmp_ln116_14_reg_4450;
wire   [0:0] icmp_ln116_3_fu_3122_p2;
reg   [0:0] icmp_ln116_3_reg_4455;
wire   [53:0] ashr_ln116_fu_3131_p2;
reg   [53:0] ashr_ln116_reg_4460;
wire   [23:0] select_ln116_13_fu_3169_p3;
reg   [23:0] select_ln116_13_reg_4465;
wire   [0:0] and_ln116_1_fu_3186_p2;
reg   [0:0] and_ln116_1_reg_4470;
wire   [0:0] icmp_ln116_8_fu_3194_p2;
reg   [0:0] icmp_ln116_8_reg_4475;
wire   [53:0] ashr_ln116_1_fu_3203_p2;
reg   [53:0] ashr_ln116_1_reg_4480;
wire   [23:0] select_ln116_16_fu_3241_p3;
reg   [23:0] select_ln116_16_reg_4485;
wire   [0:0] and_ln116_3_fu_3258_p2;
reg   [0:0] and_ln116_3_reg_4490;
wire   [0:0] icmp_ln116_13_fu_3266_p2;
reg   [0:0] icmp_ln116_13_reg_4495;
wire   [53:0] ashr_ln116_2_fu_3275_p2;
reg   [53:0] ashr_ln116_2_reg_4500;
wire   [23:0] select_ln116_19_fu_3313_p3;
reg   [23:0] select_ln116_19_reg_4505;
wire   [0:0] and_ln116_5_fu_3330_p2;
reg   [0:0] and_ln116_5_reg_4510;
wire   [63:0] zext_ln192_fu_517_p1;
wire   [63:0] conv_i190_i_i_fu_523_p1;
wire   [63:0] zext_ln106_fu_1082_p1;
wire   [63:0] zext_ln106_3_fu_1397_p1;
wire   [63:0] zext_ln106_1_fu_1423_p1;
wire   [63:0] zext_ln106_2_fu_1439_p1;
reg   [12:0] col_4_fu_214;
wire   [12:0] col_5_fu_494_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col;
reg   [23:0] empty_fu_218;
wire   [23:0] select_ln328_fu_617_p3;
reg   [23:0] empty_43_fu_222;
reg   [23:0] empty_44_fu_226;
wire   [23:0] select_ln328_2_fu_631_p3;
reg   [23:0] empty_45_fu_230;
wire   [23:0] select_ln349_fu_1402_p3;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_442_p1;
wire   [15:0] zext_ln185_fu_484_p1;
wire   [1:0] trunc_ln_fu_543_p5;
wire   [23:0] tmp_s_fu_551_p5;
wire   [23:0] tmp_2_fu_563_p5;
wire   [23:0] tmp_3_fu_581_p5;
wire   [23:0] tmp_4_fu_599_p5;
wire   [23:0] p_0_0_06691279_fu_574_p3;
wire   [23:0] p_0_0_0669_11280_fu_592_p3;
wire   [23:0] p_0_0_0669_21281_fu_610_p3;
wire   [7:0] trunc_ln92_1_fu_642_p1;
wire   [8:0] zext_ln92_fu_646_p1;
wire   [8:0] sub_ln61_12_fu_654_p2;
wire   [0:0] tmp_6_fu_666_p3;
wire   [8:0] sub_ln61_fu_660_p2;
wire   [8:0] select_ln61_fu_674_p3;
wire   [7:0] tmp_7_fu_696_p4;
wire   [8:0] zext_ln93_fu_706_p1;
wire   [8:0] sub_ln61_13_fu_714_p2;
wire   [0:0] tmp_8_fu_726_p3;
wire   [8:0] sub_ln61_1_fu_720_p2;
wire   [8:0] select_ln61_1_fu_734_p3;
wire   [7:0] tmp_10_fu_756_p4;
wire   [8:0] zext_ln94_fu_766_p1;
wire   [8:0] sub_ln61_14_fu_774_p2;
wire   [0:0] tmp_11_fu_786_p3;
wire   [8:0] sub_ln61_2_fu_780_p2;
wire  signed [8:0] select_ln61_2_fu_794_p3;
wire  signed [9:0] sext_ln94_fu_742_p1;
wire  signed [9:0] sext_ln93_fu_682_p1;
wire  signed [9:0] add_ln93_fu_806_p2;
wire  signed [10:0] sext_ln92_fu_812_p1;
wire  signed [10:0] sext_ln93_1_fu_802_p1;
wire  signed [9:0] sext_ln92_4_fu_816_p1;
wire   [10:0] diffpx_fu_820_p2;
wire   [8:0] zext_ln92_5_fu_868_p1;
wire   [8:0] sub_ln61_21_fu_872_p2;
wire   [0:0] tmp_26_fu_884_p3;
wire   [8:0] sub_ln61_9_fu_878_p2;
wire   [8:0] select_ln61_9_fu_892_p3;
wire   [8:0] zext_ln93_4_fu_914_p1;
wire   [8:0] sub_ln61_22_fu_918_p2;
wire   [0:0] tmp_27_fu_930_p3;
wire   [8:0] sub_ln61_10_fu_924_p2;
wire   [8:0] select_ln61_10_fu_938_p3;
wire   [8:0] zext_ln94_4_fu_960_p1;
wire   [8:0] sub_ln61_23_fu_964_p2;
wire   [0:0] tmp_29_fu_976_p3;
wire   [8:0] sub_ln61_11_fu_970_p2;
wire  signed [8:0] select_ln61_11_fu_984_p3;
wire  signed [9:0] sext_ln94_3_fu_946_p1;
wire  signed [9:0] sext_ln93_6_fu_900_p1;
wire  signed [9:0] add_ln93_3_fu_996_p2;
wire  signed [10:0] sext_ln92_3_fu_1002_p1;
wire  signed [10:0] sext_ln93_7_fu_992_p1;
wire  signed [9:0] sext_ln92_7_fu_1006_p1;
wire   [10:0] diffpx_9_fu_1010_p2;
wire   [9:0] diffpx_1_fu_1071_p2;
wire   [9:0] diffpx_2_fu_1076_p3;
wire   [8:0] zext_ln92_2_fu_1091_p1;
wire   [8:0] sub_ln61_15_fu_1095_p2;
wire   [0:0] tmp_13_fu_1106_p3;
wire   [8:0] sub_ln61_3_fu_1100_p2;
wire   [8:0] select_ln61_3_fu_1114_p3;
wire   [8:0] zext_ln93_2_fu_1136_p1;
wire   [8:0] sub_ln61_16_fu_1140_p2;
wire   [0:0] tmp_15_fu_1151_p3;
wire   [8:0] sub_ln61_4_fu_1145_p2;
wire   [8:0] select_ln61_4_fu_1159_p3;
wire   [8:0] zext_ln94_2_fu_1181_p1;
wire   [8:0] sub_ln61_17_fu_1185_p2;
wire   [0:0] tmp_17_fu_1196_p3;
wire   [8:0] sub_ln61_5_fu_1190_p2;
wire  signed [8:0] select_ln61_5_fu_1204_p3;
wire  signed [9:0] sext_ln94_1_fu_1167_p1;
wire  signed [9:0] sext_ln93_2_fu_1122_p1;
wire  signed [9:0] add_ln93_1_fu_1216_p2;
wire  signed [10:0] sext_ln92_1_fu_1222_p1;
wire  signed [10:0] sext_ln93_3_fu_1212_p1;
wire  signed [9:0] sext_ln92_5_fu_1226_p1;
wire   [10:0] diffpx_3_fu_1230_p2;
wire   [8:0] zext_ln92_4_fu_1250_p1;
wire   [8:0] sub_ln61_18_fu_1253_p2;
wire   [0:0] tmp_19_fu_1264_p3;
wire   [8:0] sub_ln61_6_fu_1258_p2;
wire   [8:0] select_ln61_6_fu_1272_p3;
wire   [8:0] zext_ln93_3_fu_1284_p1;
wire   [8:0] sub_ln61_19_fu_1287_p2;
wire   [0:0] tmp_21_fu_1298_p3;
wire   [8:0] sub_ln61_7_fu_1292_p2;
wire   [8:0] select_ln61_7_fu_1306_p3;
wire   [8:0] zext_ln94_3_fu_1318_p1;
wire   [8:0] sub_ln61_20_fu_1321_p2;
wire   [0:0] tmp_23_fu_1332_p3;
wire   [8:0] sub_ln61_8_fu_1326_p2;
wire  signed [8:0] select_ln61_8_fu_1340_p3;
wire  signed [9:0] sext_ln94_2_fu_1314_p1;
wire  signed [9:0] sext_ln93_4_fu_1280_p1;
wire  signed [9:0] add_ln93_2_fu_1352_p2;
wire  signed [10:0] sext_ln92_2_fu_1358_p1;
wire  signed [10:0] sext_ln93_5_fu_1348_p1;
wire  signed [9:0] sext_ln92_6_fu_1362_p1;
wire   [10:0] diffpx_6_fu_1366_p2;
wire   [9:0] diffpx_10_fu_1386_p2;
wire   [9:0] diffpx_11_fu_1391_p3;
wire   [9:0] diffpx_4_fu_1412_p2;
wire   [9:0] diffpx_5_fu_1417_p3;
wire   [9:0] diffpx_7_fu_1428_p2;
wire   [9:0] diffpx_8_fu_1433_p3;
wire   [16:0] color_weights_1_cast39_fu_1453_p1;
wire   [16:0] color_weights_cast40_fu_1450_p1;
wire   [15:0] mul_ln107_fu_1487_p0;
wire   [23:0] zext_ln107_2_fu_1481_p1;
wire   [7:0] mul_ln107_fu_1487_p1;
wire   [15:0] mul_ln107_1_fu_1499_p0;
wire   [23:0] zext_ln107_5_fu_1493_p1;
wire   [7:0] mul_ln107_1_fu_1499_p1;
wire   [17:0] p_cast_fu_1508_p1;
wire   [17:0] color_weights_2_cast41_fu_1505_p1;
wire   [17:0] tmp336_fu_1511_p2;
wire   [16:0] shl_ln1_fu_1525_p3;
wire   [18:0] tmp25_fu_1517_p3;
wire   [18:0] weight_sum_2_fu_1536_p2;
wire   [19:0] zext_ln108_1_fu_1542_p1;
wire   [19:0] zext_ln108_fu_1532_p1;
wire   [15:0] mul_ln107_4_fu_1555_p0;
wire   [7:0] mul_ln107_4_fu_1555_p1;
wire   [15:0] mul_ln107_5_fu_1564_p0;
wire   [7:0] mul_ln107_5_fu_1564_p1;
wire   [15:0] mul_ln107_8_fu_1573_p0;
wire   [7:0] mul_ln107_8_fu_1573_p1;
wire   [15:0] mul_ln107_9_fu_1582_p0;
wire   [7:0] mul_ln107_9_fu_1582_p1;
reg   [31:0] tmp_31_fu_1597_p4;
reg   [31:0] tmp_32_fu_1607_p3;
wire   [4:0] trunc_ln114_fu_1621_p1;
wire   [23:0] shl_ln107_fu_1647_p2;
wire   [24:0] grp_fu_3499_p3;
wire   [24:0] grp_fu_3508_p3;
wire   [25:0] tmp41_cast_fu_1659_p1;
wire   [25:0] tmp_cast_fu_1656_p1;
wire   [25:0] tmp35_fu_1662_p2;
wire   [26:0] tmp31_fu_1668_p3;
wire   [27:0] zext_ln107_9_fu_1676_p1;
wire   [27:0] zext_ln92_3_fu_1652_p1;
wire   [31:0] add_ln114_fu_1686_p2;
wire   [30:0] tmp_33_fu_1691_p4;
wire   [31:0] zext_ln114_5_fu_1707_p1;
wire   [31:0] lshr_ln114_2_fu_1710_p2;
wire   [31:0] and_ln114_2_fu_1716_p2;
wire   [0:0] icmp_ln114_fu_1701_p2;
wire   [0:0] icmp_ln114_1_fu_1721_p2;
wire   [0:0] tmp_37_fu_1733_p3;
wire   [0:0] bit_select_i_i116_i_i_i_fu_1747_p3;
wire   [0:0] xor_ln114_fu_1741_p2;
wire   [0:0] and_ln114_1_fu_1754_p2;
wire   [0:0] and_ln114_fu_1727_p2;
wire   [0:0] or_ln114_fu_1760_p2;
wire   [31:0] add_ln114_1_fu_1783_p2;
wire   [63:0] zext_ln114_fu_1774_p1;
wire   [63:0] zext_ln114_1_fu_1788_p1;
wire   [31:0] sub_ln114_1_fu_1798_p2;
wire   [63:0] zext_ln114_2_fu_1803_p1;
wire   [23:0] shl_ln107_1_fu_1813_p3;
wire   [24:0] grp_fu_3517_p3;
wire   [24:0] grp_fu_3526_p3;
wire   [25:0] tmp42_cast_fu_1827_p1;
wire   [25:0] tmp38_cast_fu_1824_p1;
wire   [25:0] tmp44_fu_1830_p2;
wire   [26:0] tmp45_fu_1836_p3;
wire   [27:0] zext_ln107_15_fu_1844_p1;
wire   [27:0] zext_ln68_fu_1820_p1;
wire   [23:0] shl_ln107_2_fu_1854_p3;
wire   [24:0] grp_fu_3535_p3;
wire   [24:0] grp_fu_3544_p3;
wire   [25:0] tmp43_cast_fu_1868_p1;
wire   [25:0] tmp48_cast_fu_1865_p1;
wire   [25:0] tmp54_fu_1871_p2;
wire   [26:0] tmp55_fu_1877_p3;
wire   [27:0] zext_ln107_21_fu_1885_p1;
wire   [27:0] zext_ln68_1_fu_1861_p1;
wire   [63:0] select_ln114_fu_1895_p3;
wire   [63:0] zext_ln114_3_fu_1900_p1;
wire   [63:0] add_ln114_2_fu_1903_p2;
wire   [7:0] sub_ln114_2_fu_1937_p2;
wire   [7:0] select_ln114_1_fu_1930_p3;
wire   [7:0] add_ln114_3_fu_1942_p2;
wire   [63:0] zext_ln114_4_fu_1927_p1;
wire   [8:0] tmp_34_fu_1948_p3;
wire   [63:0] pi_assign_fu_1956_p5;
reg   [31:0] tmp_35_fu_1979_p4;
reg   [31:0] tmp_36_fu_1989_p3;
wire   [4:0] trunc_ln115_fu_2003_p1;
reg   [31:0] tmp_41_fu_2020_p4;
reg   [31:0] tmp_42_fu_2030_p3;
wire   [4:0] trunc_ln115_2_fu_2044_p1;
reg   [31:0] tmp_47_fu_2061_p4;
reg   [31:0] tmp_48_fu_2071_p3;
wire   [4:0] trunc_ln115_4_fu_2085_p1;
wire   [31:0] add_ln115_fu_2104_p2;
wire   [30:0] tmp_40_fu_2109_p4;
wire   [31:0] zext_ln115_15_fu_2125_p1;
wire   [31:0] lshr_ln115_6_fu_2128_p2;
wire   [31:0] and_ln115_6_fu_2134_p2;
wire   [0:0] icmp_ln115_1_fu_2119_p2;
wire   [0:0] icmp_ln115_2_fu_2139_p2;
wire   [0:0] tmp_43_fu_2151_p3;
wire   [0:0] bit_select_i_i_i_i_i_fu_2165_p3;
wire   [0:0] xor_ln115_fu_2159_p2;
wire   [0:0] and_ln115_1_fu_2172_p2;
wire   [0:0] and_ln115_fu_2145_p2;
wire   [0:0] or_ln115_3_fu_2178_p2;
wire   [31:0] add_ln115_1_fu_2201_p2;
wire   [63:0] zext_ln115_fu_2192_p1;
wire   [63:0] zext_ln115_1_fu_2206_p1;
wire   [31:0] sub_ln115_1_fu_2216_p2;
wire   [63:0] zext_ln115_2_fu_2221_p1;
wire   [31:0] add_ln115_4_fu_2236_p2;
wire   [30:0] tmp_54_fu_2241_p4;
wire   [31:0] zext_ln115_16_fu_2257_p1;
wire   [31:0] lshr_ln115_7_fu_2260_p2;
wire   [31:0] and_ln115_7_fu_2266_p2;
wire   [0:0] icmp_ln115_5_fu_2251_p2;
wire   [0:0] icmp_ln115_6_fu_2271_p2;
wire   [0:0] tmp_55_fu_2283_p3;
wire   [0:0] bit_select_i_i_i_i_i_1_fu_2297_p3;
wire   [0:0] xor_ln115_1_fu_2291_p2;
wire   [0:0] and_ln115_3_fu_2304_p2;
wire   [0:0] and_ln115_2_fu_2277_p2;
wire   [0:0] or_ln115_fu_2310_p2;
wire   [31:0] add_ln115_5_fu_2333_p2;
wire   [63:0] zext_ln115_4_fu_2324_p1;
wire   [63:0] zext_ln115_5_fu_2338_p1;
wire   [31:0] sub_ln115_3_fu_2348_p2;
wire   [63:0] zext_ln115_6_fu_2353_p1;
wire   [31:0] add_ln115_8_fu_2368_p2;
wire   [30:0] tmp_62_fu_2373_p4;
wire   [31:0] zext_ln115_17_fu_2389_p1;
wire   [31:0] lshr_ln115_8_fu_2392_p2;
wire   [31:0] and_ln115_8_fu_2398_p2;
wire   [0:0] icmp_ln115_9_fu_2383_p2;
wire   [0:0] icmp_ln115_10_fu_2403_p2;
wire   [0:0] tmp_63_fu_2415_p3;
wire   [0:0] bit_select_i_i_i_i_i_2_fu_2429_p3;
wire   [0:0] xor_ln115_2_fu_2423_p2;
wire   [0:0] and_ln115_5_fu_2436_p2;
wire   [0:0] and_ln115_4_fu_2409_p2;
wire   [0:0] or_ln115_4_fu_2442_p2;
wire   [31:0] add_ln115_9_fu_2465_p2;
wire   [63:0] zext_ln115_8_fu_2456_p1;
wire   [63:0] zext_ln115_9_fu_2470_p1;
wire   [31:0] sub_ln115_5_fu_2480_p2;
wire   [63:0] zext_ln115_10_fu_2485_p1;
wire   [63:0] select_ln115_fu_2495_p3;
wire   [63:0] zext_ln115_3_fu_2500_p1;
wire   [63:0] add_ln115_2_fu_2503_p2;
wire   [63:0] select_ln115_3_fu_2527_p3;
wire   [63:0] zext_ln115_7_fu_2532_p1;
wire   [63:0] add_ln115_6_fu_2535_p2;
wire   [63:0] select_ln115_6_fu_2559_p3;
wire   [63:0] zext_ln115_11_fu_2564_p1;
wire   [63:0] add_ln115_10_fu_2567_p2;
wire   [7:0] sub_ln115_6_fu_2601_p2;
wire   [7:0] select_ln115_1_fu_2594_p3;
wire   [7:0] add_ln115_3_fu_2606_p2;
wire   [63:0] zext_ln115_12_fu_2591_p1;
wire   [8:0] tmp_38_fu_2612_p3;
wire   [63:0] pi_assign_1_fu_2620_p5;
wire   [31:0] LD_1_fu_2632_p1;
wire   [31:0] bitcast_ln766_1_fu_2636_p1;
wire   [7:0] sub_ln115_7_fu_2657_p2;
wire   [7:0] select_ln115_4_fu_2650_p3;
wire   [7:0] add_ln115_7_fu_2662_p2;
wire   [63:0] zext_ln115_13_fu_2647_p1;
wire   [8:0] tmp_44_fu_2668_p3;
wire   [63:0] pi_assign_2_fu_2676_p5;
wire   [31:0] LD_3_fu_2688_p1;
wire   [31:0] bitcast_ln766_2_fu_2692_p1;
wire   [7:0] sub_ln115_8_fu_2713_p2;
wire   [7:0] select_ln115_7_fu_2706_p3;
wire   [7:0] add_ln115_11_fu_2718_p2;
wire   [63:0] zext_ln115_14_fu_2703_p1;
wire   [8:0] tmp_50_fu_2724_p3;
wire   [63:0] pi_assign_3_fu_2732_p5;
wire   [31:0] LD_5_fu_2744_p1;
wire   [31:0] bitcast_ln766_3_fu_2748_p1;
wire   [63:0] bitcast_ln724_1_fu_2759_p1;
wire   [63:0] grp_fu_450_p1;
wire   [63:0] bitcast_ln724_2_fu_2789_p1;
wire   [63:0] grp_fu_453_p1;
wire   [63:0] bitcast_ln724_3_fu_2819_p1;
wire   [52:0] zext_ln116_1_cast_fu_2852_p3;
wire   [53:0] zext_ln116_1_fu_2859_p1;
wire   [53:0] sub_ln116_fu_2863_p2;
wire   [11:0] zext_ln116_fu_2849_p1;
wire   [11:0] sub_ln116_1_fu_2881_p2;
wire   [11:0] add_ln116_fu_2893_p2;
wire   [11:0] sub_ln116_2_fu_2899_p2;
wire   [6:0] tmp_52_fu_2923_p4;
wire   [52:0] zext_ln116_5_cast_fu_2942_p3;
wire   [53:0] zext_ln116_5_fu_2949_p1;
wire   [53:0] sub_ln116_3_fu_2953_p2;
wire   [11:0] zext_ln116_4_fu_2939_p1;
wire   [11:0] sub_ln116_4_fu_2971_p2;
wire   [11:0] add_ln116_2_fu_2983_p2;
wire   [11:0] sub_ln116_5_fu_2989_p2;
wire   [6:0] tmp_61_fu_3013_p4;
wire   [52:0] zext_ln116_9_cast_fu_3032_p3;
wire   [53:0] zext_ln116_9_fu_3039_p1;
wire   [53:0] sub_ln116_6_fu_3043_p2;
wire   [11:0] zext_ln116_8_fu_3029_p1;
wire   [11:0] sub_ln116_7_fu_3061_p2;
wire   [11:0] add_ln116_4_fu_3073_p2;
wire   [11:0] sub_ln116_8_fu_3079_p2;
wire   [6:0] tmp_68_fu_3103_p4;
wire  signed [31:0] sext_ln116_fu_3119_p1;
wire   [53:0] zext_ln116_2_fu_3127_p1;
wire   [23:0] sext_ln116cast_fu_3136_p1;
wire   [23:0] shl_ln116_fu_3140_p2;
wire   [23:0] select_ln116_3_fu_3145_p3;
wire   [0:0] xor_ln116_fu_3159_p2;
wire   [0:0] and_ln116_fu_3164_p2;
wire   [23:0] select_ln116_12_fu_3152_p3;
wire   [0:0] or_ln116_fu_3176_p2;
wire   [0:0] xor_ln116_1_fu_3180_p2;
wire  signed [31:0] sext_ln116_1_fu_3191_p1;
wire   [53:0] zext_ln116_6_fu_3199_p1;
wire   [23:0] sext_ln116_1cast_fu_3208_p1;
wire   [23:0] shl_ln116_1_fu_3212_p2;
wire   [23:0] select_ln116_7_fu_3217_p3;
wire   [0:0] xor_ln116_2_fu_3231_p2;
wire   [0:0] and_ln116_2_fu_3236_p2;
wire   [23:0] select_ln116_15_fu_3224_p3;
wire   [0:0] or_ln116_1_fu_3248_p2;
wire   [0:0] xor_ln116_3_fu_3252_p2;
wire  signed [31:0] sext_ln116_2_fu_3263_p1;
wire   [53:0] zext_ln116_10_fu_3271_p1;
wire   [23:0] sext_ln116_2cast_fu_3280_p1;
wire   [23:0] shl_ln116_2_fu_3284_p2;
wire   [23:0] select_ln116_11_fu_3289_p3;
wire   [0:0] xor_ln116_4_fu_3303_p2;
wire   [0:0] and_ln116_4_fu_3308_p2;
wire   [23:0] select_ln116_18_fu_3296_p3;
wire   [0:0] or_ln116_2_fu_3320_p2;
wire   [0:0] xor_ln116_5_fu_3324_p2;
wire   [31:0] bitcast_ln724_fu_3338_p1;
wire   [0:0] tmp_51_fu_3341_p3;
wire   [23:0] trunc_ln116_3_fu_3335_p1;
wire   [23:0] select_ln116_21_fu_3349_p3;
wire   [23:0] select_ln116_2_fu_3357_p3;
wire   [23:0] select_ln116_14_fu_3364_p3;
wire   [23:0] add_ln116_1_fu_3370_p2;
wire   [31:0] bitcast_ln724_4_fu_3389_p1;
wire   [0:0] tmp_60_fu_3392_p3;
wire   [23:0] trunc_ln116_10_fu_3386_p1;
wire   [23:0] select_ln116_22_fu_3400_p3;
wire   [23:0] select_ln116_6_fu_3408_p3;
wire   [23:0] select_ln116_17_fu_3415_p3;
wire   [23:0] add_ln116_3_fu_3421_p2;
wire   [31:0] bitcast_ln724_5_fu_3440_p1;
wire   [0:0] tmp_67_fu_3443_p3;
wire   [23:0] trunc_ln116_15_fu_3437_p1;
wire   [23:0] select_ln116_23_fu_3451_p3;
wire   [23:0] select_ln116_10_fu_3459_p3;
wire   [23:0] select_ln116_20_fu_3466_p3;
wire   [23:0] add_ln116_5_fu_3472_p2;
wire   [7:0] trunc_ln116_s_fu_3478_p4;
wire   [7:0] trunc_ln116_9_fu_3427_p4;
wire   [7:0] trunc_ln116_4_fu_3376_p4;
wire   [15:0] grp_fu_3499_p0;
wire   [7:0] grp_fu_3499_p1;
wire   [23:0] grp_fu_3499_p2;
wire   [15:0] grp_fu_3508_p0;
wire   [7:0] grp_fu_3508_p1;
wire   [23:0] grp_fu_3508_p2;
wire   [15:0] grp_fu_3517_p0;
wire   [7:0] grp_fu_3517_p1;
wire   [23:0] grp_fu_3517_p2;
wire   [15:0] grp_fu_3526_p0;
wire   [7:0] grp_fu_3526_p1;
wire   [23:0] grp_fu_3526_p2;
wire   [15:0] grp_fu_3535_p0;
wire   [7:0] grp_fu_3535_p1;
wire   [23:0] grp_fu_3535_p2;
wire   [15:0] grp_fu_3544_p0;
wire   [7:0] grp_fu_3544_p1;
wire   [23:0] grp_fu_3544_p2;
wire    ap_continue_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_done_int_frp;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [36:0] frp_pipeline_valid_U_valid_out;
wire   [6:0] frp_pipeline_valid_U_num_valid_datasets;
wire   [23:0] pf_imgOutput_data_U_data_out;
wire    pf_imgOutput_data_U_data_out_vld;
wire    pf_imgOutput_data_U_pf_ready;
wire    pf_imgOutput_data_U_pf_done;
reg   [0:0] ap_frp_data_next_issued_imgInput_data;
reg    ap_frp_data_issued_nxt_imgInput_data_op81;
reg   [5:0] ap_frp_data_req_imgInput_data;
reg   [0:0] ap_frp_data_req_imgInput_data_op81;
reg    ap_condition_frp_roi_pvb_no_fwd_prs;
reg    ap_condition_frp_pvb_no_bkwd_prs;
reg    ap_condition_frp_pvb_pf_start;
reg    ap_frp_vld_in;
reg    frp_pipeline_valid_U_exitcond;
reg    pf_imgOutput_data_U_data_in_vld;
wire   [23:0] pf_imgOutput_data_U_frpsig_data_in;
reg    pf_all_done;
wire   [23:0] grp_fu_3499_p10;
wire   [24:0] grp_fu_3499_p20;
wire   [23:0] grp_fu_3508_p10;
wire   [24:0] grp_fu_3508_p20;
wire   [23:0] grp_fu_3517_p10;
wire   [24:0] grp_fu_3517_p20;
wire   [23:0] grp_fu_3526_p10;
wire   [24:0] grp_fu_3526_p20;
wire   [23:0] grp_fu_3535_p10;
wire   [24:0] grp_fu_3535_p20;
wire   [23:0] grp_fu_3544_p10;
wire   [24:0] grp_fu_3544_p20;
wire   [23:0] mul_ln107_1_fu_1499_p10;
wire   [23:0] mul_ln107_4_fu_1555_p10;
wire   [23:0] mul_ln107_5_fu_1564_p10;
wire   [23:0] mul_ln107_8_fu_1573_p10;
wire   [23:0] mul_ln107_9_fu_1582_p10;
wire   [23:0] mul_ln107_fu_1487_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_frp_data_req_imgInput_data = 6'd0;
#0 pf_all_done = 1'b0;
end

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_0_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_2_reg_4242),
    .din1(val_reg_4235),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_0_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_5_reg_4247),
    .din1(val_reg_4235),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_0_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_8_reg_4252),
    .din1(val_reg_4235),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

bilateral_filter_accel_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(grp_fu_442_p1),
    .ce(1'b1),
    .dout(grp_fu_442_p2)
);

bilateral_filter_accel_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U76(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_val_1_reg_4263),
    .ce(1'b1),
    .dout(grp_fu_450_p1)
);

bilateral_filter_accel_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U77(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_val_2_reg_4269),
    .ce(1'b1),
    .dout(grp_fu_453_p1)
);

bilateral_filter_accel_mux_3_2_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 2 ))
mux_3_2_2_1_1_U78(
    .din0(row_ind_7),
    .din1(row_ind_8),
    .din2(row_ind_9),
    .din3(sub_i274_i_i_cast),
    .dout(trunc_ln_fu_543_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U79(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(trunc_ln_fu_543_p5),
    .dout(tmp_s_fu_551_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U80(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_7),
    .dout(tmp_2_fu_563_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U81(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_8),
    .dout(tmp_3_fu_581_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U82(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_9),
    .dout(tmp_4_fu_599_p5)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U83(
    .din0(mul_ln107_fu_1487_p0),
    .din1(mul_ln107_fu_1487_p1),
    .dout(mul_ln107_fu_1487_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U84(
    .din0(mul_ln107_1_fu_1499_p0),
    .din1(mul_ln107_1_fu_1499_p1),
    .dout(mul_ln107_1_fu_1499_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U85(
    .din0(mul_ln107_4_fu_1555_p0),
    .din1(mul_ln107_4_fu_1555_p1),
    .dout(mul_ln107_4_fu_1555_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U86(
    .din0(mul_ln107_5_fu_1564_p0),
    .din1(mul_ln107_5_fu_1564_p1),
    .dout(mul_ln107_5_fu_1564_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U87(
    .din0(mul_ln107_8_fu_1573_p0),
    .din1(mul_ln107_8_fu_1573_p1),
    .dout(mul_ln107_8_fu_1573_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U88(
    .din0(mul_ln107_9_fu_1582_p0),
    .din1(mul_ln107_9_fu_1582_p1),
    .dout(mul_ln107_9_fu_1582_p2)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U89(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3499_p0),
    .din1(grp_fu_3499_p1),
    .din2(grp_fu_3499_p2),
    .ce(1'b1),
    .dout(grp_fu_3499_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U90(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3508_p0),
    .din1(grp_fu_3508_p1),
    .din2(grp_fu_3508_p2),
    .ce(1'b1),
    .dout(grp_fu_3508_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U91(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3517_p0),
    .din1(grp_fu_3517_p1),
    .din2(grp_fu_3517_p2),
    .ce(1'b1),
    .dout(grp_fu_3517_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U92(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3526_p0),
    .din1(grp_fu_3526_p1),
    .din2(grp_fu_3526_p2),
    .ce(1'b1),
    .dout(grp_fu_3526_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3535_p0),
    .din1(grp_fu_3535_p1),
    .din2(grp_fu_3535_p2),
    .ce(1'b1),
    .dout(grp_fu_3535_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3544_p0),
    .din1(grp_fu_3544_p1),
    .din2(grp_fu_3544_p2),
    .ce(1'b1),
    .dout(grp_fu_3544_p3)
);

bilateral_filter_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(pf_all_done),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(pf_all_done)
);

bilateral_filter_accel_frp_pipeline_valid #(
    .PipelineLatency( 37 ),
    .PipelineII( 1 ),
    .CeilLog2Stages( 6 ),
    .ExitLatency( 0 ))
frp_pipeline_valid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .valid_in(ap_frp_vld_in),
    .exitcond(frp_pipeline_valid_U_exitcond),
    .valid_out(frp_pipeline_valid_U_valid_out),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

bilateral_filter_accel_frp_fifoout #(
    .BlockingType( 1 ),
    .PipeLatency( 37 ),
    .PipelineII( 1 ),
    .DataWidth( 24 ),
    .NumWrites( 1 ),
    .CeilLog2Stages( 6 ),
    .CeilLog2FDepth( 6 ),
    .PfAllDoneEnable( 2 ))
pf_imgOutput_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(pf_imgOutput_data_U_frpsig_data_in),
    .data_out(pf_imgOutput_data_U_data_out),
    .valid(frp_pipeline_valid_U_valid_out),
    .data_in_vld(pf_imgOutput_data_U_data_in_vld),
    .data_out_vld(pf_imgOutput_data_U_data_out_vld),
    .data_in_last(ap_done_int_frp),
    .pf_continue(1'b1),
    .pf_all_done(pf_all_done),
    .pf_ready(pf_imgOutput_data_U_pf_ready),
    .pf_done(pf_imgOutput_data_U_pf_done),
    .data_out_read(imgOutput_data_full_n),
    .ap_start(1'b0),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_imgInput_data <= 6'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[6'd0] == 1'b0)) begin
            ap_frp_data_req_imgInput_data <= (ap_frp_data_req_imgInput_data - ap_frp_data_next_issued_imgInput_data);
        end else begin
            ap_frp_data_req_imgInput_data <= ((ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op81) - ap_frp_data_next_issued_imgInput_data);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_all_done <= 1'b0;
    end else begin
        pf_all_done <= pf_imgOutput_data_U_pf_done;
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & ((icmp_ln185_fu_488_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        col_4_fu_214 <= col_5_fu_494_p2;
    end else if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        col_4_fu_214 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_43_fu_222 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_43_fu_222 <= select_ln328_1_fu_624_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_44_fu_226 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_44_fu_226 <= select_ln328_2_fu_631_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_45_fu_230 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            empty_45_fu_230 <= select_ln349_fu_1402_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_218 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_fu_218 <= select_ln328_fu_617_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        LD_reg_4051 <= LD_fu_1968_p1;
        add_ln68_1_reg_3802 <= add_ln68_1_fu_1236_p2;
        add_ln68_2_reg_3813 <= add_ln68_2_fu_1372_p2;
        add_ln68_3_reg_3756 <= add_ln68_3_fu_1016_p2;
        add_ln68_reg_3712 <= add_ln68_fu_826_p2;
        and_ln116_1_reg_4470 <= and_ln116_1_fu_3186_p2;
        and_ln116_3_reg_4490 <= and_ln116_3_fu_3258_p2;
        and_ln116_5_reg_4510 <= and_ln116_5_fu_3330_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ashr_ln116_1_reg_4480 <= ashr_ln116_1_fu_3203_p2;
        ashr_ln116_2_reg_4500 <= ashr_ln116_2_fu_3275_p2;
        ashr_ln116_reg_4460 <= ashr_ln116_fu_3131_p2;
        color_weights_2_reg_3868 <= exp_lut_sigma_color_1_q0;
        color_weights_3_reg_3845 <= exp_lut_sigma_color_2_q0;
        color_weights_3_reg_3845_pp0_iter6_reg <= color_weights_3_reg_3845;
        empty_46_reg_3874 <= empty_46_fu_1457_p2;
        icmp_ln114_2_reg_4012 <= icmp_ln114_2_fu_1777_p2;
        icmp_ln115_11_reg_4190 <= icmp_ln115_11_fu_2459_p2;
        icmp_ln115_3_reg_4140 <= icmp_ln115_3_fu_2195_p2;
        icmp_ln115_4_reg_4155 <= icmp_ln115_4_fu_2231_p2;
        icmp_ln115_4_reg_4155_pp0_iter26_reg <= icmp_ln115_4_reg_4155;
        icmp_ln115_7_reg_4165 <= icmp_ln115_7_fu_2327_p2;
        icmp_ln115_8_reg_4180 <= icmp_ln115_8_fu_2363_p2;
        icmp_ln115_8_reg_4180_pp0_iter26_reg <= icmp_ln115_8_reg_4180;
        icmp_ln115_reg_4130 <= icmp_ln115_fu_2099_p2;
        icmp_ln115_reg_4130_pp0_iter26_reg <= icmp_ln115_reg_4130;
        icmp_ln116_10_reg_4420 <= icmp_ln116_10_fu_3056_p2;
        icmp_ln116_11_reg_4427 <= icmp_ln116_11_fu_3067_p2;
        icmp_ln116_12_reg_4438 <= icmp_ln116_12_fu_3093_p2;
        icmp_ln116_13_reg_4495 <= icmp_ln116_13_fu_3266_p2;
        icmp_ln116_14_reg_4450 <= icmp_ln116_14_fu_3113_p2;
        icmp_ln116_1_reg_4347 <= icmp_ln116_1_fu_2887_p2;
        icmp_ln116_2_reg_4358 <= icmp_ln116_2_fu_2913_p2;
        icmp_ln116_3_reg_4455 <= icmp_ln116_3_fu_3122_p2;
        icmp_ln116_4_reg_4370 <= icmp_ln116_4_fu_2933_p2;
        icmp_ln116_5_reg_4380 <= icmp_ln116_5_fu_2966_p2;
        icmp_ln116_6_reg_4387 <= icmp_ln116_6_fu_2977_p2;
        icmp_ln116_7_reg_4398 <= icmp_ln116_7_fu_3003_p2;
        icmp_ln116_8_reg_4475 <= icmp_ln116_8_fu_3194_p2;
        icmp_ln116_9_reg_4410 <= icmp_ln116_9_fu_3023_p2;
        icmp_ln116_reg_4340 <= icmp_ln116_fu_2876_p2;
        icmp_ln191_reg_3638_pp0_iter2_reg <= icmp_ln191_reg_3638_pp0_iter1_reg;
        icmp_ln336_reg_3664 <= icmp_ln336_fu_529_p2;
        icmp_ln336_reg_3664_pp0_iter10_reg <= icmp_ln336_reg_3664_pp0_iter9_reg;
        icmp_ln336_reg_3664_pp0_iter11_reg <= icmp_ln336_reg_3664_pp0_iter10_reg;
        icmp_ln336_reg_3664_pp0_iter12_reg <= icmp_ln336_reg_3664_pp0_iter11_reg;
        icmp_ln336_reg_3664_pp0_iter13_reg <= icmp_ln336_reg_3664_pp0_iter12_reg;
        icmp_ln336_reg_3664_pp0_iter14_reg <= icmp_ln336_reg_3664_pp0_iter13_reg;
        icmp_ln336_reg_3664_pp0_iter15_reg <= icmp_ln336_reg_3664_pp0_iter14_reg;
        icmp_ln336_reg_3664_pp0_iter16_reg <= icmp_ln336_reg_3664_pp0_iter15_reg;
        icmp_ln336_reg_3664_pp0_iter17_reg <= icmp_ln336_reg_3664_pp0_iter16_reg;
        icmp_ln336_reg_3664_pp0_iter18_reg <= icmp_ln336_reg_3664_pp0_iter17_reg;
        icmp_ln336_reg_3664_pp0_iter19_reg <= icmp_ln336_reg_3664_pp0_iter18_reg;
        icmp_ln336_reg_3664_pp0_iter20_reg <= icmp_ln336_reg_3664_pp0_iter19_reg;
        icmp_ln336_reg_3664_pp0_iter21_reg <= icmp_ln336_reg_3664_pp0_iter20_reg;
        icmp_ln336_reg_3664_pp0_iter22_reg <= icmp_ln336_reg_3664_pp0_iter21_reg;
        icmp_ln336_reg_3664_pp0_iter23_reg <= icmp_ln336_reg_3664_pp0_iter22_reg;
        icmp_ln336_reg_3664_pp0_iter24_reg <= icmp_ln336_reg_3664_pp0_iter23_reg;
        icmp_ln336_reg_3664_pp0_iter25_reg <= icmp_ln336_reg_3664_pp0_iter24_reg;
        icmp_ln336_reg_3664_pp0_iter26_reg <= icmp_ln336_reg_3664_pp0_iter25_reg;
        icmp_ln336_reg_3664_pp0_iter27_reg <= icmp_ln336_reg_3664_pp0_iter26_reg;
        icmp_ln336_reg_3664_pp0_iter28_reg <= icmp_ln336_reg_3664_pp0_iter27_reg;
        icmp_ln336_reg_3664_pp0_iter29_reg <= icmp_ln336_reg_3664_pp0_iter28_reg;
        icmp_ln336_reg_3664_pp0_iter30_reg <= icmp_ln336_reg_3664_pp0_iter29_reg;
        icmp_ln336_reg_3664_pp0_iter31_reg <= icmp_ln336_reg_3664_pp0_iter30_reg;
        icmp_ln336_reg_3664_pp0_iter32_reg <= icmp_ln336_reg_3664_pp0_iter31_reg;
        icmp_ln336_reg_3664_pp0_iter33_reg <= icmp_ln336_reg_3664_pp0_iter32_reg;
        icmp_ln336_reg_3664_pp0_iter34_reg <= icmp_ln336_reg_3664_pp0_iter33_reg;
        icmp_ln336_reg_3664_pp0_iter35_reg <= icmp_ln336_reg_3664_pp0_iter34_reg;
        icmp_ln336_reg_3664_pp0_iter3_reg <= icmp_ln336_reg_3664;
        icmp_ln336_reg_3664_pp0_iter4_reg <= icmp_ln336_reg_3664_pp0_iter3_reg;
        icmp_ln336_reg_3664_pp0_iter5_reg <= icmp_ln336_reg_3664_pp0_iter4_reg;
        icmp_ln336_reg_3664_pp0_iter6_reg <= icmp_ln336_reg_3664_pp0_iter5_reg;
        icmp_ln336_reg_3664_pp0_iter7_reg <= icmp_ln336_reg_3664_pp0_iter6_reg;
        icmp_ln336_reg_3664_pp0_iter8_reg <= icmp_ln336_reg_3664_pp0_iter7_reg;
        icmp_ln336_reg_3664_pp0_iter9_reg <= icmp_ln336_reg_3664_pp0_iter8_reg;
        lshr_ln114_1_reg_4041 <= {{add_ln114_2_fu_1903_p2[63:1]}};
        lshr_ln114_reg_4017 <= lshr_ln114_fu_1792_p2;
        lshr_ln115_2_reg_4170 <= lshr_ln115_2_fu_2342_p2;
        lshr_ln115_4_reg_4195 <= lshr_ln115_4_fu_2474_p2;
        lshr_ln115_reg_4145 <= lshr_ln115_fu_2210_p2;
        mul_ln107_1_reg_3916 <= mul_ln107_1_fu_1499_p2;
        mul_ln107_4_reg_3927 <= mul_ln107_4_fu_1555_p2;
        mul_ln107_5_reg_3932 <= mul_ln107_5_fu_1564_p2;
        mul_ln107_8_reg_3937 <= mul_ln107_8_fu_1573_p2;
        mul_ln107_9_reg_3942 <= mul_ln107_9_fu_1582_p2;
        mul_ln107_reg_3911 <= mul_ln107_fu_1487_p2;
        mul_val_1_reg_4263 <= grp_fu_434_p2;
        mul_val_1_reg_4263_pp0_iter32_reg <= mul_val_1_reg_4263;
        mul_val_1_reg_4263_pp0_iter33_reg <= mul_val_1_reg_4263_pp0_iter32_reg;
        mul_val_1_reg_4263_pp0_iter34_reg <= mul_val_1_reg_4263_pp0_iter33_reg;
        mul_val_1_reg_4263_pp0_iter35_reg <= mul_val_1_reg_4263_pp0_iter34_reg;
        mul_val_2_reg_4269 <= grp_fu_438_p2;
        mul_val_2_reg_4269_pp0_iter32_reg <= mul_val_2_reg_4269;
        mul_val_2_reg_4269_pp0_iter33_reg <= mul_val_2_reg_4269_pp0_iter32_reg;
        mul_val_2_reg_4269_pp0_iter34_reg <= mul_val_2_reg_4269_pp0_iter33_reg;
        mul_val_2_reg_4269_pp0_iter35_reg <= mul_val_2_reg_4269_pp0_iter34_reg;
        mul_val_reg_4257 <= grp_fu_430_p2;
        mul_val_reg_4257_pp0_iter32_reg <= mul_val_reg_4257;
        mul_val_reg_4257_pp0_iter33_reg <= mul_val_reg_4257_pp0_iter32_reg;
        mul_val_reg_4257_pp0_iter34_reg <= mul_val_reg_4257_pp0_iter33_reg;
        mul_val_reg_4257_pp0_iter35_reg <= mul_val_reg_4257_pp0_iter34_reg;
        or_ln115_1_reg_4160[0] <= or_ln115_1_fu_2316_p3[0];
        or_ln115_2_reg_4185[0] <= or_ln115_2_fu_2448_p3[0];
        or_ln1_reg_4135[0] <= or_ln1_fu_2184_p3[0];
        or_ln_reg_4007[0] <= or_ln_fu_1766_p3[0];
        p_load132_reg_3669 <= empty_43_fu_222;
        p_load132_reg_3669_pp0_iter4_reg <= p_load132_reg_3669;
        p_load132_reg_3669_pp0_iter5_reg <= p_load132_reg_3669_pp0_iter4_reg;
        p_load132_reg_3669_pp0_iter6_reg <= p_load132_reg_3669_pp0_iter5_reg;
        p_load132_reg_3669_pp0_iter7_reg <= p_load132_reg_3669_pp0_iter6_reg;
        p_load132_reg_3669_pp0_iter8_reg <= p_load132_reg_3669_pp0_iter7_reg;
        px_sum_1_reg_4000[27 : 1] <= px_sum_1_fu_1680_p2[27 : 1];
        px_sum_1_reg_4000_pp0_iter10_reg[27 : 1] <= px_sum_1_reg_4000[27 : 1];
        px_sum_1_reg_4000_pp0_iter11_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter10_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter12_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter11_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter13_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter12_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter14_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter13_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter15_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter14_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter16_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter15_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter17_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter16_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter18_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter17_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter19_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter18_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter20_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter19_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter21_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter20_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter22_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter21_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter23_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter22_reg[27 : 1];
        px_sum_1_reg_4000_pp0_iter24_reg[27 : 1] <= px_sum_1_reg_4000_pp0_iter23_reg[27 : 1];
        px_sum_3_reg_4027[27 : 1] <= px_sum_3_fu_1848_p2[27 : 1];
        px_sum_3_reg_4027_pp0_iter10_reg[27 : 1] <= px_sum_3_reg_4027[27 : 1];
        px_sum_3_reg_4027_pp0_iter11_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter10_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter12_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter11_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter13_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter12_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter14_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter13_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter15_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter14_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter16_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter15_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter17_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter16_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter18_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter17_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter19_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter18_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter20_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter19_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter21_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter20_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter22_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter21_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter23_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter22_reg[27 : 1];
        px_sum_3_reg_4027_pp0_iter24_reg[27 : 1] <= px_sum_3_reg_4027_pp0_iter23_reg[27 : 1];
        px_sum_5_reg_4034[27 : 1] <= px_sum_5_fu_1889_p2[27 : 1];
        px_sum_5_reg_4034_pp0_iter10_reg[27 : 1] <= px_sum_5_reg_4034[27 : 1];
        px_sum_5_reg_4034_pp0_iter11_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter10_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter12_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter11_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter13_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter12_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter14_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter13_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter15_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter14_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter16_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter15_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter17_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter16_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter18_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter17_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter19_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter18_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter20_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter19_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter21_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter20_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter22_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter21_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter23_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter22_reg[27 : 1];
        px_sum_5_reg_4034_pp0_iter24_reg[27 : 1] <= px_sum_5_reg_4034_pp0_iter23_reg[27 : 1];
        select_ln115_2_reg_4242 <= select_ln115_2_fu_2640_p3;
        select_ln115_5_reg_4247 <= select_ln115_5_fu_2696_p3;
        select_ln115_8_reg_4252 <= select_ln115_8_fu_2752_p3;
        select_ln116_13_reg_4465 <= select_ln116_13_fu_3169_p3;
        select_ln116_16_reg_4485 <= select_ln116_16_fu_3241_p3;
        select_ln116_19_reg_4505 <= select_ln116_19_fu_3313_p3;
        select_ln116_1_reg_4352 <= select_ln116_1_fu_2905_p3;
        select_ln116_4_reg_4375 <= select_ln116_4_fu_2959_p3;
        select_ln116_5_reg_4392 <= select_ln116_5_fu_2995_p3;
        select_ln116_8_reg_4415 <= select_ln116_8_fu_3049_p3;
        select_ln116_9_reg_4432 <= select_ln116_9_fu_3085_p3;
        select_ln116_reg_4335 <= select_ln116_fu_2869_p3;
        select_ln328_1_reg_3674 <= select_ln328_1_fu_624_p3;
        shl_ln114_reg_4022 <= shl_ln114_fu_1807_p2;
        shl_ln115_1_reg_4175 <= shl_ln115_1_fu_2357_p2;
        shl_ln115_2_reg_4200 <= shl_ln115_2_fu_2489_p2;
        shl_ln115_reg_4150 <= shl_ln115_fu_2225_p2;
        sub_ln114_3_reg_3970 <= sub_ln114_3_fu_1625_p2;
        sub_ln114_reg_3963 <= sub_ln114_fu_1615_p2;
        sub_ln115_10_reg_4097 <= sub_ln115_10_fu_2048_p2;
        sub_ln115_11_reg_4120 <= sub_ln115_11_fu_2089_p2;
        sub_ln115_2_reg_4090 <= sub_ln115_2_fu_2038_p2;
        sub_ln115_4_reg_4113 <= sub_ln115_4_fu_2079_p2;
        sub_ln115_9_reg_4074 <= sub_ln115_9_fu_2007_p2;
        sub_ln115_reg_4067 <= sub_ln115_fu_1997_p2;
        tmp_12_reg_3718 <= diffpx_fu_820_p2[32'd10];
        tmp_14_reg_3792 <= {{empty_45_fu_230[15:8]}};
        tmp_14_reg_3792_pp0_iter5_reg <= tmp_14_reg_3792;
        tmp_14_reg_3792_pp0_iter6_reg <= tmp_14_reg_3792_pp0_iter5_reg;
        tmp_16_reg_3797 <= {{empty_45_fu_230[23:16]}};
        tmp_16_reg_3797_pp0_iter5_reg <= tmp_16_reg_3797;
        tmp_16_reg_3797_pp0_iter6_reg <= tmp_16_reg_3797_pp0_iter5_reg;
        tmp_18_reg_3808 <= diffpx_3_fu_1230_p2[32'd10];
        tmp_20_reg_3729 <= {{select_ln328_1_fu_624_p3[15:8]}};
        tmp_20_reg_3729_pp0_iter4_reg <= tmp_20_reg_3729;
        tmp_20_reg_3729_pp0_iter5_reg <= tmp_20_reg_3729_pp0_iter4_reg;
        tmp_20_reg_3729_pp0_iter6_reg <= tmp_20_reg_3729_pp0_iter5_reg;
        tmp_22_reg_3735 <= {{select_ln328_1_fu_624_p3[23:16]}};
        tmp_22_reg_3735_pp0_iter4_reg <= tmp_22_reg_3735;
        tmp_22_reg_3735_pp0_iter5_reg <= tmp_22_reg_3735_pp0_iter4_reg;
        tmp_22_reg_3735_pp0_iter6_reg <= tmp_22_reg_3735_pp0_iter5_reg;
        tmp_24_reg_3819 <= diffpx_6_fu_1366_p2[32'd10];
        tmp_25_reg_3746 <= {{empty_44_fu_226[15:8]}};
        tmp_25_reg_3746_pp0_iter4_reg <= tmp_25_reg_3746;
        tmp_25_reg_3746_pp0_iter5_reg <= tmp_25_reg_3746_pp0_iter4_reg;
        tmp_28_reg_3751 <= {{empty_44_fu_226[23:16]}};
        tmp_28_reg_3751_pp0_iter4_reg <= tmp_28_reg_3751;
        tmp_28_reg_3751_pp0_iter5_reg <= tmp_28_reg_3751_pp0_iter4_reg;
        tmp_30_reg_3762 <= diffpx_9_fu_1010_p2[32'd10];
        tmp_39_reg_4046 <= add_ln114_2_fu_1903_p2[32'd25];
        tmp_46_reg_4280 <= bitcast_ln724_1_fu_2759_p1[32'd63];
        tmp_49_reg_4285 <= {{bitcast_ln724_1_fu_2759_p1[62:52]}};
        tmp_53_reg_3767 <= {{empty_43_fu_222[15:8]}};
        tmp_53_reg_3767_pp0_iter4_reg <= tmp_53_reg_3767;
        tmp_53_reg_3767_pp0_iter5_reg <= tmp_53_reg_3767_pp0_iter4_reg;
        tmp_53_reg_3767_pp0_iter6_reg <= tmp_53_reg_3767_pp0_iter5_reg;
        tmp_53_reg_3767_pp0_iter7_reg <= tmp_53_reg_3767_pp0_iter6_reg;
        tmp_53_reg_3767_pp0_iter8_reg <= tmp_53_reg_3767_pp0_iter7_reg;
        tmp_56_reg_3772 <= {{empty_43_fu_222[23:16]}};
        tmp_56_reg_3772_pp0_iter4_reg <= tmp_56_reg_3772;
        tmp_56_reg_3772_pp0_iter5_reg <= tmp_56_reg_3772_pp0_iter4_reg;
        tmp_56_reg_3772_pp0_iter6_reg <= tmp_56_reg_3772_pp0_iter5_reg;
        tmp_56_reg_3772_pp0_iter7_reg <= tmp_56_reg_3772_pp0_iter6_reg;
        tmp_56_reg_3772_pp0_iter8_reg <= tmp_56_reg_3772_pp0_iter7_reg;
        tmp_58_reg_4300 <= bitcast_ln724_2_fu_2789_p1[32'd63];
        tmp_59_reg_4305 <= {{bitcast_ln724_2_fu_2789_p1[62:52]}};
        tmp_5_reg_3690 <= {{empty_fu_218[15:8]}};
        tmp_5_reg_3690_pp0_iter4_reg <= tmp_5_reg_3690;
        tmp_5_reg_3690_pp0_iter5_reg <= tmp_5_reg_3690_pp0_iter4_reg;
        tmp_65_reg_4320 <= bitcast_ln724_3_fu_2819_p1[32'd63];
        tmp_66_reg_4325 <= {{bitcast_ln724_3_fu_2819_p1[62:52]}};
        tmp_9_reg_3701 <= {{empty_fu_218[23:16]}};
        tmp_9_reg_3701_pp0_iter4_reg <= tmp_9_reg_3701;
        tmp_9_reg_3701_pp0_iter5_reg <= tmp_9_reg_3701_pp0_iter4_reg;
        trunc_ln114_1_reg_3975 <= trunc_ln114_1_fu_1631_p1;
        trunc_ln114_1_reg_3975_pp0_iter10_reg <= trunc_ln114_1_reg_3975_pp0_iter9_reg;
        trunc_ln114_1_reg_3975_pp0_iter9_reg <= trunc_ln114_1_reg_3975;
        trunc_ln115_1_reg_4079 <= trunc_ln115_1_fu_2013_p1;
        trunc_ln115_1_reg_4079_pp0_iter25_reg <= trunc_ln115_1_reg_4079;
        trunc_ln115_1_reg_4079_pp0_iter26_reg <= trunc_ln115_1_reg_4079_pp0_iter25_reg;
        trunc_ln115_3_reg_4102 <= trunc_ln115_3_fu_2054_p1;
        trunc_ln115_3_reg_4102_pp0_iter25_reg <= trunc_ln115_3_reg_4102;
        trunc_ln115_3_reg_4102_pp0_iter26_reg <= trunc_ln115_3_reg_4102_pp0_iter25_reg;
        trunc_ln115_5_reg_4125 <= trunc_ln115_5_fu_2095_p1;
        trunc_ln115_5_reg_4125_pp0_iter25_reg <= trunc_ln115_5_reg_4125;
        trunc_ln115_5_reg_4125_pp0_iter26_reg <= trunc_ln115_5_reg_4125_pp0_iter25_reg;
        trunc_ln116_12_reg_4315 <= trunc_ln116_12_fu_2823_p1;
        trunc_ln116_13_reg_4330 <= trunc_ln116_13_fu_2845_p1;
        trunc_ln116_14_reg_4444 <= trunc_ln116_14_fu_3099_p1;
        trunc_ln116_1_reg_4290 <= trunc_ln116_1_fu_2785_p1;
        trunc_ln116_2_reg_4364 <= trunc_ln116_2_fu_2919_p1;
        trunc_ln116_6_reg_4295 <= trunc_ln116_6_fu_2793_p1;
        trunc_ln116_7_reg_4310 <= trunc_ln116_7_fu_2815_p1;
        trunc_ln116_8_reg_4404 <= trunc_ln116_8_fu_3009_p1;
        trunc_ln116_reg_4275 <= trunc_ln116_fu_2763_p1;
        trunc_ln92_2_reg_3787 <= trunc_ln92_2_fu_1087_p1;
        trunc_ln92_2_reg_3787_pp0_iter5_reg <= trunc_ln92_2_reg_3787;
        trunc_ln92_2_reg_3787_pp0_iter6_reg <= trunc_ln92_2_reg_3787_pp0_iter5_reg;
        trunc_ln92_3_reg_3723 <= trunc_ln92_3_fu_840_p1;
        trunc_ln92_3_reg_3723_pp0_iter4_reg <= trunc_ln92_3_reg_3723;
        trunc_ln92_3_reg_3723_pp0_iter5_reg <= trunc_ln92_3_reg_3723_pp0_iter4_reg;
        trunc_ln92_3_reg_3723_pp0_iter6_reg <= trunc_ln92_3_reg_3723_pp0_iter5_reg;
        trunc_ln92_4_reg_3741 <= trunc_ln92_4_fu_864_p1;
        trunc_ln92_4_reg_3741_pp0_iter4_reg <= trunc_ln92_4_reg_3741;
        trunc_ln92_4_reg_3741_pp0_iter5_reg <= trunc_ln92_4_reg_3741_pp0_iter4_reg;
        trunc_ln92_reg_3679 <= trunc_ln92_fu_638_p1;
        trunc_ln92_reg_3679_pp0_iter4_reg <= trunc_ln92_reg_3679;
        trunc_ln92_reg_3679_pp0_iter5_reg <= trunc_ln92_reg_3679_pp0_iter4_reg;
        val_reg_4235 <= grp_fu_442_p2;
        weight_sum_reg_3921[19 : 1] <= weight_sum_fu_1546_p2[19 : 1];
        weight_sum_reg_3921_pp0_iter8_reg[19 : 1] <= weight_sum_reg_3921[19 : 1];
        zext_ln64_reg_3957[19 : 1] <= zext_ln64_fu_1594_p1[19 : 1];
        zext_ln65_1_reg_4061[27 : 1] <= zext_ln65_1_fu_1976_p1[27 : 1];
        zext_ln65_3_reg_4084[27 : 1] <= zext_ln65_3_fu_2017_p1[27 : 1];
        zext_ln65_5_reg_4107[27 : 1] <= zext_ln65_5_fu_2058_p1[27 : 1];
        zext_ln92_1_reg_3684[7 : 0] <= zext_ln92_1_fu_650_p1[7 : 0];
        zext_ln93_1_reg_3695[7 : 0] <= zext_ln93_1_fu_710_p1[7 : 0];
        zext_ln94_1_reg_3706[7 : 0] <= zext_ln94_1_fu_770_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_488_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln191_reg_3645 <= and_ln191_fu_506_p2;
        icmp_ln191_reg_3638 <= icmp_ln191_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_reg_3627 <= ap_sig_allocacmp_col;
        col_reg_3627_pp0_iter1_reg <= col_reg_3627;
        icmp_ln191_reg_3638_pp0_iter1_reg <= icmp_ln191_reg_3638;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        color_weights_1_reg_3863 <= exp_lut_sigma_color_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        color_weights_reg_3829 <= exp_lut_sigma_color_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_4130 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_1_reg_4205 <= {{add_ln115_2_fu_2503_p2[63:1]}};
        tmp_45_reg_4210 <= add_ln115_2_fu_2503_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_4_reg_4155 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_3_reg_4215 <= {{add_ln115_6_fu_2535_p2[63:1]}};
        tmp_57_reg_4220 <= add_ln115_6_fu_2535_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_8_reg_4180 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_5_reg_4225 <= {{add_ln115_10_fu_2567_p2[63:1]}};
        tmp_64_reg_4230 <= add_ln115_10_fu_2567_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln336_reg_3664 == 1'd0))) begin
        p_load133_reg_3777 <= empty_43_fu_222;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & ((icmp_ln185_fu_488_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter35_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int_frp = 1'b1;
    end else begin
        ap_done_int_frp = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1)) begin
        ap_enable_reg_pp0_iter1 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter1 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd10] == 1'b1)) begin
        ap_enable_reg_pp0_iter10 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter10 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd11] == 1'b1)) begin
        ap_enable_reg_pp0_iter11 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter11 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd12] == 1'b1)) begin
        ap_enable_reg_pp0_iter12 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter12 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd13] == 1'b1)) begin
        ap_enable_reg_pp0_iter13 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter13 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd14] == 1'b1)) begin
        ap_enable_reg_pp0_iter14 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter14 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd15] == 1'b1)) begin
        ap_enable_reg_pp0_iter15 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter15 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd16] == 1'b1)) begin
        ap_enable_reg_pp0_iter16 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter16 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd17] == 1'b1)) begin
        ap_enable_reg_pp0_iter17 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter17 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd18] == 1'b1)) begin
        ap_enable_reg_pp0_iter18 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter18 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd19] == 1'b1)) begin
        ap_enable_reg_pp0_iter19 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter19 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd2] == 1'b1)) begin
        ap_enable_reg_pp0_iter2 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter2 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd20] == 1'b1)) begin
        ap_enable_reg_pp0_iter20 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter20 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd21] == 1'b1)) begin
        ap_enable_reg_pp0_iter21 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter21 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd22] == 1'b1)) begin
        ap_enable_reg_pp0_iter22 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter22 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd23] == 1'b1)) begin
        ap_enable_reg_pp0_iter23 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter23 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd24] == 1'b1)) begin
        ap_enable_reg_pp0_iter24 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter24 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd25] == 1'b1)) begin
        ap_enable_reg_pp0_iter25 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter25 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd26] == 1'b1)) begin
        ap_enable_reg_pp0_iter26 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter26 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd27] == 1'b1)) begin
        ap_enable_reg_pp0_iter27 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter27 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd28] == 1'b1)) begin
        ap_enable_reg_pp0_iter28 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter28 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd29] == 1'b1)) begin
        ap_enable_reg_pp0_iter29 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter29 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd3] == 1'b1)) begin
        ap_enable_reg_pp0_iter3 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter3 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd30] == 1'b1)) begin
        ap_enable_reg_pp0_iter30 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter30 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd31] == 1'b1)) begin
        ap_enable_reg_pp0_iter31 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter31 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd32] == 1'b1)) begin
        ap_enable_reg_pp0_iter32 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter32 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd33] == 1'b1)) begin
        ap_enable_reg_pp0_iter33 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter33 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd34] == 1'b1)) begin
        ap_enable_reg_pp0_iter34 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter34 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd35] == 1'b1)) begin
        ap_enable_reg_pp0_iter35 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter35 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd36] == 1'b1)) begin
        ap_enable_reg_pp0_iter36 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter36 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd4] == 1'b1)) begin
        ap_enable_reg_pp0_iter4 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter4 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd5] == 1'b1)) begin
        ap_enable_reg_pp0_iter5 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter5 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd6] == 1'b1)) begin
        ap_enable_reg_pp0_iter6 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter6 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd7] == 1'b1)) begin
        ap_enable_reg_pp0_iter7 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter7 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd8] == 1'b1)) begin
        ap_enable_reg_pp0_iter8 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter8 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd9] == 1'b1)) begin
        ap_enable_reg_pp0_iter9 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter9 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'd1 == and_ln191_reg_3645))) begin
        ap_frp_data_issued_nxt_imgInput_data_op81 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_imgInput_data_op81 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_imgInput_data_op81 == 1'b1)) begin
        ap_frp_data_next_issued_imgInput_data = 1'd1;
    end else begin
        ap_frp_data_next_issued_imgInput_data = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln185_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_fu_506_p2))) begin
        ap_frp_data_req_imgInput_data_op81 = 1'd1;
    end else begin
        ap_frp_data_req_imgInput_data_op81 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_frp_pvb_pf_start) & (1'b1 == ap_condition_frp_pvb_no_bkwd_prs) & (1'b1 == ap_condition_frp_roi_pvb_no_fwd_prs))) begin
        ap_frp_vld_in = 1'b1;
    end else begin
        ap_frp_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) 
    & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col = 13'd0;
    end else begin
        ap_sig_allocacmp_col = col_4_fu_214;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((row_ind_9_read_reg_3621 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3645)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (~(row_ind_9_read_reg_3621 == 2'd0) & ~(row_ind_9_read_reg_3621 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3645)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((row_ind_9_read_reg_3621 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3645)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_1_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_2_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_ce1 = 1'b1;
    end else begin
        exp_lut_sigma_color_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_488_p2 == 1'd1))) begin
        frp_pipeline_valid_U_exitcond = 1'b1;
    end else begin
        frp_pipeline_valid_U_exitcond = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3645)))) begin
        imgInput_data_read = 1'b1;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((pf_imgOutput_data_U_data_out_vld == 1'b1)) begin
        imgOutput_data_write = 1'b1;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln336_reg_3664_pp0_iter35_reg == 1'd0) & (ap_enable_reg_pp0_iter36 == 1'b1))) begin
        pf_imgOutput_data_U_data_in_vld = 1'b1;
    end else begin
        pf_imgOutput_data_U_data_in_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_2632_p1 = pi_assign_1_fu_2620_p5[31:0];

assign LD_3_fu_2688_p1 = pi_assign_2_fu_2676_p5[31:0];

assign LD_5_fu_2744_p1 = pi_assign_3_fu_2732_p5[31:0];

assign LD_fu_1968_p1 = pi_assign_fu_1956_p5[31:0];

assign add_ln114_1_fu_1783_p2 = ($signed(sub_ln114_reg_3963) + $signed(32'd4294967271));

assign add_ln114_2_fu_1903_p2 = (select_ln114_fu_1895_p3 + zext_ln114_3_fu_1900_p1);

assign add_ln114_3_fu_1942_p2 = (sub_ln114_2_fu_1937_p2 + select_ln114_1_fu_1930_p3);

assign add_ln114_fu_1686_p2 = ($signed(sub_ln114_reg_3963) + $signed(32'd4294967272));

assign add_ln115_10_fu_2567_p2 = (select_ln115_6_fu_2559_p3 + zext_ln115_11_fu_2564_p1);

assign add_ln115_11_fu_2718_p2 = (sub_ln115_8_fu_2713_p2 + select_ln115_7_fu_2706_p3);

assign add_ln115_1_fu_2201_p2 = ($signed(sub_ln115_reg_4067) + $signed(32'd4294967271));

assign add_ln115_2_fu_2503_p2 = (select_ln115_fu_2495_p3 + zext_ln115_3_fu_2500_p1);

assign add_ln115_3_fu_2606_p2 = (sub_ln115_6_fu_2601_p2 + select_ln115_1_fu_2594_p3);

assign add_ln115_4_fu_2236_p2 = ($signed(sub_ln115_2_reg_4090) + $signed(32'd4294967272));

assign add_ln115_5_fu_2333_p2 = ($signed(sub_ln115_2_reg_4090) + $signed(32'd4294967271));

assign add_ln115_6_fu_2535_p2 = (select_ln115_3_fu_2527_p3 + zext_ln115_7_fu_2532_p1);

assign add_ln115_7_fu_2662_p2 = (sub_ln115_7_fu_2657_p2 + select_ln115_4_fu_2650_p3);

assign add_ln115_8_fu_2368_p2 = ($signed(sub_ln115_4_reg_4113) + $signed(32'd4294967272));

assign add_ln115_9_fu_2465_p2 = ($signed(sub_ln115_4_reg_4113) + $signed(32'd4294967271));

assign add_ln115_fu_2104_p2 = ($signed(sub_ln115_reg_4067) + $signed(32'd4294967272));

assign add_ln116_1_fu_3370_p2 = (select_ln116_14_fu_3364_p3 + 24'd32768);

assign add_ln116_2_fu_2983_p2 = ($signed(sub_ln116_4_fu_2971_p2) + $signed(12'd4080));

assign add_ln116_3_fu_3421_p2 = (select_ln116_17_fu_3415_p3 + 24'd32768);

assign add_ln116_4_fu_3073_p2 = ($signed(sub_ln116_7_fu_3061_p2) + $signed(12'd4080));

assign add_ln116_5_fu_3472_p2 = (select_ln116_20_fu_3466_p3 + 24'd32768);

assign add_ln116_fu_2893_p2 = ($signed(sub_ln116_1_fu_2881_p2) + $signed(12'd4080));

assign add_ln68_1_fu_1236_p2 = ($signed(add_ln93_1_fu_1216_p2) + $signed(sext_ln92_5_fu_1226_p1));

assign add_ln68_2_fu_1372_p2 = ($signed(add_ln93_2_fu_1352_p2) + $signed(sext_ln92_6_fu_1362_p1));

assign add_ln68_3_fu_1016_p2 = ($signed(add_ln93_3_fu_996_p2) + $signed(sext_ln92_7_fu_1006_p1));

assign add_ln68_fu_826_p2 = ($signed(add_ln93_fu_806_p2) + $signed(sext_ln92_4_fu_816_p1));

assign add_ln93_1_fu_1216_p2 = ($signed(sext_ln94_1_fu_1167_p1) + $signed(sext_ln93_2_fu_1122_p1));

assign add_ln93_2_fu_1352_p2 = ($signed(sext_ln94_2_fu_1314_p1) + $signed(sext_ln93_4_fu_1280_p1));

assign add_ln93_3_fu_996_p2 = ($signed(sext_ln94_3_fu_946_p1) + $signed(sext_ln93_6_fu_900_p1));

assign add_ln93_fu_806_p2 = ($signed(sext_ln94_fu_742_p1) + $signed(sext_ln93_fu_682_p1));

assign and_ln114_1_fu_1754_p2 = (xor_ln114_fu_1741_p2 & bit_select_i_i116_i_i_i_fu_1747_p3);

assign and_ln114_2_fu_1716_p2 = (zext_ln64_reg_3957 & lshr_ln114_2_fu_1710_p2);

assign and_ln114_fu_1727_p2 = (icmp_ln114_fu_1701_p2 & icmp_ln114_1_fu_1721_p2);

assign and_ln115_1_fu_2172_p2 = (xor_ln115_fu_2159_p2 & bit_select_i_i_i_i_i_fu_2165_p3);

assign and_ln115_2_fu_2277_p2 = (icmp_ln115_6_fu_2271_p2 & icmp_ln115_5_fu_2251_p2);

assign and_ln115_3_fu_2304_p2 = (xor_ln115_1_fu_2291_p2 & bit_select_i_i_i_i_i_1_fu_2297_p3);

assign and_ln115_4_fu_2409_p2 = (icmp_ln115_9_fu_2383_p2 & icmp_ln115_10_fu_2403_p2);

assign and_ln115_5_fu_2436_p2 = (xor_ln115_2_fu_2423_p2 & bit_select_i_i_i_i_i_2_fu_2429_p3);

assign and_ln115_6_fu_2134_p2 = (zext_ln65_1_reg_4061 & lshr_ln115_6_fu_2128_p2);

assign and_ln115_7_fu_2266_p2 = (zext_ln65_3_reg_4084 & lshr_ln115_7_fu_2260_p2);

assign and_ln115_8_fu_2398_p2 = (zext_ln65_5_reg_4107 & lshr_ln115_8_fu_2392_p2);

assign and_ln115_fu_2145_p2 = (icmp_ln115_2_fu_2139_p2 & icmp_ln115_1_fu_2119_p2);

assign and_ln116_1_fu_3186_p2 = (xor_ln116_1_fu_3180_p2 & icmp_ln116_1_reg_4347);

assign and_ln116_2_fu_3236_p2 = (xor_ln116_2_fu_3231_p2 & icmp_ln116_7_reg_4398);

assign and_ln116_3_fu_3258_p2 = (xor_ln116_3_fu_3252_p2 & icmp_ln116_6_reg_4387);

assign and_ln116_4_fu_3308_p2 = (xor_ln116_4_fu_3303_p2 & icmp_ln116_12_reg_4438);

assign and_ln116_5_fu_3330_p2 = (xor_ln116_5_fu_3324_p2 & icmp_ln116_11_reg_4427);

assign and_ln116_fu_3164_p2 = (xor_ln116_fu_3159_p2 & icmp_ln116_2_reg_4358);

assign and_ln191_fu_506_p2 = (icmp_ln191_fu_500_p2 & cmp_i_i65_i_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = 1'b0;

assign ap_block_pp0_stage0_01001 = 1'b0;

assign ap_block_pp0_stage0_11001 = 1'b0;

assign ap_block_pp0_stage0_subdone = 1'b0;

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'b1 == 1'b0) & (1'd1 == and_ln191_reg_3645));
end

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state37_pp0_stage0_iter36 = ((1'b1 == 1'b0) & (icmp_ln336_reg_3664_pp0_iter35_reg == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_frp_pvb_no_bkwd_prs = (pf_imgOutput_data_U_pf_ready == 1'b1);
end

always @ (*) begin
    ap_condition_frp_pvb_pf_start = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_frp_roi_pvb_no_fwd_prs = ~(imgInput_data_num_data_valid < (ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op81));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln116_1_fu_3203_p2 = $signed(select_ln116_4_reg_4375) >>> zext_ln116_6_fu_3199_p1;

assign ashr_ln116_2_fu_3275_p2 = $signed(select_ln116_8_reg_4415) >>> zext_ln116_10_fu_3271_p1;

assign ashr_ln116_fu_3131_p2 = $signed(select_ln116_reg_4335) >>> zext_ln116_2_fu_3127_p1;

assign bit_select_i_i116_i_i_i_fu_1747_p3 = zext_ln64_reg_3957[add_ln114_fu_1686_p2];

assign bit_select_i_i_i_i_i_1_fu_2297_p3 = zext_ln65_3_reg_4084[add_ln115_4_fu_2236_p2];

assign bit_select_i_i_i_i_i_2_fu_2429_p3 = zext_ln65_5_reg_4107[add_ln115_8_fu_2368_p2];

assign bit_select_i_i_i_i_i_fu_2165_p3 = zext_ln65_1_reg_4061[add_ln115_fu_2104_p2];

assign bitcast_ln724_1_fu_2759_p1 = grp_fu_715_p_dout0;

assign bitcast_ln724_2_fu_2789_p1 = grp_fu_450_p1;

assign bitcast_ln724_3_fu_2819_p1 = grp_fu_453_p1;

assign bitcast_ln724_4_fu_3389_p1 = mul_val_1_reg_4263_pp0_iter35_reg;

assign bitcast_ln724_5_fu_3440_p1 = mul_val_2_reg_4269_pp0_iter35_reg;

assign bitcast_ln724_fu_3338_p1 = mul_val_reg_4257_pp0_iter35_reg;

assign bitcast_ln766_1_fu_2636_p1 = LD_1_fu_2632_p1;

assign bitcast_ln766_2_fu_2692_p1 = LD_3_fu_2688_p1;

assign bitcast_ln766_3_fu_2748_p1 = LD_5_fu_2744_p1;

assign buf_1_address0 = conv_i190_i_i_fu_523_p1;

assign buf_1_address1 = zext_ln192_fu_517_p1;

assign buf_1_d1 = imgInput_data_dout;

assign buf_2_address0 = conv_i190_i_i_fu_523_p1;

assign buf_2_address1 = zext_ln192_fu_517_p1;

assign buf_2_d1 = imgInput_data_dout;

assign buf_r_address0 = conv_i190_i_i_fu_523_p1;

assign buf_r_address1 = zext_ln192_fu_517_p1;

assign buf_r_d1 = imgInput_data_dout;

assign col_5_fu_494_p2 = (ap_sig_allocacmp_col + 13'd1);

assign color_weights_1_cast39_fu_1453_p1 = exp_lut_sigma_color_q0;

assign color_weights_2_cast41_fu_1505_p1 = color_weights_2_reg_3868;

assign color_weights_cast40_fu_1450_p1 = color_weights_reg_3829;

assign conv_i190_i_i_fu_523_p1 = col_reg_3627_pp0_iter1_reg;

assign diffpx_10_fu_1386_p2 = (10'd0 - add_ln68_3_reg_3756);

assign diffpx_11_fu_1391_p3 = ((tmp_30_reg_3762[0:0] == 1'b1) ? diffpx_10_fu_1386_p2 : add_ln68_3_reg_3756);

assign diffpx_1_fu_1071_p2 = (10'd0 - add_ln68_reg_3712);

assign diffpx_2_fu_1076_p3 = ((tmp_12_reg_3718[0:0] == 1'b1) ? diffpx_1_fu_1071_p2 : add_ln68_reg_3712);

assign diffpx_3_fu_1230_p2 = ($signed(sext_ln92_1_fu_1222_p1) + $signed(sext_ln93_3_fu_1212_p1));

assign diffpx_4_fu_1412_p2 = (10'd0 - add_ln68_1_reg_3802);

assign diffpx_5_fu_1417_p3 = ((tmp_18_reg_3808[0:0] == 1'b1) ? diffpx_4_fu_1412_p2 : add_ln68_1_reg_3802);

assign diffpx_6_fu_1366_p2 = ($signed(sext_ln92_2_fu_1358_p1) + $signed(sext_ln93_5_fu_1348_p1));

assign diffpx_7_fu_1428_p2 = (10'd0 - add_ln68_2_reg_3813);

assign diffpx_8_fu_1433_p3 = ((tmp_24_reg_3819[0:0] == 1'b1) ? diffpx_7_fu_1428_p2 : add_ln68_2_reg_3813);

assign diffpx_9_fu_1010_p2 = ($signed(sext_ln92_3_fu_1002_p1) + $signed(sext_ln93_7_fu_992_p1));

assign diffpx_fu_820_p2 = ($signed(sext_ln92_fu_812_p1) + $signed(sext_ln93_1_fu_802_p1));

assign empty_46_fu_1457_p2 = (color_weights_1_cast39_fu_1453_p1 + color_weights_cast40_fu_1450_p1);

assign exp_lut_sigma_color_1_address0 = zext_ln106_2_fu_1439_p1;

assign exp_lut_sigma_color_2_address0 = zext_ln106_3_fu_1397_p1;

assign exp_lut_sigma_color_address0 = zext_ln106_1_fu_1423_p1;

assign exp_lut_sigma_color_address1 = zext_ln106_fu_1082_p1;

assign grp_fu_3499_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3499_p1 = grp_fu_3499_p10;

assign grp_fu_3499_p10 = trunc_ln92_reg_3679_pp0_iter5_reg;

assign grp_fu_3499_p2 = grp_fu_3499_p20;

assign grp_fu_3499_p20 = mul_ln107_reg_3911;

assign grp_fu_3508_p0 = zext_ln107_7_fu_1463_p1;

assign grp_fu_3508_p1 = grp_fu_3508_p10;

assign grp_fu_3508_p10 = trunc_ln92_4_reg_3741_pp0_iter5_reg;

assign grp_fu_3508_p2 = grp_fu_3508_p20;

assign grp_fu_3508_p20 = mul_ln107_1_reg_3916;

assign grp_fu_3517_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3517_p1 = grp_fu_3517_p10;

assign grp_fu_3517_p10 = tmp_5_reg_3690_pp0_iter5_reg;

assign grp_fu_3517_p2 = grp_fu_3517_p20;

assign grp_fu_3517_p20 = mul_ln107_4_reg_3927;

assign grp_fu_3526_p0 = zext_ln107_7_fu_1463_p1;

assign grp_fu_3526_p1 = grp_fu_3526_p10;

assign grp_fu_3526_p10 = tmp_25_reg_3746_pp0_iter5_reg;

assign grp_fu_3526_p2 = grp_fu_3526_p20;

assign grp_fu_3526_p20 = mul_ln107_5_reg_3932;

assign grp_fu_3535_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3535_p1 = grp_fu_3535_p10;

assign grp_fu_3535_p10 = tmp_9_reg_3701_pp0_iter5_reg;

assign grp_fu_3535_p2 = grp_fu_3535_p20;

assign grp_fu_3535_p20 = mul_ln107_8_reg_3937;

assign grp_fu_3544_p0 = zext_ln107_7_fu_1463_p1;

assign grp_fu_3544_p1 = grp_fu_3544_p10;

assign grp_fu_3544_p10 = tmp_28_reg_3751_pp0_iter5_reg;

assign grp_fu_3544_p2 = grp_fu_3544_p20;

assign grp_fu_3544_p20 = mul_ln107_9_reg_3942;

assign grp_fu_442_p1 = LD_reg_4051;

assign grp_fu_715_p_ce = 1'b1;

assign grp_fu_715_p_din0 = mul_val_reg_4257;

assign icmp_ln114_1_fu_1721_p2 = ((and_ln114_2_fu_1716_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_2_fu_1777_p2 = (($signed(add_ln114_fu_1686_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_1701_p2 = (($signed(tmp_33_fu_1691_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_10_fu_2403_p2 = ((and_ln115_8_fu_2398_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_11_fu_2459_p2 = (($signed(add_ln115_8_fu_2368_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_1_fu_2119_p2 = (($signed(tmp_40_fu_2109_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_2_fu_2139_p2 = ((and_ln115_6_fu_2134_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_3_fu_2195_p2 = (($signed(add_ln115_fu_2104_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_4_fu_2231_p2 = ((px_sum_3_reg_4027_pp0_iter24_reg == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_5_fu_2251_p2 = (($signed(tmp_54_fu_2241_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_6_fu_2271_p2 = ((and_ln115_7_fu_2266_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_7_fu_2327_p2 = (($signed(add_ln115_4_fu_2236_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_8_fu_2363_p2 = ((px_sum_5_reg_4034_pp0_iter24_reg == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_9_fu_2383_p2 = (($signed(tmp_62_fu_2373_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2099_p2 = ((px_sum_1_reg_4000_pp0_iter24_reg == 28'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_10_fu_3056_p2 = ((trunc_ln116_12_reg_4315 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_11_fu_3067_p2 = (($signed(sub_ln116_7_fu_3061_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_12_fu_3093_p2 = ((sub_ln116_7_fu_3061_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_13_fu_3266_p2 = ((select_ln116_9_reg_4432 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_14_fu_3113_p2 = ((tmp_68_fu_3103_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_2887_p2 = (($signed(sub_ln116_1_fu_2881_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_2913_p2 = ((sub_ln116_1_fu_2881_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_3122_p2 = ((select_ln116_1_reg_4352 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_2933_p2 = ((tmp_52_fu_2923_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_2966_p2 = ((trunc_ln116_6_reg_4295 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_2977_p2 = (($signed(sub_ln116_4_fu_2971_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_3003_p2 = ((sub_ln116_4_fu_2971_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_3194_p2 = ((select_ln116_5_reg_4392 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_3023_p2 = ((tmp_61_fu_3013_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2876_p2 = ((trunc_ln116_reg_4275 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_488_p2 = ((zext_ln185_fu_484_p1 > imgwidth) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_500_p2 = ((zext_ln185_fu_484_p1 < imgwidth) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_529_p2 = ((col_reg_3627_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign imgInput_data_blk_n = 1'b1;

assign imgOutput_data_blk_n = 1'b1;

assign imgOutput_data_din = pf_imgOutput_data_U_data_out;

assign lshr_ln114_2_fu_1710_p2 = 32'd4294967295 >> zext_ln114_5_fu_1707_p1;

assign lshr_ln114_fu_1792_p2 = zext_ln114_fu_1774_p1 >> zext_ln114_1_fu_1788_p1;

assign lshr_ln115_2_fu_2342_p2 = zext_ln115_4_fu_2324_p1 >> zext_ln115_5_fu_2338_p1;

assign lshr_ln115_4_fu_2474_p2 = zext_ln115_8_fu_2456_p1 >> zext_ln115_9_fu_2470_p1;

assign lshr_ln115_6_fu_2128_p2 = 32'd4294967295 >> zext_ln115_15_fu_2125_p1;

assign lshr_ln115_7_fu_2260_p2 = 32'd4294967295 >> zext_ln115_16_fu_2257_p1;

assign lshr_ln115_8_fu_2392_p2 = 32'd4294967295 >> zext_ln115_17_fu_2389_p1;

assign lshr_ln115_fu_2210_p2 = zext_ln115_fu_2192_p1 >> zext_ln115_1_fu_2206_p1;

assign mul_ln107_1_fu_1499_p0 = zext_ln107_5_fu_1493_p1;

assign mul_ln107_1_fu_1499_p1 = mul_ln107_1_fu_1499_p10;

assign mul_ln107_1_fu_1499_p10 = trunc_ln92_3_reg_3723_pp0_iter6_reg;

assign mul_ln107_4_fu_1555_p0 = zext_ln107_2_fu_1481_p1;

assign mul_ln107_4_fu_1555_p1 = mul_ln107_4_fu_1555_p10;

assign mul_ln107_4_fu_1555_p10 = tmp_14_reg_3792_pp0_iter6_reg;

assign mul_ln107_5_fu_1564_p0 = zext_ln107_5_fu_1493_p1;

assign mul_ln107_5_fu_1564_p1 = mul_ln107_5_fu_1564_p10;

assign mul_ln107_5_fu_1564_p10 = tmp_20_reg_3729_pp0_iter6_reg;

assign mul_ln107_8_fu_1573_p0 = zext_ln107_2_fu_1481_p1;

assign mul_ln107_8_fu_1573_p1 = mul_ln107_8_fu_1573_p10;

assign mul_ln107_8_fu_1573_p10 = tmp_16_reg_3797_pp0_iter6_reg;

assign mul_ln107_9_fu_1582_p0 = zext_ln107_5_fu_1493_p1;

assign mul_ln107_9_fu_1582_p1 = mul_ln107_9_fu_1582_p10;

assign mul_ln107_9_fu_1582_p10 = tmp_22_reg_3735_pp0_iter6_reg;

assign mul_ln107_fu_1487_p0 = zext_ln107_2_fu_1481_p1;

assign mul_ln107_fu_1487_p1 = mul_ln107_fu_1487_p10;

assign mul_ln107_fu_1487_p10 = trunc_ln92_2_reg_3787_pp0_iter6_reg;

assign or_ln114_fu_1760_p2 = (and_ln114_fu_1727_p2 | and_ln114_1_fu_1754_p2);

assign or_ln115_1_fu_2316_p3 = {{1'd0}, {or_ln115_fu_2310_p2}};

assign or_ln115_2_fu_2448_p3 = {{1'd0}, {or_ln115_4_fu_2442_p2}};

assign or_ln115_3_fu_2178_p2 = (and_ln115_fu_2145_p2 | and_ln115_1_fu_2172_p2);

assign or_ln115_4_fu_2442_p2 = (and_ln115_5_fu_2436_p2 | and_ln115_4_fu_2409_p2);

assign or_ln115_fu_2310_p2 = (and_ln115_3_fu_2304_p2 | and_ln115_2_fu_2277_p2);

assign or_ln116_1_fu_3248_p2 = (icmp_ln116_7_reg_4398 | icmp_ln116_5_reg_4380);

assign or_ln116_2_fu_3320_p2 = (icmp_ln116_12_reg_4438 | icmp_ln116_10_reg_4420);

assign or_ln116_fu_3176_p2 = (icmp_ln116_reg_4340 | icmp_ln116_2_reg_4358);

assign or_ln1_fu_2184_p3 = {{1'd0}, {or_ln115_3_fu_2178_p2}};

assign or_ln_fu_1766_p3 = {{1'd0}, {or_ln114_fu_1760_p2}};

assign p_0_0_06691279_fu_574_p3 = ((spec_select1264[0:0] == 1'b1) ? tmp_s_fu_551_p5 : tmp_2_fu_563_p5);

assign p_0_0_0669_11280_fu_592_p3 = ((spec_select1268[0:0] == 1'b1) ? tmp_s_fu_551_p5 : tmp_3_fu_581_p5);

assign p_0_0_0669_21281_fu_610_p3 = ((spec_select1272[0:0] == 1'b1) ? tmp_s_fu_551_p5 : tmp_4_fu_599_p5);

assign p_cast_fu_1508_p1 = empty_46_reg_3874;

assign pf_imgOutput_data_U_frpsig_data_in = {{{trunc_ln116_s_fu_3478_p4}, {trunc_ln116_9_fu_3427_p4}}, {trunc_ln116_4_fu_3376_p4}};

assign pi_assign_1_fu_2620_p5 = {{zext_ln115_12_fu_2591_p1[63:32]}, {tmp_38_fu_2612_p3}, {zext_ln115_12_fu_2591_p1[22:0]}};

assign pi_assign_2_fu_2676_p5 = {{zext_ln115_13_fu_2647_p1[63:32]}, {tmp_44_fu_2668_p3}, {zext_ln115_13_fu_2647_p1[22:0]}};

assign pi_assign_3_fu_2732_p5 = {{zext_ln115_14_fu_2703_p1[63:32]}, {tmp_50_fu_2724_p3}, {zext_ln115_14_fu_2703_p1[22:0]}};

assign pi_assign_fu_1956_p5 = {{zext_ln114_4_fu_1927_p1[63:32]}, {tmp_34_fu_1948_p3}, {zext_ln114_4_fu_1927_p1[22:0]}};

assign px_sum_1_fu_1680_p2 = (zext_ln107_9_fu_1676_p1 + zext_ln92_3_fu_1652_p1);

assign px_sum_3_fu_1848_p2 = (zext_ln107_15_fu_1844_p1 + zext_ln68_fu_1820_p1);

assign px_sum_5_fu_1889_p2 = (zext_ln107_21_fu_1885_p1 + zext_ln68_1_fu_1861_p1);

assign row_ind_9_read_reg_3621 = row_ind_9;

assign select_ln114_1_fu_1930_p3 = ((tmp_39_reg_4046[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln114_fu_1895_p3 = ((icmp_ln114_2_reg_4012[0:0] == 1'b1) ? lshr_ln114_reg_4017 : shl_ln114_reg_4022);

assign select_ln115_1_fu_2594_p3 = ((tmp_45_reg_4210[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_2_fu_2640_p3 = ((icmp_ln115_reg_4130_pp0_iter26_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_1_fu_2636_p1);

assign select_ln115_3_fu_2527_p3 = ((icmp_ln115_7_reg_4165[0:0] == 1'b1) ? lshr_ln115_2_reg_4170 : shl_ln115_1_reg_4175);

assign select_ln115_4_fu_2650_p3 = ((tmp_57_reg_4220[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_5_fu_2696_p3 = ((icmp_ln115_4_reg_4155_pp0_iter26_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_2_fu_2692_p1);

assign select_ln115_6_fu_2559_p3 = ((icmp_ln115_11_reg_4190[0:0] == 1'b1) ? lshr_ln115_4_reg_4195 : shl_ln115_2_reg_4200);

assign select_ln115_7_fu_2706_p3 = ((tmp_64_reg_4230[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_8_fu_2752_p3 = ((icmp_ln115_8_reg_4180_pp0_iter26_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_3_fu_2748_p1);

assign select_ln115_fu_2495_p3 = ((icmp_ln115_3_reg_4140[0:0] == 1'b1) ? lshr_ln115_reg_4145 : shl_ln115_reg_4150);

assign select_ln116_10_fu_3459_p3 = ((icmp_ln116_13_reg_4495[0:0] == 1'b1) ? trunc_ln116_15_fu_3437_p1 : select_ln116_23_fu_3451_p3);

assign select_ln116_11_fu_3289_p3 = ((icmp_ln116_14_reg_4450[0:0] == 1'b1) ? shl_ln116_2_fu_3284_p2 : 24'd0);

assign select_ln116_12_fu_3152_p3 = ((icmp_ln116_reg_4340[0:0] == 1'b1) ? 24'd0 : select_ln116_3_fu_3145_p3);

assign select_ln116_13_fu_3169_p3 = ((and_ln116_fu_3164_p2[0:0] == 1'b1) ? trunc_ln116_2_reg_4364 : select_ln116_12_fu_3152_p3);

assign select_ln116_14_fu_3364_p3 = ((and_ln116_1_reg_4470[0:0] == 1'b1) ? select_ln116_2_fu_3357_p3 : select_ln116_13_reg_4465);

assign select_ln116_15_fu_3224_p3 = ((icmp_ln116_5_reg_4380[0:0] == 1'b1) ? 24'd0 : select_ln116_7_fu_3217_p3);

assign select_ln116_16_fu_3241_p3 = ((and_ln116_2_fu_3236_p2[0:0] == 1'b1) ? trunc_ln116_8_reg_4404 : select_ln116_15_fu_3224_p3);

assign select_ln116_17_fu_3415_p3 = ((and_ln116_3_reg_4490[0:0] == 1'b1) ? select_ln116_6_fu_3408_p3 : select_ln116_16_reg_4485);

assign select_ln116_18_fu_3296_p3 = ((icmp_ln116_10_reg_4420[0:0] == 1'b1) ? 24'd0 : select_ln116_11_fu_3289_p3);

assign select_ln116_19_fu_3313_p3 = ((and_ln116_4_fu_3308_p2[0:0] == 1'b1) ? trunc_ln116_14_reg_4444 : select_ln116_18_fu_3296_p3);

assign select_ln116_1_fu_2905_p3 = ((icmp_ln116_1_fu_2887_p2[0:0] == 1'b1) ? add_ln116_fu_2893_p2 : sub_ln116_2_fu_2899_p2);

assign select_ln116_20_fu_3466_p3 = ((and_ln116_5_reg_4510[0:0] == 1'b1) ? select_ln116_10_fu_3459_p3 : select_ln116_19_reg_4505);

assign select_ln116_21_fu_3349_p3 = ((tmp_51_fu_3341_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_22_fu_3400_p3 = ((tmp_60_fu_3392_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_23_fu_3451_p3 = ((tmp_67_fu_3443_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_2_fu_3357_p3 = ((icmp_ln116_3_reg_4455[0:0] == 1'b1) ? trunc_ln116_3_fu_3335_p1 : select_ln116_21_fu_3349_p3);

assign select_ln116_3_fu_3145_p3 = ((icmp_ln116_4_reg_4370[0:0] == 1'b1) ? shl_ln116_fu_3140_p2 : 24'd0);

assign select_ln116_4_fu_2959_p3 = ((tmp_58_reg_4300[0:0] == 1'b1) ? sub_ln116_3_fu_2953_p2 : zext_ln116_5_fu_2949_p1);

assign select_ln116_5_fu_2995_p3 = ((icmp_ln116_6_fu_2977_p2[0:0] == 1'b1) ? add_ln116_2_fu_2983_p2 : sub_ln116_5_fu_2989_p2);

assign select_ln116_6_fu_3408_p3 = ((icmp_ln116_8_reg_4475[0:0] == 1'b1) ? trunc_ln116_10_fu_3386_p1 : select_ln116_22_fu_3400_p3);

assign select_ln116_7_fu_3217_p3 = ((icmp_ln116_9_reg_4410[0:0] == 1'b1) ? shl_ln116_1_fu_3212_p2 : 24'd0);

assign select_ln116_8_fu_3049_p3 = ((tmp_65_reg_4320[0:0] == 1'b1) ? sub_ln116_6_fu_3043_p2 : zext_ln116_9_fu_3039_p1);

assign select_ln116_9_fu_3085_p3 = ((icmp_ln116_11_fu_3067_p2[0:0] == 1'b1) ? add_ln116_4_fu_3073_p2 : sub_ln116_8_fu_3079_p2);

assign select_ln116_fu_2869_p3 = ((tmp_46_reg_4280[0:0] == 1'b1) ? sub_ln116_fu_2863_p2 : zext_ln116_1_fu_2859_p1);

assign select_ln328_1_fu_624_p3 = ((icmp_ln191_reg_3638_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_0669_11280_fu_592_p3 : empty_43_fu_222);

assign select_ln328_2_fu_631_p3 = ((icmp_ln191_reg_3638_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_0669_21281_fu_610_p3 : empty_44_fu_226);

assign select_ln328_fu_617_p3 = ((icmp_ln191_reg_3638_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_06691279_fu_574_p3 : empty_fu_218);

assign select_ln349_fu_1402_p3 = ((icmp_ln336_reg_3664_pp0_iter3_reg[0:0] == 1'b1) ? select_ln328_1_reg_3674 : p_load133_reg_3777);

assign select_ln61_10_fu_938_p3 = ((tmp_27_fu_930_p3[0:0] == 1'b1) ? sub_ln61_10_fu_924_p2 : sub_ln61_22_fu_918_p2);

assign select_ln61_11_fu_984_p3 = ((tmp_29_fu_976_p3[0:0] == 1'b1) ? sub_ln61_11_fu_970_p2 : sub_ln61_23_fu_964_p2);

assign select_ln61_1_fu_734_p3 = ((tmp_8_fu_726_p3[0:0] == 1'b1) ? sub_ln61_1_fu_720_p2 : sub_ln61_13_fu_714_p2);

assign select_ln61_2_fu_794_p3 = ((tmp_11_fu_786_p3[0:0] == 1'b1) ? sub_ln61_2_fu_780_p2 : sub_ln61_14_fu_774_p2);

assign select_ln61_3_fu_1114_p3 = ((tmp_13_fu_1106_p3[0:0] == 1'b1) ? sub_ln61_3_fu_1100_p2 : sub_ln61_15_fu_1095_p2);

assign select_ln61_4_fu_1159_p3 = ((tmp_15_fu_1151_p3[0:0] == 1'b1) ? sub_ln61_4_fu_1145_p2 : sub_ln61_16_fu_1140_p2);

assign select_ln61_5_fu_1204_p3 = ((tmp_17_fu_1196_p3[0:0] == 1'b1) ? sub_ln61_5_fu_1190_p2 : sub_ln61_17_fu_1185_p2);

assign select_ln61_6_fu_1272_p3 = ((tmp_19_fu_1264_p3[0:0] == 1'b1) ? sub_ln61_6_fu_1258_p2 : sub_ln61_18_fu_1253_p2);

assign select_ln61_7_fu_1306_p3 = ((tmp_21_fu_1298_p3[0:0] == 1'b1) ? sub_ln61_7_fu_1292_p2 : sub_ln61_19_fu_1287_p2);

assign select_ln61_8_fu_1340_p3 = ((tmp_23_fu_1332_p3[0:0] == 1'b1) ? sub_ln61_8_fu_1326_p2 : sub_ln61_20_fu_1321_p2);

assign select_ln61_9_fu_892_p3 = ((tmp_26_fu_884_p3[0:0] == 1'b1) ? sub_ln61_9_fu_878_p2 : sub_ln61_21_fu_872_p2);

assign select_ln61_fu_674_p3 = ((tmp_6_fu_666_p3[0:0] == 1'b1) ? sub_ln61_fu_660_p2 : sub_ln61_12_fu_654_p2);

assign sext_ln116_1_fu_3191_p1 = select_ln116_5_reg_4392;

assign sext_ln116_1cast_fu_3208_p1 = sext_ln116_1_fu_3191_p1[23:0];

assign sext_ln116_2_fu_3263_p1 = select_ln116_9_reg_4432;

assign sext_ln116_2cast_fu_3280_p1 = sext_ln116_2_fu_3263_p1[23:0];

assign sext_ln116_fu_3119_p1 = select_ln116_1_reg_4352;

assign sext_ln116cast_fu_3136_p1 = sext_ln116_fu_3119_p1[23:0];

assign sext_ln92_1_fu_1222_p1 = add_ln93_1_fu_1216_p2;

assign sext_ln92_2_fu_1358_p1 = add_ln93_2_fu_1352_p2;

assign sext_ln92_3_fu_1002_p1 = add_ln93_3_fu_996_p2;

assign sext_ln92_4_fu_816_p1 = select_ln61_2_fu_794_p3;

assign sext_ln92_5_fu_1226_p1 = select_ln61_5_fu_1204_p3;

assign sext_ln92_6_fu_1362_p1 = select_ln61_8_fu_1340_p3;

assign sext_ln92_7_fu_1006_p1 = select_ln61_11_fu_984_p3;

assign sext_ln92_fu_812_p1 = add_ln93_fu_806_p2;

assign sext_ln93_1_fu_802_p1 = select_ln61_2_fu_794_p3;

assign sext_ln93_2_fu_1122_p1 = $signed(select_ln61_3_fu_1114_p3);

assign sext_ln93_3_fu_1212_p1 = select_ln61_5_fu_1204_p3;

assign sext_ln93_4_fu_1280_p1 = $signed(select_ln61_6_fu_1272_p3);

assign sext_ln93_5_fu_1348_p1 = select_ln61_8_fu_1340_p3;

assign sext_ln93_6_fu_900_p1 = $signed(select_ln61_9_fu_892_p3);

assign sext_ln93_7_fu_992_p1 = select_ln61_11_fu_984_p3;

assign sext_ln93_fu_682_p1 = $signed(select_ln61_fu_674_p3);

assign sext_ln94_1_fu_1167_p1 = $signed(select_ln61_4_fu_1159_p3);

assign sext_ln94_2_fu_1314_p1 = $signed(select_ln61_7_fu_1306_p3);

assign sext_ln94_3_fu_946_p1 = $signed(select_ln61_10_fu_938_p3);

assign sext_ln94_fu_742_p1 = $signed(select_ln61_1_fu_734_p3);

assign shl_ln107_1_fu_1813_p3 = {{tmp_53_reg_3767_pp0_iter8_reg}, {16'd0}};

assign shl_ln107_2_fu_1854_p3 = {{tmp_56_reg_3772_pp0_iter8_reg}, {16'd0}};

assign shl_ln107_fu_1647_p2 = p_load132_reg_3669_pp0_iter8_reg << 24'd16;

assign shl_ln114_fu_1807_p2 = zext_ln114_fu_1774_p1 << zext_ln114_2_fu_1803_p1;

assign shl_ln115_1_fu_2357_p2 = zext_ln115_4_fu_2324_p1 << zext_ln115_6_fu_2353_p1;

assign shl_ln115_2_fu_2489_p2 = zext_ln115_8_fu_2456_p1 << zext_ln115_10_fu_2485_p1;

assign shl_ln115_fu_2225_p2 = zext_ln115_fu_2192_p1 << zext_ln115_2_fu_2221_p1;

assign shl_ln116_1_fu_3212_p2 = trunc_ln116_8_reg_4404 << sext_ln116_1cast_fu_3208_p1;

assign shl_ln116_2_fu_3284_p2 = trunc_ln116_14_reg_4444 << sext_ln116_2cast_fu_3280_p1;

assign shl_ln116_fu_3140_p2 = trunc_ln116_2_reg_4364 << sext_ln116cast_fu_3136_p1;

assign shl_ln1_fu_1525_p3 = {{color_weights_3_reg_3845_pp0_iter6_reg}, {1'd0}};

assign sub_ln114_1_fu_1798_p2 = (32'd25 - sub_ln114_reg_3963);

assign sub_ln114_2_fu_1937_p2 = (8'd16 - trunc_ln114_1_reg_3975_pp0_iter10_reg);

assign sub_ln114_3_fu_1625_p2 = ($signed(5'd25) - $signed(trunc_ln114_fu_1621_p1));

assign sub_ln114_fu_1615_p2 = (32'd32 - tmp_32_fu_1607_p3);

assign sub_ln115_10_fu_2048_p2 = ($signed(5'd25) - $signed(trunc_ln115_2_fu_2044_p1));

assign sub_ln115_11_fu_2089_p2 = ($signed(5'd25) - $signed(trunc_ln115_4_fu_2085_p1));

assign sub_ln115_1_fu_2216_p2 = (32'd25 - sub_ln115_reg_4067);

assign sub_ln115_2_fu_2038_p2 = (32'd32 - tmp_42_fu_2030_p3);

assign sub_ln115_3_fu_2348_p2 = (32'd25 - sub_ln115_2_reg_4090);

assign sub_ln115_4_fu_2079_p2 = (32'd32 - tmp_48_fu_2071_p3);

assign sub_ln115_5_fu_2480_p2 = (32'd25 - sub_ln115_4_reg_4113);

assign sub_ln115_6_fu_2601_p2 = (8'd16 - trunc_ln115_1_reg_4079_pp0_iter26_reg);

assign sub_ln115_7_fu_2657_p2 = (8'd16 - trunc_ln115_3_reg_4102_pp0_iter26_reg);

assign sub_ln115_8_fu_2713_p2 = (8'd16 - trunc_ln115_5_reg_4125_pp0_iter26_reg);

assign sub_ln115_9_fu_2007_p2 = ($signed(5'd25) - $signed(trunc_ln115_fu_2003_p1));

assign sub_ln115_fu_1997_p2 = (32'd32 - tmp_36_fu_1989_p3);

assign sub_ln116_1_fu_2881_p2 = (12'd1075 - zext_ln116_fu_2849_p1);

assign sub_ln116_2_fu_2899_p2 = (12'd16 - sub_ln116_1_fu_2881_p2);

assign sub_ln116_3_fu_2953_p2 = (54'd0 - zext_ln116_5_fu_2949_p1);

assign sub_ln116_4_fu_2971_p2 = (12'd1075 - zext_ln116_4_fu_2939_p1);

assign sub_ln116_5_fu_2989_p2 = (12'd16 - sub_ln116_4_fu_2971_p2);

assign sub_ln116_6_fu_3043_p2 = (54'd0 - zext_ln116_9_fu_3039_p1);

assign sub_ln116_7_fu_3061_p2 = (12'd1075 - zext_ln116_8_fu_3029_p1);

assign sub_ln116_8_fu_3079_p2 = (12'd16 - sub_ln116_7_fu_3061_p2);

assign sub_ln116_fu_2863_p2 = (54'd0 - zext_ln116_1_fu_2859_p1);

assign sub_ln61_10_fu_924_p2 = (9'd0 - sub_ln61_22_fu_918_p2);

assign sub_ln61_11_fu_970_p2 = (9'd0 - sub_ln61_23_fu_964_p2);

assign sub_ln61_12_fu_654_p2 = (zext_ln92_fu_646_p1 - zext_ln92_1_fu_650_p1);

assign sub_ln61_13_fu_714_p2 = (zext_ln93_fu_706_p1 - zext_ln93_1_fu_710_p1);

assign sub_ln61_14_fu_774_p2 = (zext_ln94_fu_766_p1 - zext_ln94_1_fu_770_p1);

assign sub_ln61_15_fu_1095_p2 = (zext_ln92_2_fu_1091_p1 - zext_ln92_1_reg_3684);

assign sub_ln61_16_fu_1140_p2 = (zext_ln93_2_fu_1136_p1 - zext_ln93_1_reg_3695);

assign sub_ln61_17_fu_1185_p2 = (zext_ln94_2_fu_1181_p1 - zext_ln94_1_reg_3706);

assign sub_ln61_18_fu_1253_p2 = (zext_ln92_4_fu_1250_p1 - zext_ln92_1_reg_3684);

assign sub_ln61_19_fu_1287_p2 = (zext_ln93_3_fu_1284_p1 - zext_ln93_1_reg_3695);

assign sub_ln61_1_fu_720_p2 = (9'd0 - sub_ln61_13_fu_714_p2);

assign sub_ln61_20_fu_1321_p2 = (zext_ln94_3_fu_1318_p1 - zext_ln94_1_reg_3706);

assign sub_ln61_21_fu_872_p2 = (zext_ln92_5_fu_868_p1 - zext_ln92_1_fu_650_p1);

assign sub_ln61_22_fu_918_p2 = (zext_ln93_4_fu_914_p1 - zext_ln93_1_fu_710_p1);

assign sub_ln61_23_fu_964_p2 = (zext_ln94_4_fu_960_p1 - zext_ln94_1_fu_770_p1);

assign sub_ln61_2_fu_780_p2 = (9'd0 - sub_ln61_14_fu_774_p2);

assign sub_ln61_3_fu_1100_p2 = (9'd0 - sub_ln61_15_fu_1095_p2);

assign sub_ln61_4_fu_1145_p2 = (9'd0 - sub_ln61_16_fu_1140_p2);

assign sub_ln61_5_fu_1190_p2 = (9'd0 - sub_ln61_17_fu_1185_p2);

assign sub_ln61_6_fu_1258_p2 = (9'd0 - sub_ln61_18_fu_1253_p2);

assign sub_ln61_7_fu_1292_p2 = (9'd0 - sub_ln61_19_fu_1287_p2);

assign sub_ln61_8_fu_1326_p2 = (9'd0 - sub_ln61_20_fu_1321_p2);

assign sub_ln61_9_fu_878_p2 = (9'd0 - sub_ln61_21_fu_872_p2);

assign sub_ln61_fu_660_p2 = (9'd0 - sub_ln61_12_fu_654_p2);

assign tmp25_fu_1517_p3 = {{tmp336_fu_1511_p2}, {1'd0}};

assign tmp31_fu_1668_p3 = {{tmp35_fu_1662_p2}, {1'd0}};

assign tmp336_fu_1511_p2 = (p_cast_fu_1508_p1 + color_weights_2_cast41_fu_1505_p1);

assign tmp35_fu_1662_p2 = (tmp41_cast_fu_1659_p1 + tmp_cast_fu_1656_p1);

assign tmp38_cast_fu_1824_p1 = grp_fu_3517_p3;

assign tmp41_cast_fu_1659_p1 = grp_fu_3508_p3;

assign tmp42_cast_fu_1827_p1 = grp_fu_3526_p3;

assign tmp43_cast_fu_1868_p1 = grp_fu_3544_p3;

assign tmp44_fu_1830_p2 = (tmp42_cast_fu_1827_p1 + tmp38_cast_fu_1824_p1);

assign tmp45_fu_1836_p3 = {{tmp44_fu_1830_p2}, {1'd0}};

assign tmp48_cast_fu_1865_p1 = grp_fu_3535_p3;

assign tmp54_fu_1871_p2 = (tmp43_cast_fu_1868_p1 + tmp48_cast_fu_1865_p1);

assign tmp55_fu_1877_p3 = {{tmp54_fu_1871_p2}, {1'd0}};

assign tmp_10_fu_756_p4 = {{empty_43_fu_222[23:16]}};

assign tmp_11_fu_786_p3 = sub_ln61_14_fu_774_p2[32'd8];

assign tmp_13_fu_1106_p3 = sub_ln61_15_fu_1095_p2[32'd8];

assign tmp_14_fu_1126_p4 = {{empty_45_fu_230[15:8]}};

assign tmp_15_fu_1151_p3 = sub_ln61_16_fu_1140_p2[32'd8];

assign tmp_16_fu_1171_p4 = {{empty_45_fu_230[23:16]}};

assign tmp_17_fu_1196_p3 = sub_ln61_17_fu_1185_p2[32'd8];

assign tmp_19_fu_1264_p3 = sub_ln61_18_fu_1253_p2[32'd8];

assign tmp_21_fu_1298_p3 = sub_ln61_19_fu_1287_p2[32'd8];

assign tmp_23_fu_1332_p3 = sub_ln61_20_fu_1321_p2[32'd8];

assign tmp_25_fu_904_p4 = {{empty_44_fu_226[15:8]}};

assign tmp_26_fu_884_p3 = sub_ln61_21_fu_872_p2[32'd8];

assign tmp_27_fu_930_p3 = sub_ln61_22_fu_918_p2[32'd8];

assign tmp_28_fu_950_p4 = {{empty_44_fu_226[23:16]}};

assign tmp_29_fu_976_p3 = sub_ln61_23_fu_964_p2[32'd8];

integer ap_tvar_int_0;

always @ (zext_ln64_fu_1594_p1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_31_fu_1597_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_31_fu_1597_p4[ap_tvar_int_0] = zext_ln64_fu_1594_p1[31 - ap_tvar_int_0];
        end
    end
end


always @ (tmp_31_fu_1597_p4) begin
    if (tmp_31_fu_1597_p4[0] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd0;
    end else if (tmp_31_fu_1597_p4[1] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd1;
    end else if (tmp_31_fu_1597_p4[2] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd2;
    end else if (tmp_31_fu_1597_p4[3] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd3;
    end else if (tmp_31_fu_1597_p4[4] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd4;
    end else if (tmp_31_fu_1597_p4[5] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd5;
    end else if (tmp_31_fu_1597_p4[6] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd6;
    end else if (tmp_31_fu_1597_p4[7] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd7;
    end else if (tmp_31_fu_1597_p4[8] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd8;
    end else if (tmp_31_fu_1597_p4[9] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd9;
    end else if (tmp_31_fu_1597_p4[10] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd10;
    end else if (tmp_31_fu_1597_p4[11] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd11;
    end else if (tmp_31_fu_1597_p4[12] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd12;
    end else if (tmp_31_fu_1597_p4[13] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd13;
    end else if (tmp_31_fu_1597_p4[14] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd14;
    end else if (tmp_31_fu_1597_p4[15] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd15;
    end else if (tmp_31_fu_1597_p4[16] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd16;
    end else if (tmp_31_fu_1597_p4[17] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd17;
    end else if (tmp_31_fu_1597_p4[18] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd18;
    end else if (tmp_31_fu_1597_p4[19] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd19;
    end else if (tmp_31_fu_1597_p4[20] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd20;
    end else if (tmp_31_fu_1597_p4[21] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd21;
    end else if (tmp_31_fu_1597_p4[22] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd22;
    end else if (tmp_31_fu_1597_p4[23] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd23;
    end else if (tmp_31_fu_1597_p4[24] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd24;
    end else if (tmp_31_fu_1597_p4[25] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd25;
    end else if (tmp_31_fu_1597_p4[26] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd26;
    end else if (tmp_31_fu_1597_p4[27] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd27;
    end else if (tmp_31_fu_1597_p4[28] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd28;
    end else if (tmp_31_fu_1597_p4[29] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd29;
    end else if (tmp_31_fu_1597_p4[30] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd30;
    end else if (tmp_31_fu_1597_p4[31] == 1'b1) begin
        tmp_32_fu_1607_p3 = 32'd31;
    end else begin
        tmp_32_fu_1607_p3 = 32'd32;
    end
end

assign tmp_33_fu_1691_p4 = {{add_ln114_fu_1686_p2[31:1]}};

assign tmp_34_fu_1948_p3 = {{1'd0}, {add_ln114_3_fu_1942_p2}};

integer ap_tvar_int_1;

always @ (zext_ln65_1_fu_1976_p1) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_35_fu_1979_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_35_fu_1979_p4[ap_tvar_int_1] = zext_ln65_1_fu_1976_p1[31 - ap_tvar_int_1];
        end
    end
end


always @ (tmp_35_fu_1979_p4) begin
    if (tmp_35_fu_1979_p4[0] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd0;
    end else if (tmp_35_fu_1979_p4[1] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd1;
    end else if (tmp_35_fu_1979_p4[2] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd2;
    end else if (tmp_35_fu_1979_p4[3] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd3;
    end else if (tmp_35_fu_1979_p4[4] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd4;
    end else if (tmp_35_fu_1979_p4[5] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd5;
    end else if (tmp_35_fu_1979_p4[6] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd6;
    end else if (tmp_35_fu_1979_p4[7] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd7;
    end else if (tmp_35_fu_1979_p4[8] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd8;
    end else if (tmp_35_fu_1979_p4[9] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd9;
    end else if (tmp_35_fu_1979_p4[10] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd10;
    end else if (tmp_35_fu_1979_p4[11] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd11;
    end else if (tmp_35_fu_1979_p4[12] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd12;
    end else if (tmp_35_fu_1979_p4[13] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd13;
    end else if (tmp_35_fu_1979_p4[14] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd14;
    end else if (tmp_35_fu_1979_p4[15] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd15;
    end else if (tmp_35_fu_1979_p4[16] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd16;
    end else if (tmp_35_fu_1979_p4[17] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd17;
    end else if (tmp_35_fu_1979_p4[18] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd18;
    end else if (tmp_35_fu_1979_p4[19] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd19;
    end else if (tmp_35_fu_1979_p4[20] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd20;
    end else if (tmp_35_fu_1979_p4[21] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd21;
    end else if (tmp_35_fu_1979_p4[22] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd22;
    end else if (tmp_35_fu_1979_p4[23] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd23;
    end else if (tmp_35_fu_1979_p4[24] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd24;
    end else if (tmp_35_fu_1979_p4[25] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd25;
    end else if (tmp_35_fu_1979_p4[26] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd26;
    end else if (tmp_35_fu_1979_p4[27] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd27;
    end else if (tmp_35_fu_1979_p4[28] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd28;
    end else if (tmp_35_fu_1979_p4[29] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd29;
    end else if (tmp_35_fu_1979_p4[30] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd30;
    end else if (tmp_35_fu_1979_p4[31] == 1'b1) begin
        tmp_36_fu_1989_p3 = 32'd31;
    end else begin
        tmp_36_fu_1989_p3 = 32'd32;
    end
end

assign tmp_37_fu_1733_p3 = add_ln114_fu_1686_p2[32'd31];

assign tmp_38_fu_2612_p3 = {{1'd0}, {add_ln115_3_fu_2606_p2}};

assign tmp_40_fu_2109_p4 = {{add_ln115_fu_2104_p2[31:1]}};

integer ap_tvar_int_2;

always @ (zext_ln65_3_fu_2017_p1) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_41_fu_2020_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_41_fu_2020_p4[ap_tvar_int_2] = zext_ln65_3_fu_2017_p1[31 - ap_tvar_int_2];
        end
    end
end


always @ (tmp_41_fu_2020_p4) begin
    if (tmp_41_fu_2020_p4[0] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd0;
    end else if (tmp_41_fu_2020_p4[1] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd1;
    end else if (tmp_41_fu_2020_p4[2] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd2;
    end else if (tmp_41_fu_2020_p4[3] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd3;
    end else if (tmp_41_fu_2020_p4[4] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd4;
    end else if (tmp_41_fu_2020_p4[5] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd5;
    end else if (tmp_41_fu_2020_p4[6] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd6;
    end else if (tmp_41_fu_2020_p4[7] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd7;
    end else if (tmp_41_fu_2020_p4[8] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd8;
    end else if (tmp_41_fu_2020_p4[9] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd9;
    end else if (tmp_41_fu_2020_p4[10] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd10;
    end else if (tmp_41_fu_2020_p4[11] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd11;
    end else if (tmp_41_fu_2020_p4[12] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd12;
    end else if (tmp_41_fu_2020_p4[13] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd13;
    end else if (tmp_41_fu_2020_p4[14] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd14;
    end else if (tmp_41_fu_2020_p4[15] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd15;
    end else if (tmp_41_fu_2020_p4[16] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd16;
    end else if (tmp_41_fu_2020_p4[17] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd17;
    end else if (tmp_41_fu_2020_p4[18] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd18;
    end else if (tmp_41_fu_2020_p4[19] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd19;
    end else if (tmp_41_fu_2020_p4[20] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd20;
    end else if (tmp_41_fu_2020_p4[21] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd21;
    end else if (tmp_41_fu_2020_p4[22] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd22;
    end else if (tmp_41_fu_2020_p4[23] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd23;
    end else if (tmp_41_fu_2020_p4[24] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd24;
    end else if (tmp_41_fu_2020_p4[25] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd25;
    end else if (tmp_41_fu_2020_p4[26] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd26;
    end else if (tmp_41_fu_2020_p4[27] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd27;
    end else if (tmp_41_fu_2020_p4[28] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd28;
    end else if (tmp_41_fu_2020_p4[29] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd29;
    end else if (tmp_41_fu_2020_p4[30] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd30;
    end else if (tmp_41_fu_2020_p4[31] == 1'b1) begin
        tmp_42_fu_2030_p3 = 32'd31;
    end else begin
        tmp_42_fu_2030_p3 = 32'd32;
    end
end

assign tmp_43_fu_2151_p3 = add_ln115_fu_2104_p2[32'd31];

assign tmp_44_fu_2668_p3 = {{1'd0}, {add_ln115_7_fu_2662_p2}};

integer ap_tvar_int_3;

always @ (zext_ln65_5_fu_2058_p1) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            tmp_47_fu_2061_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_47_fu_2061_p4[ap_tvar_int_3] = zext_ln65_5_fu_2058_p1[31 - ap_tvar_int_3];
        end
    end
end


always @ (tmp_47_fu_2061_p4) begin
    if (tmp_47_fu_2061_p4[0] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd0;
    end else if (tmp_47_fu_2061_p4[1] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd1;
    end else if (tmp_47_fu_2061_p4[2] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd2;
    end else if (tmp_47_fu_2061_p4[3] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd3;
    end else if (tmp_47_fu_2061_p4[4] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd4;
    end else if (tmp_47_fu_2061_p4[5] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd5;
    end else if (tmp_47_fu_2061_p4[6] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd6;
    end else if (tmp_47_fu_2061_p4[7] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd7;
    end else if (tmp_47_fu_2061_p4[8] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd8;
    end else if (tmp_47_fu_2061_p4[9] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd9;
    end else if (tmp_47_fu_2061_p4[10] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd10;
    end else if (tmp_47_fu_2061_p4[11] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd11;
    end else if (tmp_47_fu_2061_p4[12] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd12;
    end else if (tmp_47_fu_2061_p4[13] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd13;
    end else if (tmp_47_fu_2061_p4[14] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd14;
    end else if (tmp_47_fu_2061_p4[15] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd15;
    end else if (tmp_47_fu_2061_p4[16] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd16;
    end else if (tmp_47_fu_2061_p4[17] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd17;
    end else if (tmp_47_fu_2061_p4[18] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd18;
    end else if (tmp_47_fu_2061_p4[19] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd19;
    end else if (tmp_47_fu_2061_p4[20] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd20;
    end else if (tmp_47_fu_2061_p4[21] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd21;
    end else if (tmp_47_fu_2061_p4[22] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd22;
    end else if (tmp_47_fu_2061_p4[23] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd23;
    end else if (tmp_47_fu_2061_p4[24] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd24;
    end else if (tmp_47_fu_2061_p4[25] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd25;
    end else if (tmp_47_fu_2061_p4[26] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd26;
    end else if (tmp_47_fu_2061_p4[27] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd27;
    end else if (tmp_47_fu_2061_p4[28] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd28;
    end else if (tmp_47_fu_2061_p4[29] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd29;
    end else if (tmp_47_fu_2061_p4[30] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd30;
    end else if (tmp_47_fu_2061_p4[31] == 1'b1) begin
        tmp_48_fu_2071_p3 = 32'd31;
    end else begin
        tmp_48_fu_2071_p3 = 32'd32;
    end
end

assign tmp_50_fu_2724_p3 = {{1'd0}, {add_ln115_11_fu_2718_p2}};

assign tmp_51_fu_3341_p3 = bitcast_ln724_fu_3338_p1[32'd31];

assign tmp_52_fu_2923_p4 = {{select_ln116_1_fu_2905_p3[11:5]}};

assign tmp_54_fu_2241_p4 = {{add_ln115_4_fu_2236_p2[31:1]}};

assign tmp_55_fu_2283_p3 = add_ln115_4_fu_2236_p2[32'd31];

assign tmp_5_fu_686_p4 = {{empty_fu_218[15:8]}};

assign tmp_60_fu_3392_p3 = bitcast_ln724_4_fu_3389_p1[32'd31];

assign tmp_61_fu_3013_p4 = {{select_ln116_5_fu_2995_p3[11:5]}};

assign tmp_62_fu_2373_p4 = {{add_ln115_8_fu_2368_p2[31:1]}};

assign tmp_63_fu_2415_p3 = add_ln115_8_fu_2368_p2[32'd31];

assign tmp_67_fu_3443_p3 = bitcast_ln724_5_fu_3440_p1[32'd31];

assign tmp_68_fu_3103_p4 = {{select_ln116_9_fu_3085_p3[11:5]}};

assign tmp_6_fu_666_p3 = sub_ln61_12_fu_654_p2[32'd8];

assign tmp_7_fu_696_p4 = {{empty_43_fu_222[15:8]}};

assign tmp_8_fu_726_p3 = sub_ln61_13_fu_714_p2[32'd8];

assign tmp_9_fu_746_p4 = {{empty_fu_218[23:16]}};

assign tmp_cast_fu_1656_p1 = grp_fu_3499_p3;

assign trunc_ln114_1_fu_1631_p1 = tmp_32_fu_1607_p3[7:0];

assign trunc_ln114_fu_1621_p1 = sub_ln114_fu_1615_p2[4:0];

assign trunc_ln115_1_fu_2013_p1 = tmp_36_fu_1989_p3[7:0];

assign trunc_ln115_2_fu_2044_p1 = sub_ln115_2_fu_2038_p2[4:0];

assign trunc_ln115_3_fu_2054_p1 = tmp_42_fu_2030_p3[7:0];

assign trunc_ln115_4_fu_2085_p1 = sub_ln115_4_fu_2079_p2[4:0];

assign trunc_ln115_5_fu_2095_p1 = tmp_48_fu_2071_p3[7:0];

assign trunc_ln115_fu_2003_p1 = sub_ln115_fu_1997_p2[4:0];

assign trunc_ln116_10_fu_3386_p1 = ashr_ln116_1_reg_4480[23:0];

assign trunc_ln116_12_fu_2823_p1 = bitcast_ln724_3_fu_2819_p1[62:0];

assign trunc_ln116_13_fu_2845_p1 = bitcast_ln724_3_fu_2819_p1[51:0];

assign trunc_ln116_14_fu_3099_p1 = select_ln116_8_fu_3049_p3[23:0];

assign trunc_ln116_15_fu_3437_p1 = ashr_ln116_2_reg_4500[23:0];

assign trunc_ln116_1_fu_2785_p1 = bitcast_ln724_1_fu_2759_p1[51:0];

assign trunc_ln116_2_fu_2919_p1 = select_ln116_fu_2869_p3[23:0];

assign trunc_ln116_3_fu_3335_p1 = ashr_ln116_reg_4460[23:0];

assign trunc_ln116_4_fu_3376_p4 = {{add_ln116_1_fu_3370_p2[23:16]}};

assign trunc_ln116_6_fu_2793_p1 = bitcast_ln724_2_fu_2789_p1[62:0];

assign trunc_ln116_7_fu_2815_p1 = bitcast_ln724_2_fu_2789_p1[51:0];

assign trunc_ln116_8_fu_3009_p1 = select_ln116_4_fu_2959_p3[23:0];

assign trunc_ln116_9_fu_3427_p4 = {{add_ln116_3_fu_3421_p2[23:16]}};

assign trunc_ln116_fu_2763_p1 = bitcast_ln724_1_fu_2759_p1[62:0];

assign trunc_ln116_s_fu_3478_p4 = {{add_ln116_5_fu_3472_p2[23:16]}};

assign trunc_ln92_1_fu_642_p1 = empty_43_fu_222[7:0];

assign trunc_ln92_2_fu_1087_p1 = empty_45_fu_230[7:0];

assign trunc_ln92_3_fu_840_p1 = select_ln328_1_fu_624_p3[7:0];

assign trunc_ln92_4_fu_864_p1 = empty_44_fu_226[7:0];

assign trunc_ln92_fu_638_p1 = empty_fu_218[7:0];

assign weight_sum_2_fu_1536_p2 = (tmp25_fu_1517_p3 + 19'd65536);

assign weight_sum_fu_1546_p2 = (zext_ln108_1_fu_1542_p1 + zext_ln108_fu_1532_p1);

assign xor_ln114_fu_1741_p2 = (tmp_37_fu_1733_p3 ^ 1'd1);

assign xor_ln115_1_fu_2291_p2 = (tmp_55_fu_2283_p3 ^ 1'd1);

assign xor_ln115_2_fu_2423_p2 = (tmp_63_fu_2415_p3 ^ 1'd1);

assign xor_ln115_fu_2159_p2 = (tmp_43_fu_2151_p3 ^ 1'd1);

assign xor_ln116_1_fu_3180_p2 = (or_ln116_fu_3176_p2 ^ 1'd1);

assign xor_ln116_2_fu_3231_p2 = (icmp_ln116_5_reg_4380 ^ 1'd1);

assign xor_ln116_3_fu_3252_p2 = (or_ln116_1_fu_3248_p2 ^ 1'd1);

assign xor_ln116_4_fu_3303_p2 = (icmp_ln116_10_reg_4420 ^ 1'd1);

assign xor_ln116_5_fu_3324_p2 = (or_ln116_2_fu_3320_p2 ^ 1'd1);

assign xor_ln116_fu_3159_p2 = (icmp_ln116_reg_4340 ^ 1'd1);

assign zext_ln106_1_fu_1423_p1 = diffpx_5_fu_1417_p3;

assign zext_ln106_2_fu_1439_p1 = diffpx_8_fu_1433_p3;

assign zext_ln106_3_fu_1397_p1 = diffpx_11_fu_1391_p3;

assign zext_ln106_fu_1082_p1 = diffpx_2_fu_1076_p3;

assign zext_ln107_15_fu_1844_p1 = tmp45_fu_1836_p3;

assign zext_ln107_21_fu_1885_p1 = tmp55_fu_1877_p3;

assign zext_ln107_2_fu_1481_p1 = color_weights_1_reg_3863;

assign zext_ln107_5_fu_1493_p1 = color_weights_2_reg_3868;

assign zext_ln107_7_fu_1463_p1 = color_weights_3_reg_3845;

assign zext_ln107_9_fu_1676_p1 = tmp31_fu_1668_p3;

assign zext_ln107_fu_1444_p1 = color_weights_reg_3829;

assign zext_ln108_1_fu_1542_p1 = weight_sum_2_fu_1536_p2;

assign zext_ln108_fu_1532_p1 = shl_ln1_fu_1525_p3;

assign zext_ln114_1_fu_1788_p1 = add_ln114_1_fu_1783_p2;

assign zext_ln114_2_fu_1803_p1 = sub_ln114_1_fu_1798_p2;

assign zext_ln114_3_fu_1900_p1 = or_ln_reg_4007;

assign zext_ln114_4_fu_1927_p1 = lshr_ln114_1_reg_4041;

assign zext_ln114_5_fu_1707_p1 = sub_ln114_3_reg_3970;

assign zext_ln114_fu_1774_p1 = weight_sum_reg_3921_pp0_iter8_reg;

assign zext_ln115_10_fu_2485_p1 = sub_ln115_5_fu_2480_p2;

assign zext_ln115_11_fu_2564_p1 = or_ln115_2_reg_4185;

assign zext_ln115_12_fu_2591_p1 = lshr_ln115_1_reg_4205;

assign zext_ln115_13_fu_2647_p1 = lshr_ln115_3_reg_4215;

assign zext_ln115_14_fu_2703_p1 = lshr_ln115_5_reg_4225;

assign zext_ln115_15_fu_2125_p1 = sub_ln115_9_reg_4074;

assign zext_ln115_16_fu_2257_p1 = sub_ln115_10_reg_4097;

assign zext_ln115_17_fu_2389_p1 = sub_ln115_11_reg_4120;

assign zext_ln115_1_fu_2206_p1 = add_ln115_1_fu_2201_p2;

assign zext_ln115_2_fu_2221_p1 = sub_ln115_1_fu_2216_p2;

assign zext_ln115_3_fu_2500_p1 = or_ln1_reg_4135;

assign zext_ln115_4_fu_2324_p1 = px_sum_3_reg_4027_pp0_iter24_reg;

assign zext_ln115_5_fu_2338_p1 = add_ln115_5_fu_2333_p2;

assign zext_ln115_6_fu_2353_p1 = sub_ln115_3_fu_2348_p2;

assign zext_ln115_7_fu_2532_p1 = or_ln115_1_reg_4160;

assign zext_ln115_8_fu_2456_p1 = px_sum_5_reg_4034_pp0_iter24_reg;

assign zext_ln115_9_fu_2470_p1 = add_ln115_9_fu_2465_p2;

assign zext_ln115_fu_2192_p1 = px_sum_1_reg_4000_pp0_iter24_reg;

assign zext_ln116_10_fu_3271_p1 = $unsigned(sext_ln116_2_fu_3263_p1);

assign zext_ln116_1_cast_fu_2852_p3 = {{1'd1}, {trunc_ln116_1_reg_4290}};

assign zext_ln116_1_fu_2859_p1 = zext_ln116_1_cast_fu_2852_p3;

assign zext_ln116_2_fu_3127_p1 = $unsigned(sext_ln116_fu_3119_p1);

assign zext_ln116_4_fu_2939_p1 = tmp_59_reg_4305;

assign zext_ln116_5_cast_fu_2942_p3 = {{1'd1}, {trunc_ln116_7_reg_4310}};

assign zext_ln116_5_fu_2949_p1 = zext_ln116_5_cast_fu_2942_p3;

assign zext_ln116_6_fu_3199_p1 = $unsigned(sext_ln116_1_fu_3191_p1);

assign zext_ln116_8_fu_3029_p1 = tmp_66_reg_4325;

assign zext_ln116_9_cast_fu_3032_p3 = {{1'd1}, {trunc_ln116_13_reg_4330}};

assign zext_ln116_9_fu_3039_p1 = zext_ln116_9_cast_fu_3032_p3;

assign zext_ln116_fu_2849_p1 = tmp_49_reg_4285;

assign zext_ln185_fu_484_p1 = ap_sig_allocacmp_col;

assign zext_ln192_fu_517_p1 = col_reg_3627;

assign zext_ln64_fu_1594_p1 = weight_sum_reg_3921;

assign zext_ln65_1_fu_1976_p1 = px_sum_1_reg_4000_pp0_iter23_reg;

assign zext_ln65_3_fu_2017_p1 = px_sum_3_reg_4027_pp0_iter23_reg;

assign zext_ln65_5_fu_2058_p1 = px_sum_5_reg_4034_pp0_iter23_reg;

assign zext_ln68_1_fu_1861_p1 = shl_ln107_2_fu_1854_p3;

assign zext_ln68_fu_1820_p1 = shl_ln107_1_fu_1813_p3;

assign zext_ln92_1_fu_650_p1 = trunc_ln92_1_fu_642_p1;

assign zext_ln92_2_fu_1091_p1 = trunc_ln92_2_fu_1087_p1;

assign zext_ln92_3_fu_1652_p1 = shl_ln107_fu_1647_p2;

assign zext_ln92_4_fu_1250_p1 = trunc_ln92_3_reg_3723;

assign zext_ln92_5_fu_868_p1 = trunc_ln92_4_fu_864_p1;

assign zext_ln92_fu_646_p1 = trunc_ln92_fu_638_p1;

assign zext_ln93_1_fu_710_p1 = tmp_7_fu_696_p4;

assign zext_ln93_2_fu_1136_p1 = tmp_14_fu_1126_p4;

assign zext_ln93_3_fu_1284_p1 = tmp_20_reg_3729;

assign zext_ln93_4_fu_914_p1 = tmp_25_fu_904_p4;

assign zext_ln93_fu_706_p1 = tmp_5_fu_686_p4;

assign zext_ln94_1_fu_770_p1 = tmp_10_fu_756_p4;

assign zext_ln94_2_fu_1181_p1 = tmp_16_fu_1171_p4;

assign zext_ln94_3_fu_1318_p1 = tmp_22_reg_3735;

assign zext_ln94_4_fu_960_p1 = tmp_28_fu_950_p4;

assign zext_ln94_fu_766_p1 = tmp_9_fu_746_p4;

always @ (posedge ap_clk) begin
    zext_ln92_1_reg_3684[8] <= 1'b0;
    zext_ln93_1_reg_3695[8] <= 1'b0;
    zext_ln94_1_reg_3706[8] <= 1'b0;
    weight_sum_reg_3921[0] <= 1'b0;
    weight_sum_reg_3921_pp0_iter8_reg[0] <= 1'b0;
    zext_ln64_reg_3957[0] <= 1'b0;
    zext_ln64_reg_3957[31:20] <= 12'b000000000000;
    px_sum_1_reg_4000[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter10_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter11_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter12_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter13_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter14_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter15_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter16_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter17_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter18_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter19_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter20_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter21_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter22_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter23_reg[0] <= 1'b0;
    px_sum_1_reg_4000_pp0_iter24_reg[0] <= 1'b0;
    or_ln_reg_4007[1] <= 1'b0;
    px_sum_3_reg_4027[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter10_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter11_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter12_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter13_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter14_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter15_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter16_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter17_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter18_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter19_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter20_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter21_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter22_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter23_reg[0] <= 1'b0;
    px_sum_3_reg_4027_pp0_iter24_reg[0] <= 1'b0;
    px_sum_5_reg_4034[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter10_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter11_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter12_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter13_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter14_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter15_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter16_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter17_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter18_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter19_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter20_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter21_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter22_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter23_reg[0] <= 1'b0;
    px_sum_5_reg_4034_pp0_iter24_reg[0] <= 1'b0;
    zext_ln65_1_reg_4061[0] <= 1'b0;
    zext_ln65_1_reg_4061[31:28] <= 4'b0000;
    zext_ln65_3_reg_4084[0] <= 1'b0;
    zext_ln65_3_reg_4084[31:28] <= 4'b0000;
    zext_ln65_5_reg_4107[0] <= 1'b0;
    zext_ln65_5_reg_4107[31:28] <= 4'b0000;
    or_ln1_reg_4135[1] <= 1'b0;
    or_ln115_1_reg_4160[1] <= 1'b0;
    or_ln115_2_reg_4185[1] <= 1'b0;
end

endmodule //bilateral_filter_accel_xFbilateralFilterKernel_16_3840_2160_3_16_1_2_2_16_3_Pipeline_Col_Loop
