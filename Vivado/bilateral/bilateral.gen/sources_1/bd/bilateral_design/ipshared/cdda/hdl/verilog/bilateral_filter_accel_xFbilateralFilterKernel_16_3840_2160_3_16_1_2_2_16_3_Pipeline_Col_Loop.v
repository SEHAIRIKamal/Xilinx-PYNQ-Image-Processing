// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bilateral_filter_accel_xFbilateralFilterKernel_16_3840_2160_3_16_1_2_2_16_3_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        imgwidth,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        row_ind_9,
        row_ind_8,
        row_ind_7,
        sub_i274_i_i_cast,
        spec_select1264,
        spec_select1268,
        spec_select1272,
        exp_lut_sigma_color_address0,
        exp_lut_sigma_color_ce0,
        exp_lut_sigma_color_q0,
        exp_lut_sigma_color_address1,
        exp_lut_sigma_color_ce1,
        exp_lut_sigma_color_q1,
        exp_lut_sigma_color_1_address0,
        exp_lut_sigma_color_1_ce0,
        exp_lut_sigma_color_1_q0,
        cmp_i_i65_i_i,
        grp_fu_606_p_din0,
        grp_fu_606_p_dout0,
        grp_fu_606_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] imgInput_data_dout;
input  [2:0] imgInput_data_num_data_valid;
input  [1:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [23:0] imgOutput_data_din;
input  [1:0] imgOutput_data_num_data_valid;
input  [1:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [15:0] imgwidth;
output  [11:0] buf_2_address0;
output   buf_2_ce0;
input  [23:0] buf_2_q0;
output  [11:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [23:0] buf_2_d1;
output  [11:0] buf_r_address0;
output   buf_r_ce0;
input  [23:0] buf_r_q0;
output  [11:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [23:0] buf_r_d1;
output  [11:0] buf_1_address0;
output   buf_1_ce0;
input  [23:0] buf_1_q0;
output  [11:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [23:0] buf_1_d1;
input  [1:0] row_ind_9;
input  [1:0] row_ind_8;
input  [1:0] row_ind_7;
input  [1:0] sub_i274_i_i_cast;
input  [0:0] spec_select1264;
input  [0:0] spec_select1268;
input  [0:0] spec_select1272;
output  [9:0] exp_lut_sigma_color_address0;
output   exp_lut_sigma_color_ce0;
input  [15:0] exp_lut_sigma_color_q0;
output  [9:0] exp_lut_sigma_color_address1;
output   exp_lut_sigma_color_ce1;
input  [15:0] exp_lut_sigma_color_q1;
output  [9:0] exp_lut_sigma_color_1_address0;
output   exp_lut_sigma_color_1_ce0;
input  [15:0] exp_lut_sigma_color_1_q0;
input  [0:0] cmp_i_i65_i_i;
output  [31:0] grp_fu_606_p_din0;
input  [63:0] grp_fu_606_p_dout0;
output   grp_fu_606_p_ce;

reg ap_idle;
reg imgInput_data_read;
reg imgOutput_data_write;
reg buf_2_ce0;
reg buf_2_ce1;
reg buf_2_we1;
reg buf_r_ce0;
reg buf_r_ce1;
reg buf_r_we1;
reg buf_1_ce0;
reg buf_1_ce1;
reg buf_1_we1;
reg exp_lut_sigma_color_ce0;
reg exp_lut_sigma_color_ce1;
reg exp_lut_sigma_color_1_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] and_ln191_reg_3632;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
reg   [0:0] icmp_ln336_reg_3651;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter34_reg;
reg    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln185_fu_488_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [9:0] exp_lut_sigma_color_1_r_address0;
reg    exp_lut_sigma_color_1_r_ce0;
wire   [14:0] exp_lut_sigma_color_1_r_q0;
wire    imgInput_data_blk_n;
wire    ap_block_pp0_stage0;
wire    imgOutput_data_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [1:0] row_ind_9_read_reg_3608;
reg   [12:0] col_reg_3614;
reg   [12:0] col_reg_3614_pp0_iter1_reg;
wire   [0:0] icmp_ln191_fu_500_p2;
reg   [0:0] icmp_ln191_reg_3625;
reg   [0:0] icmp_ln191_reg_3625_pp0_iter1_reg;
reg   [0:0] icmp_ln191_reg_3625_pp0_iter2_reg;
wire   [0:0] and_ln191_fu_506_p2;
wire   [0:0] icmp_ln336_fu_529_p2;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter3_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter4_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter5_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter6_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter7_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter8_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter9_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter10_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter11_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter12_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter13_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter14_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter15_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter16_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter17_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter18_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter19_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter20_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter21_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter22_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter23_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter24_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter25_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter26_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter27_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter28_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter29_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter30_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter31_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter32_reg;
reg   [0:0] icmp_ln336_reg_3651_pp0_iter33_reg;
reg   [23:0] p_load132_reg_3656;
reg   [23:0] p_load132_reg_3656_pp0_iter4_reg;
reg   [23:0] p_load132_reg_3656_pp0_iter5_reg;
reg   [23:0] p_load132_reg_3656_pp0_iter6_reg;
reg   [23:0] p_load132_reg_3656_pp0_iter7_reg;
reg   [23:0] p_load132_reg_3656_pp0_iter8_reg;
wire   [23:0] select_ln328_1_fu_624_p3;
reg   [23:0] select_ln328_1_reg_3661;
wire   [7:0] trunc_ln92_fu_638_p1;
reg   [7:0] trunc_ln92_reg_3666;
reg   [7:0] trunc_ln92_reg_3666_pp0_iter4_reg;
reg   [7:0] trunc_ln92_reg_3666_pp0_iter5_reg;
wire   [8:0] zext_ln92_1_fu_650_p1;
reg   [8:0] zext_ln92_1_reg_3671;
wire   [7:0] tmp_3_fu_686_p4;
reg   [7:0] tmp_3_reg_3677;
reg   [7:0] tmp_3_reg_3677_pp0_iter4_reg;
reg   [7:0] tmp_3_reg_3677_pp0_iter5_reg;
wire   [8:0] zext_ln93_1_fu_710_p1;
reg   [8:0] zext_ln93_1_reg_3682;
wire   [7:0] tmp_9_fu_746_p4;
reg   [7:0] tmp_9_reg_3688;
reg   [7:0] tmp_9_reg_3688_pp0_iter4_reg;
reg   [7:0] tmp_9_reg_3688_pp0_iter5_reg;
wire   [8:0] zext_ln94_1_fu_770_p1;
reg   [8:0] zext_ln94_1_reg_3693;
wire   [9:0] add_ln68_fu_826_p2;
reg   [9:0] add_ln68_reg_3699;
reg   [0:0] tmp_12_reg_3705;
wire   [7:0] trunc_ln92_3_fu_840_p1;
reg   [7:0] trunc_ln92_3_reg_3710;
reg   [7:0] trunc_ln92_3_reg_3710_pp0_iter4_reg;
reg   [7:0] trunc_ln92_3_reg_3710_pp0_iter5_reg;
reg   [7:0] tmp_20_reg_3716;
reg   [7:0] tmp_20_reg_3716_pp0_iter4_reg;
reg   [7:0] tmp_20_reg_3716_pp0_iter5_reg;
reg   [7:0] tmp_22_reg_3722;
reg   [7:0] tmp_22_reg_3722_pp0_iter4_reg;
reg   [7:0] tmp_22_reg_3722_pp0_iter5_reg;
wire   [7:0] trunc_ln92_4_fu_864_p1;
reg   [7:0] trunc_ln92_4_reg_3728;
reg   [7:0] trunc_ln92_4_reg_3728_pp0_iter4_reg;
reg   [7:0] trunc_ln92_4_reg_3728_pp0_iter5_reg;
wire   [7:0] tmp_26_fu_904_p4;
reg   [7:0] tmp_26_reg_3733;
reg   [7:0] tmp_26_reg_3733_pp0_iter4_reg;
reg   [7:0] tmp_26_reg_3733_pp0_iter5_reg;
wire   [7:0] tmp_30_fu_950_p4;
reg   [7:0] tmp_30_reg_3738;
reg   [7:0] tmp_30_reg_3738_pp0_iter4_reg;
reg   [7:0] tmp_30_reg_3738_pp0_iter5_reg;
wire   [9:0] add_ln68_3_fu_1016_p2;
reg   [9:0] add_ln68_3_reg_3743;
reg   [0:0] tmp_36_reg_3749;
reg   [7:0] tmp_38_reg_3754;
reg   [7:0] tmp_38_reg_3754_pp0_iter4_reg;
reg   [7:0] tmp_38_reg_3754_pp0_iter5_reg;
reg   [7:0] tmp_38_reg_3754_pp0_iter6_reg;
reg   [7:0] tmp_38_reg_3754_pp0_iter7_reg;
reg   [7:0] tmp_38_reg_3754_pp0_iter8_reg;
reg   [7:0] tmp_45_reg_3759;
reg   [7:0] tmp_45_reg_3759_pp0_iter4_reg;
reg   [7:0] tmp_45_reg_3759_pp0_iter5_reg;
reg   [7:0] tmp_45_reg_3759_pp0_iter6_reg;
reg   [7:0] tmp_45_reg_3759_pp0_iter7_reg;
reg   [7:0] tmp_45_reg_3759_pp0_iter8_reg;
reg   [23:0] p_load133_reg_3764;
wire   [7:0] trunc_ln92_2_fu_1087_p1;
reg   [7:0] trunc_ln92_2_reg_3774;
reg   [7:0] trunc_ln92_2_reg_3774_pp0_iter5_reg;
reg   [7:0] trunc_ln92_2_reg_3774_pp0_iter6_reg;
wire   [7:0] tmp_14_fu_1126_p4;
reg   [7:0] tmp_14_reg_3779;
reg   [7:0] tmp_14_reg_3779_pp0_iter5_reg;
reg   [7:0] tmp_14_reg_3779_pp0_iter6_reg;
wire   [7:0] tmp_16_fu_1171_p4;
reg   [7:0] tmp_16_reg_3784;
reg   [7:0] tmp_16_reg_3784_pp0_iter5_reg;
reg   [7:0] tmp_16_reg_3784_pp0_iter6_reg;
wire   [9:0] add_ln68_1_fu_1236_p2;
reg   [9:0] add_ln68_1_reg_3789;
reg   [0:0] tmp_18_reg_3795;
wire   [9:0] add_ln68_2_fu_1372_p2;
reg   [9:0] add_ln68_2_reg_3800;
reg   [0:0] tmp_24_reg_3806;
reg   [15:0] color_weights_reg_3816;
reg   [15:0] color_weights_3_reg_3832;
reg   [15:0] color_weights_3_reg_3832_pp0_iter6_reg;
wire   [23:0] zext_ln107_fu_1444_p1;
reg   [15:0] color_weights_1_reg_3850;
reg   [14:0] color_weights_2_reg_3855;
wire   [22:0] zext_ln107_5_fu_1450_p1;
wire   [16:0] empty_43_fu_1464_p2;
reg   [16:0] empty_43_reg_3872;
wire   [23:0] mul_ln107_2_fu_1476_p2;
reg   [23:0] mul_ln107_2_reg_3877;
reg   [23:0] mul_ln107_2_reg_3877_pp0_iter7_reg;
wire   [23:0] mul_ln107_6_fu_1491_p2;
reg   [23:0] mul_ln107_6_reg_3892;
reg   [23:0] mul_ln107_6_reg_3892_pp0_iter7_reg;
wire   [23:0] mul_ln107_10_fu_1506_p2;
reg   [23:0] mul_ln107_10_reg_3907;
reg   [23:0] mul_ln107_10_reg_3907_pp0_iter7_reg;
wire   [23:0] mul_ln107_fu_1518_p2;
reg   [23:0] mul_ln107_reg_3912;
wire   [18:0] weight_sum_fu_1565_p2;
reg   [18:0] weight_sum_reg_3917;
wire   [31:0] zext_ln64_fu_1571_p1;
reg   [31:0] zext_ln64_reg_3922;
wire   [31:0] sub_ln114_fu_1593_p2;
reg   [31:0] sub_ln114_reg_3928;
wire   [4:0] trunc_ln114_fu_1599_p1;
reg   [4:0] trunc_ln114_reg_3935;
wire   [7:0] trunc_ln114_1_fu_1603_p1;
reg   [7:0] trunc_ln114_1_reg_3940;
reg   [7:0] trunc_ln114_1_reg_3940_pp0_iter8_reg;
reg   [7:0] trunc_ln114_1_reg_3940_pp0_iter9_reg;
wire   [23:0] mul_ln107_4_fu_1610_p2;
reg   [23:0] mul_ln107_4_reg_3945;
wire   [23:0] mul_ln107_8_fu_1619_p2;
reg   [23:0] mul_ln107_8_reg_3950;
wire   [31:0] add_ln114_fu_1631_p2;
reg   [31:0] add_ln114_reg_3965;
wire   [0:0] icmp_ln114_fu_1646_p2;
reg   [0:0] icmp_ln114_reg_3971;
wire   [0:0] icmp_ln114_1_fu_1672_p2;
reg   [0:0] icmp_ln114_1_reg_3976;
wire   [0:0] bit_select_i_i116_i_i_i_fu_1678_p3;
reg   [0:0] bit_select_i_i116_i_i_i_reg_3981;
wire   [63:0] lshr_ln114_fu_1697_p2;
reg   [63:0] lshr_ln114_reg_3986;
wire   [63:0] shl_ln114_fu_1712_p2;
reg   [63:0] shl_ln114_reg_3991;
wire   [26:0] px_sum_1_fu_1759_p2;
reg   [26:0] px_sum_1_reg_4016;
reg   [26:0] px_sum_1_reg_4016_pp0_iter10_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter11_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter12_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter13_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter14_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter15_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter16_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter17_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter18_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter19_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter20_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter21_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter22_reg;
reg   [26:0] px_sum_1_reg_4016_pp0_iter23_reg;
reg   [62:0] lshr_ln114_1_reg_4023;
reg   [0:0] tmp_43_reg_4028;
wire   [26:0] px_sum_3_fu_1871_p2;
reg   [26:0] px_sum_3_reg_4033;
reg   [26:0] px_sum_3_reg_4033_pp0_iter10_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter11_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter12_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter13_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter14_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter15_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter16_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter17_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter18_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter19_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter20_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter21_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter22_reg;
reg   [26:0] px_sum_3_reg_4033_pp0_iter23_reg;
wire   [26:0] px_sum_5_fu_1908_p2;
reg   [26:0] px_sum_5_reg_4040;
reg   [26:0] px_sum_5_reg_4040_pp0_iter10_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter11_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter12_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter13_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter14_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter15_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter16_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter17_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter18_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter19_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter20_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter21_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter22_reg;
reg   [26:0] px_sum_5_reg_4040_pp0_iter23_reg;
wire   [31:0] LD_fu_1955_p1;
reg   [31:0] LD_reg_4047;
wire   [31:0] zext_ln65_1_fu_1963_p1;
reg   [31:0] zext_ln65_1_reg_4057;
wire   [31:0] sub_ln115_fu_1984_p2;
reg   [31:0] sub_ln115_reg_4063;
wire   [4:0] sub_ln115_9_fu_1994_p2;
reg   [4:0] sub_ln115_9_reg_4070;
wire   [7:0] trunc_ln115_1_fu_2000_p1;
reg   [7:0] trunc_ln115_1_reg_4075;
reg   [7:0] trunc_ln115_1_reg_4075_pp0_iter24_reg;
reg   [7:0] trunc_ln115_1_reg_4075_pp0_iter25_reg;
wire   [31:0] zext_ln65_3_fu_2004_p1;
reg   [31:0] zext_ln65_3_reg_4080;
wire   [31:0] sub_ln115_2_fu_2025_p2;
reg   [31:0] sub_ln115_2_reg_4086;
wire   [4:0] sub_ln115_10_fu_2035_p2;
reg   [4:0] sub_ln115_10_reg_4093;
wire   [7:0] trunc_ln115_3_fu_2041_p1;
reg   [7:0] trunc_ln115_3_reg_4098;
reg   [7:0] trunc_ln115_3_reg_4098_pp0_iter24_reg;
reg   [7:0] trunc_ln115_3_reg_4098_pp0_iter25_reg;
wire   [31:0] zext_ln65_5_fu_2045_p1;
reg   [31:0] zext_ln65_5_reg_4103;
wire   [31:0] sub_ln115_4_fu_2066_p2;
reg   [31:0] sub_ln115_4_reg_4109;
wire   [4:0] sub_ln115_11_fu_2076_p2;
reg   [4:0] sub_ln115_11_reg_4116;
wire   [7:0] trunc_ln115_5_fu_2082_p1;
reg   [7:0] trunc_ln115_5_reg_4121;
reg   [7:0] trunc_ln115_5_reg_4121_pp0_iter24_reg;
reg   [7:0] trunc_ln115_5_reg_4121_pp0_iter25_reg;
wire   [0:0] icmp_ln115_fu_2086_p2;
reg   [0:0] icmp_ln115_reg_4126;
reg   [0:0] icmp_ln115_reg_4126_pp0_iter25_reg;
wire   [1:0] or_ln1_fu_2171_p3;
reg   [1:0] or_ln1_reg_4131;
wire   [0:0] icmp_ln115_3_fu_2182_p2;
reg   [0:0] icmp_ln115_3_reg_4136;
wire   [63:0] lshr_ln115_fu_2197_p2;
reg   [63:0] lshr_ln115_reg_4141;
wire   [63:0] shl_ln115_fu_2212_p2;
reg   [63:0] shl_ln115_reg_4146;
wire   [0:0] icmp_ln115_4_fu_2218_p2;
reg   [0:0] icmp_ln115_4_reg_4151;
reg   [0:0] icmp_ln115_4_reg_4151_pp0_iter25_reg;
wire   [1:0] or_ln115_1_fu_2303_p3;
reg   [1:0] or_ln115_1_reg_4156;
wire   [0:0] icmp_ln115_7_fu_2314_p2;
reg   [0:0] icmp_ln115_7_reg_4161;
wire   [63:0] lshr_ln115_2_fu_2329_p2;
reg   [63:0] lshr_ln115_2_reg_4166;
wire   [63:0] shl_ln115_1_fu_2344_p2;
reg   [63:0] shl_ln115_1_reg_4171;
wire   [0:0] icmp_ln115_8_fu_2350_p2;
reg   [0:0] icmp_ln115_8_reg_4176;
reg   [0:0] icmp_ln115_8_reg_4176_pp0_iter25_reg;
wire   [1:0] or_ln115_2_fu_2435_p3;
reg   [1:0] or_ln115_2_reg_4181;
wire   [0:0] icmp_ln115_11_fu_2446_p2;
reg   [0:0] icmp_ln115_11_reg_4186;
wire   [63:0] lshr_ln115_4_fu_2461_p2;
reg   [63:0] lshr_ln115_4_reg_4191;
wire   [63:0] shl_ln115_2_fu_2476_p2;
reg   [63:0] shl_ln115_2_reg_4196;
reg   [62:0] lshr_ln115_1_reg_4201;
reg   [0:0] tmp_50_reg_4206;
reg   [62:0] lshr_ln115_3_reg_4211;
reg   [0:0] tmp_57_reg_4216;
reg   [62:0] lshr_ln115_5_reg_4221;
reg   [0:0] tmp_64_reg_4226;
wire   [31:0] grp_fu_442_p2;
reg   [31:0] val_reg_4231;
wire   [31:0] select_ln115_2_fu_2627_p3;
reg   [31:0] select_ln115_2_reg_4238;
wire   [31:0] select_ln115_5_fu_2683_p3;
reg   [31:0] select_ln115_5_reg_4243;
wire   [31:0] select_ln115_8_fu_2739_p3;
reg   [31:0] select_ln115_8_reg_4248;
wire   [31:0] grp_fu_430_p2;
reg   [31:0] mul_val_reg_4253;
reg   [31:0] mul_val_reg_4253_pp0_iter31_reg;
reg   [31:0] mul_val_reg_4253_pp0_iter32_reg;
reg   [31:0] mul_val_reg_4253_pp0_iter33_reg;
reg   [31:0] mul_val_reg_4253_pp0_iter34_reg;
wire   [31:0] grp_fu_434_p2;
reg   [31:0] mul_val_1_reg_4259;
reg   [31:0] mul_val_1_reg_4259_pp0_iter31_reg;
reg   [31:0] mul_val_1_reg_4259_pp0_iter32_reg;
reg   [31:0] mul_val_1_reg_4259_pp0_iter33_reg;
reg   [31:0] mul_val_1_reg_4259_pp0_iter34_reg;
wire   [31:0] grp_fu_438_p2;
reg   [31:0] mul_val_2_reg_4265;
reg   [31:0] mul_val_2_reg_4265_pp0_iter31_reg;
reg   [31:0] mul_val_2_reg_4265_pp0_iter32_reg;
reg   [31:0] mul_val_2_reg_4265_pp0_iter33_reg;
reg   [31:0] mul_val_2_reg_4265_pp0_iter34_reg;
wire   [62:0] trunc_ln116_fu_2750_p1;
reg   [62:0] trunc_ln116_reg_4271;
reg   [0:0] tmp_51_reg_4276;
reg   [10:0] tmp_52_reg_4281;
wire   [51:0] trunc_ln116_1_fu_2772_p1;
reg   [51:0] trunc_ln116_1_reg_4286;
wire   [62:0] trunc_ln116_6_fu_2780_p1;
reg   [62:0] trunc_ln116_6_reg_4291;
reg   [0:0] tmp_58_reg_4296;
reg   [10:0] tmp_59_reg_4301;
wire   [51:0] trunc_ln116_7_fu_2802_p1;
reg   [51:0] trunc_ln116_7_reg_4306;
wire   [62:0] trunc_ln116_12_fu_2810_p1;
reg   [62:0] trunc_ln116_12_reg_4311;
reg   [0:0] tmp_65_reg_4316;
reg   [10:0] tmp_66_reg_4321;
wire   [51:0] trunc_ln116_13_fu_2832_p1;
reg   [51:0] trunc_ln116_13_reg_4326;
wire   [53:0] select_ln116_fu_2856_p3;
reg   [53:0] select_ln116_reg_4331;
wire   [0:0] icmp_ln116_fu_2863_p2;
reg   [0:0] icmp_ln116_reg_4336;
wire   [0:0] icmp_ln116_1_fu_2874_p2;
reg   [0:0] icmp_ln116_1_reg_4343;
wire  signed [11:0] select_ln116_1_fu_2892_p3;
reg  signed [11:0] select_ln116_1_reg_4348;
wire   [0:0] icmp_ln116_2_fu_2900_p2;
reg   [0:0] icmp_ln116_2_reg_4354;
wire   [23:0] trunc_ln116_2_fu_2906_p1;
reg   [23:0] trunc_ln116_2_reg_4360;
wire   [0:0] icmp_ln116_4_fu_2920_p2;
reg   [0:0] icmp_ln116_4_reg_4366;
wire   [53:0] select_ln116_4_fu_2946_p3;
reg   [53:0] select_ln116_4_reg_4371;
wire   [0:0] icmp_ln116_5_fu_2953_p2;
reg   [0:0] icmp_ln116_5_reg_4376;
wire   [0:0] icmp_ln116_6_fu_2964_p2;
reg   [0:0] icmp_ln116_6_reg_4383;
wire  signed [11:0] select_ln116_5_fu_2982_p3;
reg  signed [11:0] select_ln116_5_reg_4388;
wire   [0:0] icmp_ln116_7_fu_2990_p2;
reg   [0:0] icmp_ln116_7_reg_4394;
wire   [23:0] trunc_ln116_8_fu_2996_p1;
reg   [23:0] trunc_ln116_8_reg_4400;
wire   [0:0] icmp_ln116_9_fu_3010_p2;
reg   [0:0] icmp_ln116_9_reg_4406;
wire   [53:0] select_ln116_8_fu_3036_p3;
reg   [53:0] select_ln116_8_reg_4411;
wire   [0:0] icmp_ln116_10_fu_3043_p2;
reg   [0:0] icmp_ln116_10_reg_4416;
wire   [0:0] icmp_ln116_11_fu_3054_p2;
reg   [0:0] icmp_ln116_11_reg_4423;
wire  signed [11:0] select_ln116_9_fu_3072_p3;
reg  signed [11:0] select_ln116_9_reg_4428;
wire   [0:0] icmp_ln116_12_fu_3080_p2;
reg   [0:0] icmp_ln116_12_reg_4434;
wire   [23:0] trunc_ln116_14_fu_3086_p1;
reg   [23:0] trunc_ln116_14_reg_4440;
wire   [0:0] icmp_ln116_14_fu_3100_p2;
reg   [0:0] icmp_ln116_14_reg_4446;
wire   [0:0] icmp_ln116_3_fu_3109_p2;
reg   [0:0] icmp_ln116_3_reg_4451;
wire   [53:0] ashr_ln116_fu_3118_p2;
reg   [53:0] ashr_ln116_reg_4456;
wire   [23:0] select_ln116_13_fu_3156_p3;
reg   [23:0] select_ln116_13_reg_4461;
wire   [0:0] and_ln116_1_fu_3173_p2;
reg   [0:0] and_ln116_1_reg_4466;
wire   [0:0] icmp_ln116_8_fu_3181_p2;
reg   [0:0] icmp_ln116_8_reg_4471;
wire   [53:0] ashr_ln116_1_fu_3190_p2;
reg   [53:0] ashr_ln116_1_reg_4476;
wire   [23:0] select_ln116_16_fu_3228_p3;
reg   [23:0] select_ln116_16_reg_4481;
wire   [0:0] and_ln116_3_fu_3245_p2;
reg   [0:0] and_ln116_3_reg_4486;
wire   [0:0] icmp_ln116_13_fu_3253_p2;
reg   [0:0] icmp_ln116_13_reg_4491;
wire   [53:0] ashr_ln116_2_fu_3262_p2;
reg   [53:0] ashr_ln116_2_reg_4496;
wire   [23:0] select_ln116_19_fu_3300_p3;
reg   [23:0] select_ln116_19_reg_4501;
wire   [0:0] and_ln116_5_fu_3317_p2;
reg   [0:0] and_ln116_5_reg_4506;
wire   [63:0] zext_ln192_fu_517_p1;
wire   [63:0] conv_i190_i_i_fu_523_p1;
wire   [63:0] zext_ln106_fu_1082_p1;
wire   [63:0] zext_ln106_3_fu_1397_p1;
wire   [63:0] zext_ln106_1_fu_1423_p1;
wire   [63:0] zext_ln106_2_fu_1439_p1;
reg   [12:0] col_4_fu_214;
wire   [12:0] col_5_fu_494_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col;
reg   [23:0] empty_fu_218;
wire   [23:0] select_ln328_fu_617_p3;
reg   [23:0] empty_40_fu_222;
reg   [23:0] empty_41_fu_226;
wire   [23:0] select_ln328_2_fu_631_p3;
reg   [23:0] empty_42_fu_230;
wire   [23:0] select_ln349_fu_1402_p3;
wire    ap_block_pp0_stage0_01001;
wire   [31:0] grp_fu_442_p1;
wire   [15:0] zext_ln185_fu_484_p1;
wire   [1:0] trunc_ln_fu_543_p5;
wire   [23:0] tmp_5_fu_551_p5;
wire   [23:0] tmp_6_fu_563_p5;
wire   [23:0] tmp_s_fu_581_p5;
wire   [23:0] tmp_2_fu_599_p5;
wire   [23:0] p_0_0_06691279_fu_574_p3;
wire   [23:0] p_0_0_0669_11280_fu_592_p3;
wire   [23:0] p_0_0_0669_21281_fu_610_p3;
wire   [7:0] trunc_ln92_1_fu_642_p1;
wire   [8:0] zext_ln92_fu_646_p1;
wire   [8:0] sub_ln61_12_fu_654_p2;
wire   [0:0] tmp_7_fu_666_p3;
wire   [8:0] sub_ln61_fu_660_p2;
wire   [8:0] select_ln61_fu_674_p3;
wire   [7:0] tmp_4_fu_696_p4;
wire   [8:0] zext_ln93_fu_706_p1;
wire   [8:0] sub_ln61_13_fu_714_p2;
wire   [0:0] tmp_8_fu_726_p3;
wire   [8:0] sub_ln61_1_fu_720_p2;
wire   [8:0] select_ln61_1_fu_734_p3;
wire   [7:0] tmp_10_fu_756_p4;
wire   [8:0] zext_ln94_fu_766_p1;
wire   [8:0] sub_ln61_14_fu_774_p2;
wire   [0:0] tmp_11_fu_786_p3;
wire   [8:0] sub_ln61_2_fu_780_p2;
wire  signed [8:0] select_ln61_2_fu_794_p3;
wire  signed [9:0] sext_ln94_fu_742_p1;
wire  signed [9:0] sext_ln93_fu_682_p1;
wire  signed [9:0] add_ln93_fu_806_p2;
wire  signed [10:0] sext_ln92_fu_812_p1;
wire  signed [10:0] sext_ln93_1_fu_802_p1;
wire  signed [9:0] sext_ln92_4_fu_816_p1;
wire   [10:0] diffpx_fu_820_p2;
wire   [8:0] zext_ln92_5_fu_868_p1;
wire   [8:0] sub_ln61_21_fu_872_p2;
wire   [0:0] tmp_25_fu_884_p3;
wire   [8:0] sub_ln61_9_fu_878_p2;
wire   [8:0] select_ln61_9_fu_892_p3;
wire   [8:0] zext_ln93_4_fu_914_p1;
wire   [8:0] sub_ln61_22_fu_918_p2;
wire   [0:0] tmp_27_fu_930_p3;
wire   [8:0] sub_ln61_10_fu_924_p2;
wire   [8:0] select_ln61_10_fu_938_p3;
wire   [8:0] zext_ln94_4_fu_960_p1;
wire   [8:0] sub_ln61_23_fu_964_p2;
wire   [0:0] tmp_34_fu_976_p3;
wire   [8:0] sub_ln61_11_fu_970_p2;
wire  signed [8:0] select_ln61_11_fu_984_p3;
wire  signed [9:0] sext_ln94_3_fu_946_p1;
wire  signed [9:0] sext_ln93_6_fu_900_p1;
wire  signed [9:0] add_ln93_3_fu_996_p2;
wire  signed [10:0] sext_ln92_3_fu_1002_p1;
wire  signed [10:0] sext_ln93_7_fu_992_p1;
wire  signed [9:0] sext_ln92_7_fu_1006_p1;
wire   [10:0] diffpx_9_fu_1010_p2;
wire   [9:0] diffpx_1_fu_1071_p2;
wire   [9:0] diffpx_2_fu_1076_p3;
wire   [8:0] zext_ln92_2_fu_1091_p1;
wire   [8:0] sub_ln61_15_fu_1095_p2;
wire   [0:0] tmp_13_fu_1106_p3;
wire   [8:0] sub_ln61_3_fu_1100_p2;
wire   [8:0] select_ln61_3_fu_1114_p3;
wire   [8:0] zext_ln93_2_fu_1136_p1;
wire   [8:0] sub_ln61_16_fu_1140_p2;
wire   [0:0] tmp_15_fu_1151_p3;
wire   [8:0] sub_ln61_4_fu_1145_p2;
wire   [8:0] select_ln61_4_fu_1159_p3;
wire   [8:0] zext_ln94_2_fu_1181_p1;
wire   [8:0] sub_ln61_17_fu_1185_p2;
wire   [0:0] tmp_17_fu_1196_p3;
wire   [8:0] sub_ln61_5_fu_1190_p2;
wire  signed [8:0] select_ln61_5_fu_1204_p3;
wire  signed [9:0] sext_ln94_1_fu_1167_p1;
wire  signed [9:0] sext_ln93_2_fu_1122_p1;
wire  signed [9:0] add_ln93_1_fu_1216_p2;
wire  signed [10:0] sext_ln92_1_fu_1222_p1;
wire  signed [10:0] sext_ln93_3_fu_1212_p1;
wire  signed [9:0] sext_ln92_5_fu_1226_p1;
wire   [10:0] diffpx_3_fu_1230_p2;
wire   [8:0] zext_ln92_4_fu_1250_p1;
wire   [8:0] sub_ln61_18_fu_1253_p2;
wire   [0:0] tmp_19_fu_1264_p3;
wire   [8:0] sub_ln61_6_fu_1258_p2;
wire   [8:0] select_ln61_6_fu_1272_p3;
wire   [8:0] zext_ln93_3_fu_1284_p1;
wire   [8:0] sub_ln61_19_fu_1287_p2;
wire   [0:0] tmp_21_fu_1298_p3;
wire   [8:0] sub_ln61_7_fu_1292_p2;
wire   [8:0] select_ln61_7_fu_1306_p3;
wire   [8:0] zext_ln94_3_fu_1318_p1;
wire   [8:0] sub_ln61_20_fu_1321_p2;
wire   [0:0] tmp_23_fu_1332_p3;
wire   [8:0] sub_ln61_8_fu_1326_p2;
wire  signed [8:0] select_ln61_8_fu_1340_p3;
wire  signed [9:0] sext_ln94_2_fu_1314_p1;
wire  signed [9:0] sext_ln93_4_fu_1280_p1;
wire  signed [9:0] add_ln93_2_fu_1352_p2;
wire  signed [10:0] sext_ln92_2_fu_1358_p1;
wire  signed [10:0] sext_ln93_5_fu_1348_p1;
wire  signed [9:0] sext_ln92_6_fu_1362_p1;
wire   [10:0] diffpx_6_fu_1366_p2;
wire   [9:0] diffpx_10_fu_1386_p2;
wire   [9:0] diffpx_11_fu_1391_p3;
wire   [9:0] diffpx_4_fu_1412_p2;
wire   [9:0] diffpx_5_fu_1417_p3;
wire   [9:0] diffpx_7_fu_1428_p2;
wire   [9:0] diffpx_8_fu_1433_p3;
wire   [16:0] color_weights_1_cast39_fu_1460_p1;
wire   [16:0] color_weights_cast40_fu_1457_p1;
wire   [15:0] mul_ln107_2_fu_1476_p0;
wire   [23:0] zext_ln107_7_fu_1470_p1;
wire   [7:0] mul_ln107_2_fu_1476_p1;
wire   [15:0] mul_ln107_6_fu_1491_p0;
wire   [7:0] mul_ln107_6_fu_1491_p1;
wire   [15:0] mul_ln107_10_fu_1506_p0;
wire   [7:0] mul_ln107_10_fu_1506_p1;
wire   [15:0] mul_ln107_fu_1518_p0;
wire   [23:0] zext_ln107_2_fu_1512_p1;
wire   [7:0] mul_ln107_fu_1518_p1;
wire   [17:0] p_cast_fu_1527_p1;
wire   [17:0] color_weights_2_cast41_fu_1524_p1;
wire   [17:0] tmp336_fu_1530_p2;
wire   [16:0] shl_ln1_fu_1544_p3;
wire   [17:0] zext_ln108_fu_1551_p1;
wire   [17:0] add_ln108_fu_1555_p2;
wire   [18:0] zext_ln108_1_fu_1561_p1;
wire   [18:0] tmp22_fu_1536_p3;
reg   [31:0] tmp_28_fu_1575_p4;
reg   [31:0] tmp_29_fu_1585_p3;
wire   [15:0] mul_ln107_4_fu_1610_p0;
wire   [7:0] mul_ln107_4_fu_1610_p1;
wire   [15:0] mul_ln107_8_fu_1619_p0;
wire   [7:0] mul_ln107_8_fu_1619_p1;
wire   [30:0] tmp_37_fu_1636_p4;
wire   [4:0] sub_ln114_3_fu_1652_p2;
wire   [31:0] zext_ln114_5_fu_1657_p1;
wire   [31:0] lshr_ln114_2_fu_1661_p2;
wire   [31:0] and_ln114_2_fu_1667_p2;
wire   [31:0] add_ln114_1_fu_1688_p2;
wire   [63:0] zext_ln114_fu_1685_p1;
wire   [63:0] zext_ln114_1_fu_1693_p1;
wire   [31:0] sub_ln114_1_fu_1703_p2;
wire   [63:0] zext_ln114_2_fu_1708_p1;
wire   [23:0] shl_ln107_fu_1730_p2;
wire   [24:0] grp_fu_3486_p3;
wire   [24:0] grp_fu_3495_p3;
wire   [25:0] tmp41_cast_fu_1742_p1;
wire   [25:0] tmp_cast_fu_1739_p1;
wire   [25:0] tmp35_fu_1745_p2;
wire   [26:0] tmp23_fu_1751_p3;
wire   [26:0] zext_ln92_3_fu_1735_p1;
wire   [0:0] tmp_41_fu_1769_p3;
wire   [0:0] xor_ln114_fu_1776_p2;
wire   [0:0] and_ln114_1_fu_1782_p2;
wire   [0:0] and_ln114_fu_1765_p2;
wire   [0:0] or_ln114_fu_1787_p2;
wire   [0:0] icmp_ln114_2_fu_1801_p2;
wire   [1:0] or_ln_fu_1793_p3;
wire   [63:0] select_ln114_fu_1806_p3;
wire   [63:0] zext_ln114_3_fu_1812_p1;
wire   [63:0] add_ln114_2_fu_1816_p2;
wire   [23:0] shl_ln107_1_fu_1840_p3;
wire   [24:0] grp_fu_3504_p3;
wire   [24:0] grp_fu_3513_p3;
wire   [25:0] tmp43_cast_fu_1854_p1;
wire   [25:0] tmp38_cast_fu_1851_p1;
wire   [25:0] tmp44_fu_1857_p2;
wire   [26:0] tmp39_fu_1863_p3;
wire   [26:0] zext_ln68_fu_1847_p1;
wire   [23:0] shl_ln107_2_fu_1877_p3;
wire   [24:0] grp_fu_3522_p3;
wire   [24:0] grp_fu_3531_p3;
wire   [25:0] tmp46_cast_fu_1891_p1;
wire   [25:0] tmp48_cast_fu_1888_p1;
wire   [25:0] tmp54_fu_1894_p2;
wire   [26:0] tmp47_fu_1900_p3;
wire   [26:0] zext_ln68_1_fu_1884_p1;
wire   [7:0] sub_ln114_2_fu_1924_p2;
wire   [7:0] select_ln114_1_fu_1917_p3;
wire   [7:0] add_ln114_3_fu_1929_p2;
wire   [63:0] zext_ln114_4_fu_1914_p1;
wire   [8:0] tmp_31_fu_1935_p3;
wire   [63:0] pi_assign_fu_1943_p5;
reg   [31:0] tmp_32_fu_1966_p4;
reg   [31:0] tmp_33_fu_1976_p3;
wire   [4:0] trunc_ln115_fu_1990_p1;
reg   [31:0] tmp_39_fu_2007_p4;
reg   [31:0] tmp_40_fu_2017_p3;
wire   [4:0] trunc_ln115_2_fu_2031_p1;
reg   [31:0] tmp_46_fu_2048_p4;
reg   [31:0] tmp_47_fu_2058_p3;
wire   [4:0] trunc_ln115_4_fu_2072_p1;
wire   [31:0] add_ln115_fu_2091_p2;
wire   [30:0] tmp_44_fu_2096_p4;
wire   [31:0] zext_ln115_15_fu_2112_p1;
wire   [31:0] lshr_ln115_6_fu_2115_p2;
wire   [31:0] and_ln115_6_fu_2121_p2;
wire   [0:0] icmp_ln115_1_fu_2106_p2;
wire   [0:0] icmp_ln115_2_fu_2126_p2;
wire   [0:0] tmp_48_fu_2138_p3;
wire   [0:0] bit_select_i_i_i_i_i_fu_2152_p3;
wire   [0:0] xor_ln115_fu_2146_p2;
wire   [0:0] and_ln115_1_fu_2159_p2;
wire   [0:0] and_ln115_fu_2132_p2;
wire   [0:0] or_ln115_3_fu_2165_p2;
wire   [31:0] add_ln115_1_fu_2188_p2;
wire   [63:0] zext_ln115_fu_2179_p1;
wire   [63:0] zext_ln115_1_fu_2193_p1;
wire   [31:0] sub_ln115_1_fu_2203_p2;
wire   [63:0] zext_ln115_2_fu_2208_p1;
wire   [31:0] add_ln115_4_fu_2223_p2;
wire   [30:0] tmp_55_fu_2228_p4;
wire   [31:0] zext_ln115_16_fu_2244_p1;
wire   [31:0] lshr_ln115_7_fu_2247_p2;
wire   [31:0] and_ln115_7_fu_2253_p2;
wire   [0:0] icmp_ln115_5_fu_2238_p2;
wire   [0:0] icmp_ln115_6_fu_2258_p2;
wire   [0:0] tmp_56_fu_2270_p3;
wire   [0:0] bit_select_i_i_i_i_i_1_fu_2284_p3;
wire   [0:0] xor_ln115_1_fu_2278_p2;
wire   [0:0] and_ln115_3_fu_2291_p2;
wire   [0:0] and_ln115_2_fu_2264_p2;
wire   [0:0] or_ln115_fu_2297_p2;
wire   [31:0] add_ln115_5_fu_2320_p2;
wire   [63:0] zext_ln115_4_fu_2311_p1;
wire   [63:0] zext_ln115_5_fu_2325_p1;
wire   [31:0] sub_ln115_3_fu_2335_p2;
wire   [63:0] zext_ln115_6_fu_2340_p1;
wire   [31:0] add_ln115_8_fu_2355_p2;
wire   [30:0] tmp_62_fu_2360_p4;
wire   [31:0] zext_ln115_17_fu_2376_p1;
wire   [31:0] lshr_ln115_8_fu_2379_p2;
wire   [31:0] and_ln115_8_fu_2385_p2;
wire   [0:0] icmp_ln115_9_fu_2370_p2;
wire   [0:0] icmp_ln115_10_fu_2390_p2;
wire   [0:0] tmp_63_fu_2402_p3;
wire   [0:0] bit_select_i_i_i_i_i_2_fu_2416_p3;
wire   [0:0] xor_ln115_2_fu_2410_p2;
wire   [0:0] and_ln115_5_fu_2423_p2;
wire   [0:0] and_ln115_4_fu_2396_p2;
wire   [0:0] or_ln115_4_fu_2429_p2;
wire   [31:0] add_ln115_9_fu_2452_p2;
wire   [63:0] zext_ln115_8_fu_2443_p1;
wire   [63:0] zext_ln115_9_fu_2457_p1;
wire   [31:0] sub_ln115_5_fu_2467_p2;
wire   [63:0] zext_ln115_10_fu_2472_p1;
wire   [63:0] select_ln115_fu_2482_p3;
wire   [63:0] zext_ln115_3_fu_2487_p1;
wire   [63:0] add_ln115_2_fu_2490_p2;
wire   [63:0] select_ln115_3_fu_2514_p3;
wire   [63:0] zext_ln115_7_fu_2519_p1;
wire   [63:0] add_ln115_6_fu_2522_p2;
wire   [63:0] select_ln115_6_fu_2546_p3;
wire   [63:0] zext_ln115_11_fu_2551_p1;
wire   [63:0] add_ln115_10_fu_2554_p2;
wire   [7:0] sub_ln115_6_fu_2588_p2;
wire   [7:0] select_ln115_1_fu_2581_p3;
wire   [7:0] add_ln115_3_fu_2593_p2;
wire   [63:0] zext_ln115_12_fu_2578_p1;
wire   [8:0] tmp_35_fu_2599_p3;
wire   [63:0] pi_assign_1_fu_2607_p5;
wire   [31:0] LD_1_fu_2619_p1;
wire   [31:0] bitcast_ln766_1_fu_2623_p1;
wire   [7:0] sub_ln115_7_fu_2644_p2;
wire   [7:0] select_ln115_4_fu_2637_p3;
wire   [7:0] add_ln115_7_fu_2649_p2;
wire   [63:0] zext_ln115_13_fu_2634_p1;
wire   [8:0] tmp_42_fu_2655_p3;
wire   [63:0] pi_assign_2_fu_2663_p5;
wire   [31:0] LD_3_fu_2675_p1;
wire   [31:0] bitcast_ln766_2_fu_2679_p1;
wire   [7:0] sub_ln115_8_fu_2700_p2;
wire   [7:0] select_ln115_7_fu_2693_p3;
wire   [7:0] add_ln115_11_fu_2705_p2;
wire   [63:0] zext_ln115_14_fu_2690_p1;
wire   [8:0] tmp_49_fu_2711_p3;
wire   [63:0] pi_assign_3_fu_2719_p5;
wire   [31:0] LD_5_fu_2731_p1;
wire   [31:0] bitcast_ln766_3_fu_2735_p1;
wire   [63:0] bitcast_ln724_1_fu_2746_p1;
wire   [63:0] grp_fu_450_p1;
wire   [63:0] bitcast_ln724_2_fu_2776_p1;
wire   [63:0] grp_fu_453_p1;
wire   [63:0] bitcast_ln724_3_fu_2806_p1;
wire   [52:0] zext_ln116_1_cast_fu_2839_p3;
wire   [53:0] zext_ln116_1_fu_2846_p1;
wire   [53:0] sub_ln116_fu_2850_p2;
wire   [11:0] zext_ln116_fu_2836_p1;
wire   [11:0] sub_ln116_1_fu_2868_p2;
wire   [11:0] add_ln116_fu_2880_p2;
wire   [11:0] sub_ln116_2_fu_2886_p2;
wire   [6:0] tmp_54_fu_2910_p4;
wire   [52:0] zext_ln116_5_cast_fu_2929_p3;
wire   [53:0] zext_ln116_5_fu_2936_p1;
wire   [53:0] sub_ln116_3_fu_2940_p2;
wire   [11:0] zext_ln116_4_fu_2926_p1;
wire   [11:0] sub_ln116_4_fu_2958_p2;
wire   [11:0] add_ln116_2_fu_2970_p2;
wire   [11:0] sub_ln116_5_fu_2976_p2;
wire   [6:0] tmp_61_fu_3000_p4;
wire   [52:0] zext_ln116_9_cast_fu_3019_p3;
wire   [53:0] zext_ln116_9_fu_3026_p1;
wire   [53:0] sub_ln116_6_fu_3030_p2;
wire   [11:0] zext_ln116_8_fu_3016_p1;
wire   [11:0] sub_ln116_7_fu_3048_p2;
wire   [11:0] add_ln116_4_fu_3060_p2;
wire   [11:0] sub_ln116_8_fu_3066_p2;
wire   [6:0] tmp_68_fu_3090_p4;
wire  signed [31:0] sext_ln116_fu_3106_p1;
wire   [53:0] zext_ln116_2_fu_3114_p1;
wire   [23:0] sext_ln116cast_fu_3123_p1;
wire   [23:0] shl_ln116_fu_3127_p2;
wire   [23:0] select_ln116_3_fu_3132_p3;
wire   [0:0] xor_ln116_fu_3146_p2;
wire   [0:0] and_ln116_fu_3151_p2;
wire   [23:0] select_ln116_12_fu_3139_p3;
wire   [0:0] or_ln116_fu_3163_p2;
wire   [0:0] xor_ln116_1_fu_3167_p2;
wire  signed [31:0] sext_ln116_1_fu_3178_p1;
wire   [53:0] zext_ln116_6_fu_3186_p1;
wire   [23:0] sext_ln116_1cast_fu_3195_p1;
wire   [23:0] shl_ln116_1_fu_3199_p2;
wire   [23:0] select_ln116_7_fu_3204_p3;
wire   [0:0] xor_ln116_2_fu_3218_p2;
wire   [0:0] and_ln116_2_fu_3223_p2;
wire   [23:0] select_ln116_15_fu_3211_p3;
wire   [0:0] or_ln116_1_fu_3235_p2;
wire   [0:0] xor_ln116_3_fu_3239_p2;
wire  signed [31:0] sext_ln116_2_fu_3250_p1;
wire   [53:0] zext_ln116_10_fu_3258_p1;
wire   [23:0] sext_ln116_2cast_fu_3267_p1;
wire   [23:0] shl_ln116_2_fu_3271_p2;
wire   [23:0] select_ln116_11_fu_3276_p3;
wire   [0:0] xor_ln116_4_fu_3290_p2;
wire   [0:0] and_ln116_4_fu_3295_p2;
wire   [23:0] select_ln116_18_fu_3283_p3;
wire   [0:0] or_ln116_2_fu_3307_p2;
wire   [0:0] xor_ln116_5_fu_3311_p2;
wire   [31:0] bitcast_ln724_fu_3325_p1;
wire   [0:0] tmp_53_fu_3328_p3;
wire   [23:0] trunc_ln116_3_fu_3322_p1;
wire   [23:0] select_ln116_21_fu_3336_p3;
wire   [23:0] select_ln116_2_fu_3344_p3;
wire   [23:0] select_ln116_14_fu_3351_p3;
wire   [23:0] add_ln116_1_fu_3357_p2;
wire   [31:0] bitcast_ln724_4_fu_3376_p1;
wire   [0:0] tmp_60_fu_3379_p3;
wire   [23:0] trunc_ln116_10_fu_3373_p1;
wire   [23:0] select_ln116_22_fu_3387_p3;
wire   [23:0] select_ln116_6_fu_3395_p3;
wire   [23:0] select_ln116_17_fu_3402_p3;
wire   [23:0] add_ln116_3_fu_3408_p2;
wire   [31:0] bitcast_ln724_5_fu_3427_p1;
wire   [0:0] tmp_67_fu_3430_p3;
wire   [23:0] trunc_ln116_15_fu_3424_p1;
wire   [23:0] select_ln116_23_fu_3438_p3;
wire   [23:0] select_ln116_10_fu_3446_p3;
wire   [23:0] select_ln116_20_fu_3453_p3;
wire   [23:0] add_ln116_5_fu_3459_p2;
wire   [7:0] trunc_ln116_s_fu_3465_p4;
wire   [7:0] trunc_ln116_9_fu_3414_p4;
wire   [7:0] trunc_ln116_4_fu_3363_p4;
wire   [15:0] grp_fu_3486_p0;
wire   [7:0] grp_fu_3486_p1;
wire   [23:0] grp_fu_3486_p2;
wire   [14:0] grp_fu_3495_p0;
wire   [7:0] grp_fu_3495_p1;
wire   [23:0] grp_fu_3495_p2;
wire   [15:0] grp_fu_3504_p0;
wire   [7:0] grp_fu_3504_p1;
wire   [23:0] grp_fu_3504_p2;
wire   [14:0] grp_fu_3513_p0;
wire   [7:0] grp_fu_3513_p1;
wire   [23:0] grp_fu_3513_p2;
wire   [15:0] grp_fu_3522_p0;
wire   [7:0] grp_fu_3522_p1;
wire   [23:0] grp_fu_3522_p2;
wire   [14:0] grp_fu_3531_p0;
wire   [7:0] grp_fu_3531_p1;
wire   [23:0] grp_fu_3531_p2;
wire    ap_continue_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_done_int_frp;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [35:0] frp_pipeline_valid_U_valid_out;
wire   [6:0] frp_pipeline_valid_U_num_valid_datasets;
wire   [23:0] pf_imgOutput_data_U_data_out;
wire    pf_imgOutput_data_U_data_out_vld;
wire    pf_imgOutput_data_U_pf_ready;
wire    pf_imgOutput_data_U_pf_done;
reg   [0:0] ap_frp_data_next_issued_imgInput_data;
reg    ap_frp_data_issued_nxt_imgInput_data_op80;
reg   [5:0] ap_frp_data_req_imgInput_data;
reg   [0:0] ap_frp_data_req_imgInput_data_op80;
reg    ap_condition_frp_roi_pvb_no_fwd_prs;
reg    ap_condition_frp_pvb_no_bkwd_prs;
reg    ap_condition_frp_pvb_pf_start;
reg    ap_frp_vld_in;
reg    frp_pipeline_valid_U_exitcond;
reg    pf_imgOutput_data_U_data_in_vld;
wire   [23:0] pf_imgOutput_data_U_frpsig_data_in;
reg    pf_all_done;
wire   [23:0] grp_fu_3486_p10;
wire   [24:0] grp_fu_3486_p20;
wire   [22:0] grp_fu_3495_p10;
wire   [24:0] grp_fu_3495_p20;
wire   [23:0] grp_fu_3504_p10;
wire   [24:0] grp_fu_3504_p20;
wire   [22:0] grp_fu_3513_p10;
wire   [24:0] grp_fu_3513_p20;
wire   [23:0] grp_fu_3522_p10;
wire   [24:0] grp_fu_3522_p20;
wire   [22:0] grp_fu_3531_p10;
wire   [24:0] grp_fu_3531_p20;
wire   [23:0] mul_ln107_10_fu_1506_p10;
wire   [23:0] mul_ln107_2_fu_1476_p10;
wire   [23:0] mul_ln107_4_fu_1610_p10;
wire   [23:0] mul_ln107_6_fu_1491_p10;
wire   [23:0] mul_ln107_8_fu_1619_p10;
wire   [23:0] mul_ln107_fu_1518_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_frp_data_req_imgInput_data = 6'd0;
#0 pf_all_done = 1'b0;
end

bilateral_filter_accel_xFbilateralFilterKernel_16_3840_2160_3_16_1_2_2_16_3_Pipeline_Col_Loop_exp_lubkb #(
    .DataWidth( 15 ),
    .AddressRange( 768 ),
    .AddressWidth( 10 ))
exp_lut_sigma_color_1_r_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(exp_lut_sigma_color_1_r_address0),
    .ce0(exp_lut_sigma_color_1_r_ce0),
    .q0(exp_lut_sigma_color_1_r_q0)
);

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_2_reg_4238),
    .din1(val_reg_4231),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_5_reg_4243),
    .din1(val_reg_4231),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

bilateral_filter_accel_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(select_ln115_8_reg_4248),
    .din1(val_reg_4231),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

bilateral_filter_accel_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd1065353216),
    .din1(grp_fu_442_p1),
    .ce(1'b1),
    .dout(grp_fu_442_p2)
);

bilateral_filter_accel_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_val_1_reg_4259),
    .ce(1'b1),
    .dout(grp_fu_450_p1)
);

bilateral_filter_accel_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(mul_val_2_reg_4265),
    .ce(1'b1),
    .dout(grp_fu_453_p1)
);

bilateral_filter_accel_mux_3_2_2_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 2 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 2 ))
mux_3_2_2_1_1_U69(
    .din0(row_ind_7),
    .din1(row_ind_8),
    .din2(row_ind_9),
    .din3(sub_i274_i_i_cast),
    .dout(trunc_ln_fu_543_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U70(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(trunc_ln_fu_543_p5),
    .dout(tmp_5_fu_551_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U71(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_7),
    .dout(tmp_6_fu_563_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U72(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_8),
    .dout(tmp_s_fu_581_p5)
);

bilateral_filter_accel_mux_3_2_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
mux_3_2_24_1_1_U73(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(row_ind_9),
    .dout(tmp_2_fu_599_p5)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U74(
    .din0(mul_ln107_2_fu_1476_p0),
    .din1(mul_ln107_2_fu_1476_p1),
    .dout(mul_ln107_2_fu_1476_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U75(
    .din0(mul_ln107_6_fu_1491_p0),
    .din1(mul_ln107_6_fu_1491_p1),
    .dout(mul_ln107_6_fu_1491_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U76(
    .din0(mul_ln107_10_fu_1506_p0),
    .din1(mul_ln107_10_fu_1506_p1),
    .dout(mul_ln107_10_fu_1506_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U77(
    .din0(mul_ln107_fu_1518_p0),
    .din1(mul_ln107_fu_1518_p1),
    .dout(mul_ln107_fu_1518_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U78(
    .din0(mul_ln107_4_fu_1610_p0),
    .din1(mul_ln107_4_fu_1610_p1),
    .dout(mul_ln107_4_fu_1610_p2)
);

bilateral_filter_accel_mul_16ns_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16ns_8ns_24_1_1_U79(
    .din0(mul_ln107_8_fu_1619_p0),
    .din1(mul_ln107_8_fu_1619_p1),
    .dout(mul_ln107_8_fu_1619_p2)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U80(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3486_p0),
    .din1(grp_fu_3486_p1),
    .din2(grp_fu_3486_p2),
    .ce(1'b1),
    .dout(grp_fu_3486_p3)
);

bilateral_filter_accel_mac_muladd_15ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_15ns_8ns_24ns_25_4_1_U81(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3495_p0),
    .din1(grp_fu_3495_p1),
    .din2(grp_fu_3495_p2),
    .ce(1'b1),
    .dout(grp_fu_3495_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U82(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3504_p0),
    .din1(grp_fu_3504_p1),
    .din2(grp_fu_3504_p2),
    .ce(1'b1),
    .dout(grp_fu_3504_p3)
);

bilateral_filter_accel_mac_muladd_15ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_15ns_8ns_24ns_25_4_1_U83(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3513_p0),
    .din1(grp_fu_3513_p1),
    .din2(grp_fu_3513_p2),
    .ce(1'b1),
    .dout(grp_fu_3513_p3)
);

bilateral_filter_accel_mac_muladd_16ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_16ns_8ns_24ns_25_4_1_U84(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3522_p0),
    .din1(grp_fu_3522_p1),
    .din2(grp_fu_3522_p2),
    .ce(1'b1),
    .dout(grp_fu_3522_p3)
);

bilateral_filter_accel_mac_muladd_15ns_8ns_24ns_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 25 ))
mac_muladd_15ns_8ns_24ns_25_4_1_U85(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3531_p0),
    .din1(grp_fu_3531_p1),
    .din2(grp_fu_3531_p2),
    .ce(1'b1),
    .dout(grp_fu_3531_p3)
);

bilateral_filter_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(pf_all_done),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(pf_all_done)
);

bilateral_filter_accel_frp_pipeline_valid #(
    .PipelineLatency( 36 ),
    .PipelineII( 1 ),
    .CeilLog2Stages( 6 ),
    .ExitLatency( 0 ))
frp_pipeline_valid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .valid_in(ap_frp_vld_in),
    .exitcond(frp_pipeline_valid_U_exitcond),
    .valid_out(frp_pipeline_valid_U_valid_out),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

bilateral_filter_accel_frp_fifoout #(
    .BlockingType( 1 ),
    .PipeLatency( 36 ),
    .PipelineII( 1 ),
    .DataWidth( 24 ),
    .NumWrites( 1 ),
    .CeilLog2Stages( 6 ),
    .CeilLog2FDepth( 6 ),
    .PfAllDoneEnable( 2 ))
pf_imgOutput_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(pf_imgOutput_data_U_frpsig_data_in),
    .data_out(pf_imgOutput_data_U_data_out),
    .valid(frp_pipeline_valid_U_valid_out),
    .data_in_vld(pf_imgOutput_data_U_data_in_vld),
    .data_out_vld(pf_imgOutput_data_U_data_out_vld),
    .data_in_last(ap_done_int_frp),
    .pf_continue(1'b1),
    .pf_all_done(pf_all_done),
    .pf_ready(pf_imgOutput_data_U_pf_ready),
    .pf_done(pf_imgOutput_data_U_pf_done),
    .data_out_read(imgOutput_data_full_n),
    .ap_start(1'b0),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_imgInput_data <= 6'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[6'd0] == 1'b0)) begin
            ap_frp_data_req_imgInput_data <= (ap_frp_data_req_imgInput_data - ap_frp_data_next_issued_imgInput_data);
        end else begin
            ap_frp_data_req_imgInput_data <= ((ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op80) - ap_frp_data_next_issued_imgInput_data);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_all_done <= 1'b0;
    end else begin
        pf_all_done <= pf_imgOutput_data_U_pf_done;
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & ((icmp_ln185_fu_488_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        col_4_fu_214 <= col_5_fu_494_p2;
    end else if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        col_4_fu_214 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_40_fu_222 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_40_fu_222 <= select_ln328_1_fu_624_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_41_fu_226 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_41_fu_226 <= select_ln328_2_fu_631_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_42_fu_230 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            empty_42_fu_230 <= select_ln349_fu_1402_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            empty_fu_218 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
            empty_fu_218 <= select_ln328_fu_617_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        LD_reg_4047 <= LD_fu_1955_p1;
        add_ln114_reg_3965 <= add_ln114_fu_1631_p2;
        add_ln68_1_reg_3789 <= add_ln68_1_fu_1236_p2;
        add_ln68_2_reg_3800 <= add_ln68_2_fu_1372_p2;
        add_ln68_3_reg_3743 <= add_ln68_3_fu_1016_p2;
        add_ln68_reg_3699 <= add_ln68_fu_826_p2;
        and_ln116_1_reg_4466 <= and_ln116_1_fu_3173_p2;
        and_ln116_3_reg_4486 <= and_ln116_3_fu_3245_p2;
        and_ln116_5_reg_4506 <= and_ln116_5_fu_3317_p2;
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        ashr_ln116_1_reg_4476 <= ashr_ln116_1_fu_3190_p2;
        ashr_ln116_2_reg_4496 <= ashr_ln116_2_fu_3262_p2;
        ashr_ln116_reg_4456 <= ashr_ln116_fu_3118_p2;
        bit_select_i_i116_i_i_i_reg_3981 <= bit_select_i_i116_i_i_i_fu_1678_p3;
        color_weights_2_reg_3855 <= exp_lut_sigma_color_1_r_q0;
        color_weights_3_reg_3832 <= exp_lut_sigma_color_1_q0;
        color_weights_3_reg_3832_pp0_iter6_reg <= color_weights_3_reg_3832;
        empty_43_reg_3872 <= empty_43_fu_1464_p2;
        icmp_ln114_1_reg_3976 <= icmp_ln114_1_fu_1672_p2;
        icmp_ln114_reg_3971 <= icmp_ln114_fu_1646_p2;
        icmp_ln115_11_reg_4186 <= icmp_ln115_11_fu_2446_p2;
        icmp_ln115_3_reg_4136 <= icmp_ln115_3_fu_2182_p2;
        icmp_ln115_4_reg_4151 <= icmp_ln115_4_fu_2218_p2;
        icmp_ln115_4_reg_4151_pp0_iter25_reg <= icmp_ln115_4_reg_4151;
        icmp_ln115_7_reg_4161 <= icmp_ln115_7_fu_2314_p2;
        icmp_ln115_8_reg_4176 <= icmp_ln115_8_fu_2350_p2;
        icmp_ln115_8_reg_4176_pp0_iter25_reg <= icmp_ln115_8_reg_4176;
        icmp_ln115_reg_4126 <= icmp_ln115_fu_2086_p2;
        icmp_ln115_reg_4126_pp0_iter25_reg <= icmp_ln115_reg_4126;
        icmp_ln116_10_reg_4416 <= icmp_ln116_10_fu_3043_p2;
        icmp_ln116_11_reg_4423 <= icmp_ln116_11_fu_3054_p2;
        icmp_ln116_12_reg_4434 <= icmp_ln116_12_fu_3080_p2;
        icmp_ln116_13_reg_4491 <= icmp_ln116_13_fu_3253_p2;
        icmp_ln116_14_reg_4446 <= icmp_ln116_14_fu_3100_p2;
        icmp_ln116_1_reg_4343 <= icmp_ln116_1_fu_2874_p2;
        icmp_ln116_2_reg_4354 <= icmp_ln116_2_fu_2900_p2;
        icmp_ln116_3_reg_4451 <= icmp_ln116_3_fu_3109_p2;
        icmp_ln116_4_reg_4366 <= icmp_ln116_4_fu_2920_p2;
        icmp_ln116_5_reg_4376 <= icmp_ln116_5_fu_2953_p2;
        icmp_ln116_6_reg_4383 <= icmp_ln116_6_fu_2964_p2;
        icmp_ln116_7_reg_4394 <= icmp_ln116_7_fu_2990_p2;
        icmp_ln116_8_reg_4471 <= icmp_ln116_8_fu_3181_p2;
        icmp_ln116_9_reg_4406 <= icmp_ln116_9_fu_3010_p2;
        icmp_ln116_reg_4336 <= icmp_ln116_fu_2863_p2;
        icmp_ln191_reg_3625_pp0_iter2_reg <= icmp_ln191_reg_3625_pp0_iter1_reg;
        icmp_ln336_reg_3651 <= icmp_ln336_fu_529_p2;
        icmp_ln336_reg_3651_pp0_iter10_reg <= icmp_ln336_reg_3651_pp0_iter9_reg;
        icmp_ln336_reg_3651_pp0_iter11_reg <= icmp_ln336_reg_3651_pp0_iter10_reg;
        icmp_ln336_reg_3651_pp0_iter12_reg <= icmp_ln336_reg_3651_pp0_iter11_reg;
        icmp_ln336_reg_3651_pp0_iter13_reg <= icmp_ln336_reg_3651_pp0_iter12_reg;
        icmp_ln336_reg_3651_pp0_iter14_reg <= icmp_ln336_reg_3651_pp0_iter13_reg;
        icmp_ln336_reg_3651_pp0_iter15_reg <= icmp_ln336_reg_3651_pp0_iter14_reg;
        icmp_ln336_reg_3651_pp0_iter16_reg <= icmp_ln336_reg_3651_pp0_iter15_reg;
        icmp_ln336_reg_3651_pp0_iter17_reg <= icmp_ln336_reg_3651_pp0_iter16_reg;
        icmp_ln336_reg_3651_pp0_iter18_reg <= icmp_ln336_reg_3651_pp0_iter17_reg;
        icmp_ln336_reg_3651_pp0_iter19_reg <= icmp_ln336_reg_3651_pp0_iter18_reg;
        icmp_ln336_reg_3651_pp0_iter20_reg <= icmp_ln336_reg_3651_pp0_iter19_reg;
        icmp_ln336_reg_3651_pp0_iter21_reg <= icmp_ln336_reg_3651_pp0_iter20_reg;
        icmp_ln336_reg_3651_pp0_iter22_reg <= icmp_ln336_reg_3651_pp0_iter21_reg;
        icmp_ln336_reg_3651_pp0_iter23_reg <= icmp_ln336_reg_3651_pp0_iter22_reg;
        icmp_ln336_reg_3651_pp0_iter24_reg <= icmp_ln336_reg_3651_pp0_iter23_reg;
        icmp_ln336_reg_3651_pp0_iter25_reg <= icmp_ln336_reg_3651_pp0_iter24_reg;
        icmp_ln336_reg_3651_pp0_iter26_reg <= icmp_ln336_reg_3651_pp0_iter25_reg;
        icmp_ln336_reg_3651_pp0_iter27_reg <= icmp_ln336_reg_3651_pp0_iter26_reg;
        icmp_ln336_reg_3651_pp0_iter28_reg <= icmp_ln336_reg_3651_pp0_iter27_reg;
        icmp_ln336_reg_3651_pp0_iter29_reg <= icmp_ln336_reg_3651_pp0_iter28_reg;
        icmp_ln336_reg_3651_pp0_iter30_reg <= icmp_ln336_reg_3651_pp0_iter29_reg;
        icmp_ln336_reg_3651_pp0_iter31_reg <= icmp_ln336_reg_3651_pp0_iter30_reg;
        icmp_ln336_reg_3651_pp0_iter32_reg <= icmp_ln336_reg_3651_pp0_iter31_reg;
        icmp_ln336_reg_3651_pp0_iter33_reg <= icmp_ln336_reg_3651_pp0_iter32_reg;
        icmp_ln336_reg_3651_pp0_iter34_reg <= icmp_ln336_reg_3651_pp0_iter33_reg;
        icmp_ln336_reg_3651_pp0_iter3_reg <= icmp_ln336_reg_3651;
        icmp_ln336_reg_3651_pp0_iter4_reg <= icmp_ln336_reg_3651_pp0_iter3_reg;
        icmp_ln336_reg_3651_pp0_iter5_reg <= icmp_ln336_reg_3651_pp0_iter4_reg;
        icmp_ln336_reg_3651_pp0_iter6_reg <= icmp_ln336_reg_3651_pp0_iter5_reg;
        icmp_ln336_reg_3651_pp0_iter7_reg <= icmp_ln336_reg_3651_pp0_iter6_reg;
        icmp_ln336_reg_3651_pp0_iter8_reg <= icmp_ln336_reg_3651_pp0_iter7_reg;
        icmp_ln336_reg_3651_pp0_iter9_reg <= icmp_ln336_reg_3651_pp0_iter8_reg;
        lshr_ln114_1_reg_4023 <= {{add_ln114_2_fu_1816_p2[63:1]}};
        lshr_ln114_reg_3986 <= lshr_ln114_fu_1697_p2;
        lshr_ln115_2_reg_4166 <= lshr_ln115_2_fu_2329_p2;
        lshr_ln115_4_reg_4191 <= lshr_ln115_4_fu_2461_p2;
        lshr_ln115_reg_4141 <= lshr_ln115_fu_2197_p2;
        mul_ln107_10_reg_3907 <= mul_ln107_10_fu_1506_p2;
        mul_ln107_10_reg_3907_pp0_iter7_reg <= mul_ln107_10_reg_3907;
        mul_ln107_2_reg_3877 <= mul_ln107_2_fu_1476_p2;
        mul_ln107_2_reg_3877_pp0_iter7_reg <= mul_ln107_2_reg_3877;
        mul_ln107_4_reg_3945 <= mul_ln107_4_fu_1610_p2;
        mul_ln107_6_reg_3892 <= mul_ln107_6_fu_1491_p2;
        mul_ln107_6_reg_3892_pp0_iter7_reg <= mul_ln107_6_reg_3892;
        mul_ln107_8_reg_3950 <= mul_ln107_8_fu_1619_p2;
        mul_ln107_reg_3912 <= mul_ln107_fu_1518_p2;
        mul_val_1_reg_4259 <= grp_fu_434_p2;
        mul_val_1_reg_4259_pp0_iter31_reg <= mul_val_1_reg_4259;
        mul_val_1_reg_4259_pp0_iter32_reg <= mul_val_1_reg_4259_pp0_iter31_reg;
        mul_val_1_reg_4259_pp0_iter33_reg <= mul_val_1_reg_4259_pp0_iter32_reg;
        mul_val_1_reg_4259_pp0_iter34_reg <= mul_val_1_reg_4259_pp0_iter33_reg;
        mul_val_2_reg_4265 <= grp_fu_438_p2;
        mul_val_2_reg_4265_pp0_iter31_reg <= mul_val_2_reg_4265;
        mul_val_2_reg_4265_pp0_iter32_reg <= mul_val_2_reg_4265_pp0_iter31_reg;
        mul_val_2_reg_4265_pp0_iter33_reg <= mul_val_2_reg_4265_pp0_iter32_reg;
        mul_val_2_reg_4265_pp0_iter34_reg <= mul_val_2_reg_4265_pp0_iter33_reg;
        mul_val_reg_4253 <= grp_fu_430_p2;
        mul_val_reg_4253_pp0_iter31_reg <= mul_val_reg_4253;
        mul_val_reg_4253_pp0_iter32_reg <= mul_val_reg_4253_pp0_iter31_reg;
        mul_val_reg_4253_pp0_iter33_reg <= mul_val_reg_4253_pp0_iter32_reg;
        mul_val_reg_4253_pp0_iter34_reg <= mul_val_reg_4253_pp0_iter33_reg;
        or_ln115_1_reg_4156[0] <= or_ln115_1_fu_2303_p3[0];
        or_ln115_2_reg_4181[0] <= or_ln115_2_fu_2435_p3[0];
        or_ln1_reg_4131[0] <= or_ln1_fu_2171_p3[0];
        p_load132_reg_3656 <= empty_40_fu_222;
        p_load132_reg_3656_pp0_iter4_reg <= p_load132_reg_3656;
        p_load132_reg_3656_pp0_iter5_reg <= p_load132_reg_3656_pp0_iter4_reg;
        p_load132_reg_3656_pp0_iter6_reg <= p_load132_reg_3656_pp0_iter5_reg;
        p_load132_reg_3656_pp0_iter7_reg <= p_load132_reg_3656_pp0_iter6_reg;
        p_load132_reg_3656_pp0_iter8_reg <= p_load132_reg_3656_pp0_iter7_reg;
        px_sum_1_reg_4016[26 : 1] <= px_sum_1_fu_1759_p2[26 : 1];
        px_sum_1_reg_4016_pp0_iter10_reg[26 : 1] <= px_sum_1_reg_4016[26 : 1];
        px_sum_1_reg_4016_pp0_iter11_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter10_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter12_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter11_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter13_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter12_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter14_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter13_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter15_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter14_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter16_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter15_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter17_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter16_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter18_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter17_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter19_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter18_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter20_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter19_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter21_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter20_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter22_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter21_reg[26 : 1];
        px_sum_1_reg_4016_pp0_iter23_reg[26 : 1] <= px_sum_1_reg_4016_pp0_iter22_reg[26 : 1];
        px_sum_3_reg_4033[26 : 1] <= px_sum_3_fu_1871_p2[26 : 1];
        px_sum_3_reg_4033_pp0_iter10_reg[26 : 1] <= px_sum_3_reg_4033[26 : 1];
        px_sum_3_reg_4033_pp0_iter11_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter10_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter12_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter11_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter13_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter12_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter14_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter13_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter15_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter14_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter16_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter15_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter17_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter16_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter18_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter17_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter19_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter18_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter20_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter19_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter21_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter20_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter22_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter21_reg[26 : 1];
        px_sum_3_reg_4033_pp0_iter23_reg[26 : 1] <= px_sum_3_reg_4033_pp0_iter22_reg[26 : 1];
        px_sum_5_reg_4040[26 : 1] <= px_sum_5_fu_1908_p2[26 : 1];
        px_sum_5_reg_4040_pp0_iter10_reg[26 : 1] <= px_sum_5_reg_4040[26 : 1];
        px_sum_5_reg_4040_pp0_iter11_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter10_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter12_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter11_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter13_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter12_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter14_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter13_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter15_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter14_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter16_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter15_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter17_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter16_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter18_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter17_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter19_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter18_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter20_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter19_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter21_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter20_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter22_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter21_reg[26 : 1];
        px_sum_5_reg_4040_pp0_iter23_reg[26 : 1] <= px_sum_5_reg_4040_pp0_iter22_reg[26 : 1];
        select_ln115_2_reg_4238 <= select_ln115_2_fu_2627_p3;
        select_ln115_5_reg_4243 <= select_ln115_5_fu_2683_p3;
        select_ln115_8_reg_4248 <= select_ln115_8_fu_2739_p3;
        select_ln116_13_reg_4461 <= select_ln116_13_fu_3156_p3;
        select_ln116_16_reg_4481 <= select_ln116_16_fu_3228_p3;
        select_ln116_19_reg_4501 <= select_ln116_19_fu_3300_p3;
        select_ln116_1_reg_4348 <= select_ln116_1_fu_2892_p3;
        select_ln116_4_reg_4371 <= select_ln116_4_fu_2946_p3;
        select_ln116_5_reg_4388 <= select_ln116_5_fu_2982_p3;
        select_ln116_8_reg_4411 <= select_ln116_8_fu_3036_p3;
        select_ln116_9_reg_4428 <= select_ln116_9_fu_3072_p3;
        select_ln116_reg_4331 <= select_ln116_fu_2856_p3;
        select_ln328_1_reg_3661 <= select_ln328_1_fu_624_p3;
        shl_ln114_reg_3991 <= shl_ln114_fu_1712_p2;
        shl_ln115_1_reg_4171 <= shl_ln115_1_fu_2344_p2;
        shl_ln115_2_reg_4196 <= shl_ln115_2_fu_2476_p2;
        shl_ln115_reg_4146 <= shl_ln115_fu_2212_p2;
        sub_ln114_reg_3928 <= sub_ln114_fu_1593_p2;
        sub_ln115_10_reg_4093 <= sub_ln115_10_fu_2035_p2;
        sub_ln115_11_reg_4116 <= sub_ln115_11_fu_2076_p2;
        sub_ln115_2_reg_4086 <= sub_ln115_2_fu_2025_p2;
        sub_ln115_4_reg_4109 <= sub_ln115_4_fu_2066_p2;
        sub_ln115_9_reg_4070 <= sub_ln115_9_fu_1994_p2;
        sub_ln115_reg_4063 <= sub_ln115_fu_1984_p2;
        tmp_12_reg_3705 <= diffpx_fu_820_p2[32'd10];
        tmp_14_reg_3779 <= {{empty_42_fu_230[15:8]}};
        tmp_14_reg_3779_pp0_iter5_reg <= tmp_14_reg_3779;
        tmp_14_reg_3779_pp0_iter6_reg <= tmp_14_reg_3779_pp0_iter5_reg;
        tmp_16_reg_3784 <= {{empty_42_fu_230[23:16]}};
        tmp_16_reg_3784_pp0_iter5_reg <= tmp_16_reg_3784;
        tmp_16_reg_3784_pp0_iter6_reg <= tmp_16_reg_3784_pp0_iter5_reg;
        tmp_18_reg_3795 <= diffpx_3_fu_1230_p2[32'd10];
        tmp_20_reg_3716 <= {{select_ln328_1_fu_624_p3[15:8]}};
        tmp_20_reg_3716_pp0_iter4_reg <= tmp_20_reg_3716;
        tmp_20_reg_3716_pp0_iter5_reg <= tmp_20_reg_3716_pp0_iter4_reg;
        tmp_22_reg_3722 <= {{select_ln328_1_fu_624_p3[23:16]}};
        tmp_22_reg_3722_pp0_iter4_reg <= tmp_22_reg_3722;
        tmp_22_reg_3722_pp0_iter5_reg <= tmp_22_reg_3722_pp0_iter4_reg;
        tmp_24_reg_3806 <= diffpx_6_fu_1366_p2[32'd10];
        tmp_26_reg_3733 <= {{empty_41_fu_226[15:8]}};
        tmp_26_reg_3733_pp0_iter4_reg <= tmp_26_reg_3733;
        tmp_26_reg_3733_pp0_iter5_reg <= tmp_26_reg_3733_pp0_iter4_reg;
        tmp_30_reg_3738 <= {{empty_41_fu_226[23:16]}};
        tmp_30_reg_3738_pp0_iter4_reg <= tmp_30_reg_3738;
        tmp_30_reg_3738_pp0_iter5_reg <= tmp_30_reg_3738_pp0_iter4_reg;
        tmp_36_reg_3749 <= diffpx_9_fu_1010_p2[32'd10];
        tmp_38_reg_3754 <= {{empty_40_fu_222[15:8]}};
        tmp_38_reg_3754_pp0_iter4_reg <= tmp_38_reg_3754;
        tmp_38_reg_3754_pp0_iter5_reg <= tmp_38_reg_3754_pp0_iter4_reg;
        tmp_38_reg_3754_pp0_iter6_reg <= tmp_38_reg_3754_pp0_iter5_reg;
        tmp_38_reg_3754_pp0_iter7_reg <= tmp_38_reg_3754_pp0_iter6_reg;
        tmp_38_reg_3754_pp0_iter8_reg <= tmp_38_reg_3754_pp0_iter7_reg;
        tmp_3_reg_3677 <= {{empty_fu_218[15:8]}};
        tmp_3_reg_3677_pp0_iter4_reg <= tmp_3_reg_3677;
        tmp_3_reg_3677_pp0_iter5_reg <= tmp_3_reg_3677_pp0_iter4_reg;
        tmp_43_reg_4028 <= add_ln114_2_fu_1816_p2[32'd25];
        tmp_45_reg_3759 <= {{empty_40_fu_222[23:16]}};
        tmp_45_reg_3759_pp0_iter4_reg <= tmp_45_reg_3759;
        tmp_45_reg_3759_pp0_iter5_reg <= tmp_45_reg_3759_pp0_iter4_reg;
        tmp_45_reg_3759_pp0_iter6_reg <= tmp_45_reg_3759_pp0_iter5_reg;
        tmp_45_reg_3759_pp0_iter7_reg <= tmp_45_reg_3759_pp0_iter6_reg;
        tmp_45_reg_3759_pp0_iter8_reg <= tmp_45_reg_3759_pp0_iter7_reg;
        tmp_51_reg_4276 <= bitcast_ln724_1_fu_2746_p1[32'd63];
        tmp_52_reg_4281 <= {{bitcast_ln724_1_fu_2746_p1[62:52]}};
        tmp_58_reg_4296 <= bitcast_ln724_2_fu_2776_p1[32'd63];
        tmp_59_reg_4301 <= {{bitcast_ln724_2_fu_2776_p1[62:52]}};
        tmp_65_reg_4316 <= bitcast_ln724_3_fu_2806_p1[32'd63];
        tmp_66_reg_4321 <= {{bitcast_ln724_3_fu_2806_p1[62:52]}};
        tmp_9_reg_3688 <= {{empty_fu_218[23:16]}};
        tmp_9_reg_3688_pp0_iter4_reg <= tmp_9_reg_3688;
        tmp_9_reg_3688_pp0_iter5_reg <= tmp_9_reg_3688_pp0_iter4_reg;
        trunc_ln114_1_reg_3940 <= trunc_ln114_1_fu_1603_p1;
        trunc_ln114_1_reg_3940_pp0_iter8_reg <= trunc_ln114_1_reg_3940;
        trunc_ln114_1_reg_3940_pp0_iter9_reg <= trunc_ln114_1_reg_3940_pp0_iter8_reg;
        trunc_ln114_reg_3935 <= trunc_ln114_fu_1599_p1;
        trunc_ln115_1_reg_4075 <= trunc_ln115_1_fu_2000_p1;
        trunc_ln115_1_reg_4075_pp0_iter24_reg <= trunc_ln115_1_reg_4075;
        trunc_ln115_1_reg_4075_pp0_iter25_reg <= trunc_ln115_1_reg_4075_pp0_iter24_reg;
        trunc_ln115_3_reg_4098 <= trunc_ln115_3_fu_2041_p1;
        trunc_ln115_3_reg_4098_pp0_iter24_reg <= trunc_ln115_3_reg_4098;
        trunc_ln115_3_reg_4098_pp0_iter25_reg <= trunc_ln115_3_reg_4098_pp0_iter24_reg;
        trunc_ln115_5_reg_4121 <= trunc_ln115_5_fu_2082_p1;
        trunc_ln115_5_reg_4121_pp0_iter24_reg <= trunc_ln115_5_reg_4121;
        trunc_ln115_5_reg_4121_pp0_iter25_reg <= trunc_ln115_5_reg_4121_pp0_iter24_reg;
        trunc_ln116_12_reg_4311 <= trunc_ln116_12_fu_2810_p1;
        trunc_ln116_13_reg_4326 <= trunc_ln116_13_fu_2832_p1;
        trunc_ln116_14_reg_4440 <= trunc_ln116_14_fu_3086_p1;
        trunc_ln116_1_reg_4286 <= trunc_ln116_1_fu_2772_p1;
        trunc_ln116_2_reg_4360 <= trunc_ln116_2_fu_2906_p1;
        trunc_ln116_6_reg_4291 <= trunc_ln116_6_fu_2780_p1;
        trunc_ln116_7_reg_4306 <= trunc_ln116_7_fu_2802_p1;
        trunc_ln116_8_reg_4400 <= trunc_ln116_8_fu_2996_p1;
        trunc_ln116_reg_4271 <= trunc_ln116_fu_2750_p1;
        trunc_ln92_2_reg_3774 <= trunc_ln92_2_fu_1087_p1;
        trunc_ln92_2_reg_3774_pp0_iter5_reg <= trunc_ln92_2_reg_3774;
        trunc_ln92_2_reg_3774_pp0_iter6_reg <= trunc_ln92_2_reg_3774_pp0_iter5_reg;
        trunc_ln92_3_reg_3710 <= trunc_ln92_3_fu_840_p1;
        trunc_ln92_3_reg_3710_pp0_iter4_reg <= trunc_ln92_3_reg_3710;
        trunc_ln92_3_reg_3710_pp0_iter5_reg <= trunc_ln92_3_reg_3710_pp0_iter4_reg;
        trunc_ln92_4_reg_3728 <= trunc_ln92_4_fu_864_p1;
        trunc_ln92_4_reg_3728_pp0_iter4_reg <= trunc_ln92_4_reg_3728;
        trunc_ln92_4_reg_3728_pp0_iter5_reg <= trunc_ln92_4_reg_3728_pp0_iter4_reg;
        trunc_ln92_reg_3666 <= trunc_ln92_fu_638_p1;
        trunc_ln92_reg_3666_pp0_iter4_reg <= trunc_ln92_reg_3666;
        trunc_ln92_reg_3666_pp0_iter5_reg <= trunc_ln92_reg_3666_pp0_iter4_reg;
        val_reg_4231 <= grp_fu_442_p2;
        weight_sum_reg_3917[18 : 1] <= weight_sum_fu_1565_p2[18 : 1];
        zext_ln64_reg_3922[18 : 1] <= zext_ln64_fu_1571_p1[18 : 1];
        zext_ln65_1_reg_4057[26 : 1] <= zext_ln65_1_fu_1963_p1[26 : 1];
        zext_ln65_3_reg_4080[26 : 1] <= zext_ln65_3_fu_2004_p1[26 : 1];
        zext_ln65_5_reg_4103[26 : 1] <= zext_ln65_5_fu_2045_p1[26 : 1];
        zext_ln92_1_reg_3671[7 : 0] <= zext_ln92_1_fu_650_p1[7 : 0];
        zext_ln93_1_reg_3682[7 : 0] <= zext_ln93_1_fu_710_p1[7 : 0];
        zext_ln94_1_reg_3693[7 : 0] <= zext_ln94_1_fu_770_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln185_fu_488_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln191_reg_3632 <= and_ln191_fu_506_p2;
        icmp_ln191_reg_3625 <= icmp_ln191_fu_500_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_reg_3614 <= ap_sig_allocacmp_col;
        col_reg_3614_pp0_iter1_reg <= col_reg_3614;
        icmp_ln191_reg_3625_pp0_iter1_reg <= icmp_ln191_reg_3625;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        color_weights_1_reg_3850 <= exp_lut_sigma_color_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        color_weights_reg_3816 <= exp_lut_sigma_color_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_4126 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_1_reg_4201 <= {{add_ln115_2_fu_2490_p2[63:1]}};
        tmp_50_reg_4206 <= add_ln115_2_fu_2490_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_4_reg_4151 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_3_reg_4211 <= {{add_ln115_6_fu_2522_p2[63:1]}};
        tmp_57_reg_4216 <= add_ln115_6_fu_2522_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_8_reg_4176 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lshr_ln115_5_reg_4221 <= {{add_ln115_10_fu_2554_p2[63:1]}};
        tmp_64_reg_4226 <= add_ln115_10_fu_2554_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln336_reg_3651 == 1'd0))) begin
        p_load133_reg_3764 <= empty_40_fu_222;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & ((icmp_ln185_fu_488_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter34_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int_frp = 1'b1;
    end else begin
        ap_done_int_frp = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1)) begin
        ap_enable_reg_pp0_iter1 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter1 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd10] == 1'b1)) begin
        ap_enable_reg_pp0_iter10 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter10 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd11] == 1'b1)) begin
        ap_enable_reg_pp0_iter11 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter11 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd12] == 1'b1)) begin
        ap_enable_reg_pp0_iter12 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter12 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd13] == 1'b1)) begin
        ap_enable_reg_pp0_iter13 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter13 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd14] == 1'b1)) begin
        ap_enable_reg_pp0_iter14 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter14 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd15] == 1'b1)) begin
        ap_enable_reg_pp0_iter15 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter15 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd16] == 1'b1)) begin
        ap_enable_reg_pp0_iter16 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter16 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd17] == 1'b1)) begin
        ap_enable_reg_pp0_iter17 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter17 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd18] == 1'b1)) begin
        ap_enable_reg_pp0_iter18 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter18 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd19] == 1'b1)) begin
        ap_enable_reg_pp0_iter19 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter19 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd2] == 1'b1)) begin
        ap_enable_reg_pp0_iter2 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter2 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd20] == 1'b1)) begin
        ap_enable_reg_pp0_iter20 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter20 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd21] == 1'b1)) begin
        ap_enable_reg_pp0_iter21 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter21 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd22] == 1'b1)) begin
        ap_enable_reg_pp0_iter22 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter22 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd23] == 1'b1)) begin
        ap_enable_reg_pp0_iter23 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter23 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd24] == 1'b1)) begin
        ap_enable_reg_pp0_iter24 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter24 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd25] == 1'b1)) begin
        ap_enable_reg_pp0_iter25 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter25 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd26] == 1'b1)) begin
        ap_enable_reg_pp0_iter26 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter26 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd27] == 1'b1)) begin
        ap_enable_reg_pp0_iter27 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter27 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd28] == 1'b1)) begin
        ap_enable_reg_pp0_iter28 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter28 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd29] == 1'b1)) begin
        ap_enable_reg_pp0_iter29 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter29 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd3] == 1'b1)) begin
        ap_enable_reg_pp0_iter3 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter3 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd30] == 1'b1)) begin
        ap_enable_reg_pp0_iter30 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter30 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd31] == 1'b1)) begin
        ap_enable_reg_pp0_iter31 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter31 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd32] == 1'b1)) begin
        ap_enable_reg_pp0_iter32 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter32 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd33] == 1'b1)) begin
        ap_enable_reg_pp0_iter33 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter33 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd34] == 1'b1)) begin
        ap_enable_reg_pp0_iter34 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter34 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd35] == 1'b1)) begin
        ap_enable_reg_pp0_iter35 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter35 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd4] == 1'b1)) begin
        ap_enable_reg_pp0_iter4 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter4 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd5] == 1'b1)) begin
        ap_enable_reg_pp0_iter5 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter5 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd6] == 1'b1)) begin
        ap_enable_reg_pp0_iter6 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter6 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd7] == 1'b1)) begin
        ap_enable_reg_pp0_iter7 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter7 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd8] == 1'b1)) begin
        ap_enable_reg_pp0_iter8 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter8 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[6'd9] == 1'b1)) begin
        ap_enable_reg_pp0_iter9 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter9 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'd1 == and_ln191_reg_3632))) begin
        ap_frp_data_issued_nxt_imgInput_data_op80 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_imgInput_data_op80 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_imgInput_data_op80 == 1'b1)) begin
        ap_frp_data_next_issued_imgInput_data = 1'd1;
    end else begin
        ap_frp_data_next_issued_imgInput_data = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln185_fu_488_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln191_fu_506_p2))) begin
        ap_frp_data_req_imgInput_data_op80 = 1'd1;
    end else begin
        ap_frp_data_req_imgInput_data_op80 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_frp_pvb_pf_start) & (1'b1 == ap_condition_frp_pvb_no_bkwd_prs) & (1'b1 == ap_condition_frp_roi_pvb_no_fwd_prs))) begin
        ap_frp_vld_in = 1'b1;
    end else begin
        ap_frp_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) 
    & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd0] == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_col = 13'd0;
    end else begin
        ap_sig_allocacmp_col = col_4_fu_214;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((row_ind_9_read_reg_3608 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3632)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (~(row_ind_9_read_reg_3608 == 2'd0) & ~(row_ind_9_read_reg_3608 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3632)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((row_ind_9_read_reg_3608 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3632)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_1_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_1_r_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_1_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_ce0 = 1'b1;
    end else begin
        exp_lut_sigma_color_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_lut_sigma_color_ce1 = 1'b1;
    end else begin
        exp_lut_sigma_color_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_488_p2 == 1'd1))) begin
        frp_pipeline_valid_U_exitcond = 1'b1;
    end else begin
        frp_pipeline_valid_U_exitcond = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[6'd1] == 1'b1) & ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln191_reg_3632)))) begin
        imgInput_data_read = 1'b1;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((pf_imgOutput_data_U_data_out_vld == 1'b1)) begin
        imgOutput_data_write = 1'b1;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln336_reg_3651_pp0_iter34_reg == 1'd0) & (ap_enable_reg_pp0_iter35 == 1'b1))) begin
        pf_imgOutput_data_U_data_in_vld = 1'b1;
    end else begin
        pf_imgOutput_data_U_data_in_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign LD_1_fu_2619_p1 = pi_assign_1_fu_2607_p5[31:0];

assign LD_3_fu_2675_p1 = pi_assign_2_fu_2663_p5[31:0];

assign LD_5_fu_2731_p1 = pi_assign_3_fu_2719_p5[31:0];

assign LD_fu_1955_p1 = pi_assign_fu_1943_p5[31:0];

assign add_ln108_fu_1555_p2 = (zext_ln108_fu_1551_p1 + 18'd65536);

assign add_ln114_1_fu_1688_p2 = ($signed(sub_ln114_reg_3928) + $signed(32'd4294967271));

assign add_ln114_2_fu_1816_p2 = (select_ln114_fu_1806_p3 + zext_ln114_3_fu_1812_p1);

assign add_ln114_3_fu_1929_p2 = (sub_ln114_2_fu_1924_p2 + select_ln114_1_fu_1917_p3);

assign add_ln114_fu_1631_p2 = ($signed(sub_ln114_reg_3928) + $signed(32'd4294967272));

assign add_ln115_10_fu_2554_p2 = (select_ln115_6_fu_2546_p3 + zext_ln115_11_fu_2551_p1);

assign add_ln115_11_fu_2705_p2 = (sub_ln115_8_fu_2700_p2 + select_ln115_7_fu_2693_p3);

assign add_ln115_1_fu_2188_p2 = ($signed(sub_ln115_reg_4063) + $signed(32'd4294967271));

assign add_ln115_2_fu_2490_p2 = (select_ln115_fu_2482_p3 + zext_ln115_3_fu_2487_p1);

assign add_ln115_3_fu_2593_p2 = (sub_ln115_6_fu_2588_p2 + select_ln115_1_fu_2581_p3);

assign add_ln115_4_fu_2223_p2 = ($signed(sub_ln115_2_reg_4086) + $signed(32'd4294967272));

assign add_ln115_5_fu_2320_p2 = ($signed(sub_ln115_2_reg_4086) + $signed(32'd4294967271));

assign add_ln115_6_fu_2522_p2 = (select_ln115_3_fu_2514_p3 + zext_ln115_7_fu_2519_p1);

assign add_ln115_7_fu_2649_p2 = (sub_ln115_7_fu_2644_p2 + select_ln115_4_fu_2637_p3);

assign add_ln115_8_fu_2355_p2 = ($signed(sub_ln115_4_reg_4109) + $signed(32'd4294967272));

assign add_ln115_9_fu_2452_p2 = ($signed(sub_ln115_4_reg_4109) + $signed(32'd4294967271));

assign add_ln115_fu_2091_p2 = ($signed(sub_ln115_reg_4063) + $signed(32'd4294967272));

assign add_ln116_1_fu_3357_p2 = (select_ln116_14_fu_3351_p3 + 24'd32768);

assign add_ln116_2_fu_2970_p2 = ($signed(sub_ln116_4_fu_2958_p2) + $signed(12'd4080));

assign add_ln116_3_fu_3408_p2 = (select_ln116_17_fu_3402_p3 + 24'd32768);

assign add_ln116_4_fu_3060_p2 = ($signed(sub_ln116_7_fu_3048_p2) + $signed(12'd4080));

assign add_ln116_5_fu_3459_p2 = (select_ln116_20_fu_3453_p3 + 24'd32768);

assign add_ln116_fu_2880_p2 = ($signed(sub_ln116_1_fu_2868_p2) + $signed(12'd4080));

assign add_ln68_1_fu_1236_p2 = ($signed(add_ln93_1_fu_1216_p2) + $signed(sext_ln92_5_fu_1226_p1));

assign add_ln68_2_fu_1372_p2 = ($signed(add_ln93_2_fu_1352_p2) + $signed(sext_ln92_6_fu_1362_p1));

assign add_ln68_3_fu_1016_p2 = ($signed(add_ln93_3_fu_996_p2) + $signed(sext_ln92_7_fu_1006_p1));

assign add_ln68_fu_826_p2 = ($signed(add_ln93_fu_806_p2) + $signed(sext_ln92_4_fu_816_p1));

assign add_ln93_1_fu_1216_p2 = ($signed(sext_ln94_1_fu_1167_p1) + $signed(sext_ln93_2_fu_1122_p1));

assign add_ln93_2_fu_1352_p2 = ($signed(sext_ln94_2_fu_1314_p1) + $signed(sext_ln93_4_fu_1280_p1));

assign add_ln93_3_fu_996_p2 = ($signed(sext_ln94_3_fu_946_p1) + $signed(sext_ln93_6_fu_900_p1));

assign add_ln93_fu_806_p2 = ($signed(sext_ln94_fu_742_p1) + $signed(sext_ln93_fu_682_p1));

assign and_ln114_1_fu_1782_p2 = (xor_ln114_fu_1776_p2 & bit_select_i_i116_i_i_i_reg_3981);

assign and_ln114_2_fu_1667_p2 = (zext_ln64_reg_3922 & lshr_ln114_2_fu_1661_p2);

assign and_ln114_fu_1765_p2 = (icmp_ln114_reg_3971 & icmp_ln114_1_reg_3976);

assign and_ln115_1_fu_2159_p2 = (xor_ln115_fu_2146_p2 & bit_select_i_i_i_i_i_fu_2152_p3);

assign and_ln115_2_fu_2264_p2 = (icmp_ln115_6_fu_2258_p2 & icmp_ln115_5_fu_2238_p2);

assign and_ln115_3_fu_2291_p2 = (xor_ln115_1_fu_2278_p2 & bit_select_i_i_i_i_i_1_fu_2284_p3);

assign and_ln115_4_fu_2396_p2 = (icmp_ln115_9_fu_2370_p2 & icmp_ln115_10_fu_2390_p2);

assign and_ln115_5_fu_2423_p2 = (xor_ln115_2_fu_2410_p2 & bit_select_i_i_i_i_i_2_fu_2416_p3);

assign and_ln115_6_fu_2121_p2 = (zext_ln65_1_reg_4057 & lshr_ln115_6_fu_2115_p2);

assign and_ln115_7_fu_2253_p2 = (zext_ln65_3_reg_4080 & lshr_ln115_7_fu_2247_p2);

assign and_ln115_8_fu_2385_p2 = (zext_ln65_5_reg_4103 & lshr_ln115_8_fu_2379_p2);

assign and_ln115_fu_2132_p2 = (icmp_ln115_2_fu_2126_p2 & icmp_ln115_1_fu_2106_p2);

assign and_ln116_1_fu_3173_p2 = (xor_ln116_1_fu_3167_p2 & icmp_ln116_1_reg_4343);

assign and_ln116_2_fu_3223_p2 = (xor_ln116_2_fu_3218_p2 & icmp_ln116_7_reg_4394);

assign and_ln116_3_fu_3245_p2 = (xor_ln116_3_fu_3239_p2 & icmp_ln116_6_reg_4383);

assign and_ln116_4_fu_3295_p2 = (xor_ln116_4_fu_3290_p2 & icmp_ln116_12_reg_4434);

assign and_ln116_5_fu_3317_p2 = (xor_ln116_5_fu_3311_p2 & icmp_ln116_11_reg_4423);

assign and_ln116_fu_3151_p2 = (xor_ln116_fu_3146_p2 & icmp_ln116_2_reg_4354);

assign and_ln191_fu_506_p2 = (icmp_ln191_fu_500_p2 & cmp_i_i65_i_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = 1'b0;

assign ap_block_pp0_stage0_01001 = 1'b0;

assign ap_block_pp0_stage0_11001 = 1'b0;

assign ap_block_pp0_stage0_subdone = 1'b0;

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'b1 == 1'b0) & (1'd1 == and_ln191_reg_3632));
end

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state36_pp0_stage0_iter35 = ((1'b1 == 1'b0) & (icmp_ln336_reg_3651_pp0_iter34_reg == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_frp_pvb_no_bkwd_prs = (pf_imgOutput_data_U_pf_ready == 1'b1);
end

always @ (*) begin
    ap_condition_frp_pvb_pf_start = ((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_frp_roi_pvb_no_fwd_prs = ~(imgInput_data_num_data_valid < (ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op80));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln116_1_fu_3190_p2 = $signed(select_ln116_4_reg_4371) >>> zext_ln116_6_fu_3186_p1;

assign ashr_ln116_2_fu_3262_p2 = $signed(select_ln116_8_reg_4411) >>> zext_ln116_10_fu_3258_p1;

assign ashr_ln116_fu_3118_p2 = $signed(select_ln116_reg_4331) >>> zext_ln116_2_fu_3114_p1;

assign bit_select_i_i116_i_i_i_fu_1678_p3 = zext_ln64_reg_3922[add_ln114_fu_1631_p2];

assign bit_select_i_i_i_i_i_1_fu_2284_p3 = zext_ln65_3_reg_4080[add_ln115_4_fu_2223_p2];

assign bit_select_i_i_i_i_i_2_fu_2416_p3 = zext_ln65_5_reg_4103[add_ln115_8_fu_2355_p2];

assign bit_select_i_i_i_i_i_fu_2152_p3 = zext_ln65_1_reg_4057[add_ln115_fu_2091_p2];

assign bitcast_ln724_1_fu_2746_p1 = grp_fu_606_p_dout0;

assign bitcast_ln724_2_fu_2776_p1 = grp_fu_450_p1;

assign bitcast_ln724_3_fu_2806_p1 = grp_fu_453_p1;

assign bitcast_ln724_4_fu_3376_p1 = mul_val_1_reg_4259_pp0_iter34_reg;

assign bitcast_ln724_5_fu_3427_p1 = mul_val_2_reg_4265_pp0_iter34_reg;

assign bitcast_ln724_fu_3325_p1 = mul_val_reg_4253_pp0_iter34_reg;

assign bitcast_ln766_1_fu_2623_p1 = LD_1_fu_2619_p1;

assign bitcast_ln766_2_fu_2679_p1 = LD_3_fu_2675_p1;

assign bitcast_ln766_3_fu_2735_p1 = LD_5_fu_2731_p1;

assign buf_1_address0 = conv_i190_i_i_fu_523_p1;

assign buf_1_address1 = zext_ln192_fu_517_p1;

assign buf_1_d1 = imgInput_data_dout;

assign buf_2_address0 = conv_i190_i_i_fu_523_p1;

assign buf_2_address1 = zext_ln192_fu_517_p1;

assign buf_2_d1 = imgInput_data_dout;

assign buf_r_address0 = conv_i190_i_i_fu_523_p1;

assign buf_r_address1 = zext_ln192_fu_517_p1;

assign buf_r_d1 = imgInput_data_dout;

assign col_5_fu_494_p2 = (ap_sig_allocacmp_col + 13'd1);

assign color_weights_1_cast39_fu_1460_p1 = exp_lut_sigma_color_q0;

assign color_weights_2_cast41_fu_1524_p1 = color_weights_2_reg_3855;

assign color_weights_cast40_fu_1457_p1 = color_weights_reg_3816;

assign conv_i190_i_i_fu_523_p1 = col_reg_3614_pp0_iter1_reg;

assign diffpx_10_fu_1386_p2 = (10'd0 - add_ln68_3_reg_3743);

assign diffpx_11_fu_1391_p3 = ((tmp_36_reg_3749[0:0] == 1'b1) ? diffpx_10_fu_1386_p2 : add_ln68_3_reg_3743);

assign diffpx_1_fu_1071_p2 = (10'd0 - add_ln68_reg_3699);

assign diffpx_2_fu_1076_p3 = ((tmp_12_reg_3705[0:0] == 1'b1) ? diffpx_1_fu_1071_p2 : add_ln68_reg_3699);

assign diffpx_3_fu_1230_p2 = ($signed(sext_ln92_1_fu_1222_p1) + $signed(sext_ln93_3_fu_1212_p1));

assign diffpx_4_fu_1412_p2 = (10'd0 - add_ln68_1_reg_3789);

assign diffpx_5_fu_1417_p3 = ((tmp_18_reg_3795[0:0] == 1'b1) ? diffpx_4_fu_1412_p2 : add_ln68_1_reg_3789);

assign diffpx_6_fu_1366_p2 = ($signed(sext_ln92_2_fu_1358_p1) + $signed(sext_ln93_5_fu_1348_p1));

assign diffpx_7_fu_1428_p2 = (10'd0 - add_ln68_2_reg_3800);

assign diffpx_8_fu_1433_p3 = ((tmp_24_reg_3806[0:0] == 1'b1) ? diffpx_7_fu_1428_p2 : add_ln68_2_reg_3800);

assign diffpx_9_fu_1010_p2 = ($signed(sext_ln92_3_fu_1002_p1) + $signed(sext_ln93_7_fu_992_p1));

assign diffpx_fu_820_p2 = ($signed(sext_ln92_fu_812_p1) + $signed(sext_ln93_1_fu_802_p1));

assign empty_43_fu_1464_p2 = (color_weights_1_cast39_fu_1460_p1 + color_weights_cast40_fu_1457_p1);

assign exp_lut_sigma_color_1_address0 = zext_ln106_3_fu_1397_p1;

assign exp_lut_sigma_color_1_r_address0 = zext_ln106_2_fu_1439_p1;

assign exp_lut_sigma_color_address0 = zext_ln106_1_fu_1423_p1;

assign exp_lut_sigma_color_address1 = zext_ln106_fu_1082_p1;

assign grp_fu_3486_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3486_p1 = grp_fu_3486_p10;

assign grp_fu_3486_p10 = trunc_ln92_reg_3666_pp0_iter5_reg;

assign grp_fu_3486_p2 = grp_fu_3486_p20;

assign grp_fu_3486_p20 = mul_ln107_reg_3912;

assign grp_fu_3495_p0 = zext_ln107_5_fu_1450_p1;

assign grp_fu_3495_p1 = grp_fu_3495_p10;

assign grp_fu_3495_p10 = trunc_ln92_3_reg_3710_pp0_iter5_reg;

assign grp_fu_3495_p2 = grp_fu_3495_p20;

assign grp_fu_3495_p20 = mul_ln107_2_reg_3877_pp0_iter7_reg;

assign grp_fu_3504_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3504_p1 = grp_fu_3504_p10;

assign grp_fu_3504_p10 = tmp_3_reg_3677_pp0_iter5_reg;

assign grp_fu_3504_p2 = grp_fu_3504_p20;

assign grp_fu_3504_p20 = mul_ln107_4_reg_3945;

assign grp_fu_3513_p0 = zext_ln107_5_fu_1450_p1;

assign grp_fu_3513_p1 = grp_fu_3513_p10;

assign grp_fu_3513_p10 = tmp_20_reg_3716_pp0_iter5_reg;

assign grp_fu_3513_p2 = grp_fu_3513_p20;

assign grp_fu_3513_p20 = mul_ln107_6_reg_3892_pp0_iter7_reg;

assign grp_fu_3522_p0 = zext_ln107_fu_1444_p1;

assign grp_fu_3522_p1 = grp_fu_3522_p10;

assign grp_fu_3522_p10 = tmp_9_reg_3688_pp0_iter5_reg;

assign grp_fu_3522_p2 = grp_fu_3522_p20;

assign grp_fu_3522_p20 = mul_ln107_8_reg_3950;

assign grp_fu_3531_p0 = zext_ln107_5_fu_1450_p1;

assign grp_fu_3531_p1 = grp_fu_3531_p10;

assign grp_fu_3531_p10 = tmp_22_reg_3722_pp0_iter5_reg;

assign grp_fu_3531_p2 = grp_fu_3531_p20;

assign grp_fu_3531_p20 = mul_ln107_10_reg_3907_pp0_iter7_reg;

assign grp_fu_442_p1 = LD_reg_4047;

assign grp_fu_606_p_ce = 1'b1;

assign grp_fu_606_p_din0 = mul_val_reg_4253;

assign icmp_ln114_1_fu_1672_p2 = ((and_ln114_2_fu_1667_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln114_2_fu_1801_p2 = (($signed(add_ln114_reg_3965) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_1646_p2 = (($signed(tmp_37_fu_1636_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_10_fu_2390_p2 = ((and_ln115_8_fu_2385_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_11_fu_2446_p2 = (($signed(add_ln115_8_fu_2355_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_1_fu_2106_p2 = (($signed(tmp_44_fu_2096_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_2_fu_2126_p2 = ((and_ln115_6_fu_2121_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_3_fu_2182_p2 = (($signed(add_ln115_fu_2091_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_4_fu_2218_p2 = ((px_sum_3_reg_4033_pp0_iter23_reg == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_5_fu_2238_p2 = (($signed(tmp_55_fu_2228_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_6_fu_2258_p2 = ((and_ln115_7_fu_2253_p2 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_7_fu_2314_p2 = (($signed(add_ln115_4_fu_2223_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_8_fu_2350_p2 = ((px_sum_5_reg_4040_pp0_iter23_reg == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_9_fu_2370_p2 = (($signed(tmp_62_fu_2360_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_2086_p2 = ((px_sum_1_reg_4016_pp0_iter23_reg == 27'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_10_fu_3043_p2 = ((trunc_ln116_12_reg_4311 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_11_fu_3054_p2 = (($signed(sub_ln116_7_fu_3048_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_12_fu_3080_p2 = ((sub_ln116_7_fu_3048_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_13_fu_3253_p2 = ((select_ln116_9_reg_4428 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_14_fu_3100_p2 = ((tmp_68_fu_3090_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_2874_p2 = (($signed(sub_ln116_1_fu_2868_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_2900_p2 = ((sub_ln116_1_fu_2868_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_3109_p2 = ((select_ln116_1_reg_4348 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_2920_p2 = ((tmp_54_fu_2910_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_2953_p2 = ((trunc_ln116_6_reg_4291 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_2964_p2 = (($signed(sub_ln116_4_fu_2958_p2) > $signed(12'd16)) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_2990_p2 = ((sub_ln116_4_fu_2958_p2 == 12'd16) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_3181_p2 = ((select_ln116_5_reg_4388 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_3010_p2 = ((tmp_61_fu_3000_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2863_p2 = ((trunc_ln116_reg_4271 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_488_p2 = ((zext_ln185_fu_484_p1 > imgwidth) ? 1'b1 : 1'b0);

assign icmp_ln191_fu_500_p2 = ((zext_ln185_fu_484_p1 < imgwidth) ? 1'b1 : 1'b0);

assign icmp_ln336_fu_529_p2 = ((col_reg_3614_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign imgInput_data_blk_n = 1'b1;

assign imgOutput_data_blk_n = 1'b1;

assign imgOutput_data_din = pf_imgOutput_data_U_data_out;

assign lshr_ln114_2_fu_1661_p2 = 32'd4294967295 >> zext_ln114_5_fu_1657_p1;

assign lshr_ln114_fu_1697_p2 = zext_ln114_fu_1685_p1 >> zext_ln114_1_fu_1693_p1;

assign lshr_ln115_2_fu_2329_p2 = zext_ln115_4_fu_2311_p1 >> zext_ln115_5_fu_2325_p1;

assign lshr_ln115_4_fu_2461_p2 = zext_ln115_8_fu_2443_p1 >> zext_ln115_9_fu_2457_p1;

assign lshr_ln115_6_fu_2115_p2 = 32'd4294967295 >> zext_ln115_15_fu_2112_p1;

assign lshr_ln115_7_fu_2247_p2 = 32'd4294967295 >> zext_ln115_16_fu_2244_p1;

assign lshr_ln115_8_fu_2379_p2 = 32'd4294967295 >> zext_ln115_17_fu_2376_p1;

assign lshr_ln115_fu_2197_p2 = zext_ln115_fu_2179_p1 >> zext_ln115_1_fu_2193_p1;

assign mul_ln107_10_fu_1506_p0 = zext_ln107_7_fu_1470_p1;

assign mul_ln107_10_fu_1506_p1 = mul_ln107_10_fu_1506_p10;

assign mul_ln107_10_fu_1506_p10 = tmp_30_reg_3738_pp0_iter5_reg;

assign mul_ln107_2_fu_1476_p0 = zext_ln107_7_fu_1470_p1;

assign mul_ln107_2_fu_1476_p1 = mul_ln107_2_fu_1476_p10;

assign mul_ln107_2_fu_1476_p10 = trunc_ln92_4_reg_3728_pp0_iter5_reg;

assign mul_ln107_4_fu_1610_p0 = zext_ln107_2_fu_1512_p1;

assign mul_ln107_4_fu_1610_p1 = mul_ln107_4_fu_1610_p10;

assign mul_ln107_4_fu_1610_p10 = tmp_14_reg_3779_pp0_iter6_reg;

assign mul_ln107_6_fu_1491_p0 = zext_ln107_7_fu_1470_p1;

assign mul_ln107_6_fu_1491_p1 = mul_ln107_6_fu_1491_p10;

assign mul_ln107_6_fu_1491_p10 = tmp_26_reg_3733_pp0_iter5_reg;

assign mul_ln107_8_fu_1619_p0 = zext_ln107_2_fu_1512_p1;

assign mul_ln107_8_fu_1619_p1 = mul_ln107_8_fu_1619_p10;

assign mul_ln107_8_fu_1619_p10 = tmp_16_reg_3784_pp0_iter6_reg;

assign mul_ln107_fu_1518_p0 = zext_ln107_2_fu_1512_p1;

assign mul_ln107_fu_1518_p1 = mul_ln107_fu_1518_p10;

assign mul_ln107_fu_1518_p10 = trunc_ln92_2_reg_3774_pp0_iter6_reg;

assign or_ln114_fu_1787_p2 = (and_ln114_fu_1765_p2 | and_ln114_1_fu_1782_p2);

assign or_ln115_1_fu_2303_p3 = {{1'd0}, {or_ln115_fu_2297_p2}};

assign or_ln115_2_fu_2435_p3 = {{1'd0}, {or_ln115_4_fu_2429_p2}};

assign or_ln115_3_fu_2165_p2 = (and_ln115_fu_2132_p2 | and_ln115_1_fu_2159_p2);

assign or_ln115_4_fu_2429_p2 = (and_ln115_5_fu_2423_p2 | and_ln115_4_fu_2396_p2);

assign or_ln115_fu_2297_p2 = (and_ln115_3_fu_2291_p2 | and_ln115_2_fu_2264_p2);

assign or_ln116_1_fu_3235_p2 = (icmp_ln116_7_reg_4394 | icmp_ln116_5_reg_4376);

assign or_ln116_2_fu_3307_p2 = (icmp_ln116_12_reg_4434 | icmp_ln116_10_reg_4416);

assign or_ln116_fu_3163_p2 = (icmp_ln116_reg_4336 | icmp_ln116_2_reg_4354);

assign or_ln1_fu_2171_p3 = {{1'd0}, {or_ln115_3_fu_2165_p2}};

assign or_ln_fu_1793_p3 = {{1'd0}, {or_ln114_fu_1787_p2}};

assign p_0_0_06691279_fu_574_p3 = ((spec_select1264[0:0] == 1'b1) ? tmp_5_fu_551_p5 : tmp_6_fu_563_p5);

assign p_0_0_0669_11280_fu_592_p3 = ((spec_select1268[0:0] == 1'b1) ? tmp_5_fu_551_p5 : tmp_s_fu_581_p5);

assign p_0_0_0669_21281_fu_610_p3 = ((spec_select1272[0:0] == 1'b1) ? tmp_5_fu_551_p5 : tmp_2_fu_599_p5);

assign p_cast_fu_1527_p1 = empty_43_reg_3872;

assign pf_imgOutput_data_U_frpsig_data_in = {{{trunc_ln116_s_fu_3465_p4}, {trunc_ln116_9_fu_3414_p4}}, {trunc_ln116_4_fu_3363_p4}};

assign pi_assign_1_fu_2607_p5 = {{zext_ln115_12_fu_2578_p1[63:32]}, {tmp_35_fu_2599_p3}, {zext_ln115_12_fu_2578_p1[22:0]}};

assign pi_assign_2_fu_2663_p5 = {{zext_ln115_13_fu_2634_p1[63:32]}, {tmp_42_fu_2655_p3}, {zext_ln115_13_fu_2634_p1[22:0]}};

assign pi_assign_3_fu_2719_p5 = {{zext_ln115_14_fu_2690_p1[63:32]}, {tmp_49_fu_2711_p3}, {zext_ln115_14_fu_2690_p1[22:0]}};

assign pi_assign_fu_1943_p5 = {{zext_ln114_4_fu_1914_p1[63:32]}, {tmp_31_fu_1935_p3}, {zext_ln114_4_fu_1914_p1[22:0]}};

assign px_sum_1_fu_1759_p2 = (tmp23_fu_1751_p3 + zext_ln92_3_fu_1735_p1);

assign px_sum_3_fu_1871_p2 = (tmp39_fu_1863_p3 + zext_ln68_fu_1847_p1);

assign px_sum_5_fu_1908_p2 = (tmp47_fu_1900_p3 + zext_ln68_1_fu_1884_p1);

assign row_ind_9_read_reg_3608 = row_ind_9;

assign select_ln114_1_fu_1917_p3 = ((tmp_43_reg_4028[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln114_fu_1806_p3 = ((icmp_ln114_2_fu_1801_p2[0:0] == 1'b1) ? lshr_ln114_reg_3986 : shl_ln114_reg_3991);

assign select_ln115_1_fu_2581_p3 = ((tmp_50_reg_4206[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_2_fu_2627_p3 = ((icmp_ln115_reg_4126_pp0_iter25_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_1_fu_2623_p1);

assign select_ln115_3_fu_2514_p3 = ((icmp_ln115_7_reg_4161[0:0] == 1'b1) ? lshr_ln115_2_reg_4166 : shl_ln115_1_reg_4171);

assign select_ln115_4_fu_2637_p3 = ((tmp_57_reg_4216[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_5_fu_2683_p3 = ((icmp_ln115_4_reg_4151_pp0_iter25_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_2_fu_2679_p1);

assign select_ln115_6_fu_2546_p3 = ((icmp_ln115_11_reg_4186[0:0] == 1'b1) ? lshr_ln115_4_reg_4191 : shl_ln115_2_reg_4196);

assign select_ln115_7_fu_2693_p3 = ((tmp_64_reg_4226[0:0] == 1'b1) ? 8'd127 : 8'd126);

assign select_ln115_8_fu_2739_p3 = ((icmp_ln115_8_reg_4176_pp0_iter25_reg[0:0] == 1'b1) ? 32'd0 : bitcast_ln766_3_fu_2735_p1);

assign select_ln115_fu_2482_p3 = ((icmp_ln115_3_reg_4136[0:0] == 1'b1) ? lshr_ln115_reg_4141 : shl_ln115_reg_4146);

assign select_ln116_10_fu_3446_p3 = ((icmp_ln116_13_reg_4491[0:0] == 1'b1) ? trunc_ln116_15_fu_3424_p1 : select_ln116_23_fu_3438_p3);

assign select_ln116_11_fu_3276_p3 = ((icmp_ln116_14_reg_4446[0:0] == 1'b1) ? shl_ln116_2_fu_3271_p2 : 24'd0);

assign select_ln116_12_fu_3139_p3 = ((icmp_ln116_reg_4336[0:0] == 1'b1) ? 24'd0 : select_ln116_3_fu_3132_p3);

assign select_ln116_13_fu_3156_p3 = ((and_ln116_fu_3151_p2[0:0] == 1'b1) ? trunc_ln116_2_reg_4360 : select_ln116_12_fu_3139_p3);

assign select_ln116_14_fu_3351_p3 = ((and_ln116_1_reg_4466[0:0] == 1'b1) ? select_ln116_2_fu_3344_p3 : select_ln116_13_reg_4461);

assign select_ln116_15_fu_3211_p3 = ((icmp_ln116_5_reg_4376[0:0] == 1'b1) ? 24'd0 : select_ln116_7_fu_3204_p3);

assign select_ln116_16_fu_3228_p3 = ((and_ln116_2_fu_3223_p2[0:0] == 1'b1) ? trunc_ln116_8_reg_4400 : select_ln116_15_fu_3211_p3);

assign select_ln116_17_fu_3402_p3 = ((and_ln116_3_reg_4486[0:0] == 1'b1) ? select_ln116_6_fu_3395_p3 : select_ln116_16_reg_4481);

assign select_ln116_18_fu_3283_p3 = ((icmp_ln116_10_reg_4416[0:0] == 1'b1) ? 24'd0 : select_ln116_11_fu_3276_p3);

assign select_ln116_19_fu_3300_p3 = ((and_ln116_4_fu_3295_p2[0:0] == 1'b1) ? trunc_ln116_14_reg_4440 : select_ln116_18_fu_3283_p3);

assign select_ln116_1_fu_2892_p3 = ((icmp_ln116_1_fu_2874_p2[0:0] == 1'b1) ? add_ln116_fu_2880_p2 : sub_ln116_2_fu_2886_p2);

assign select_ln116_20_fu_3453_p3 = ((and_ln116_5_reg_4506[0:0] == 1'b1) ? select_ln116_10_fu_3446_p3 : select_ln116_19_reg_4501);

assign select_ln116_21_fu_3336_p3 = ((tmp_53_fu_3328_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_22_fu_3387_p3 = ((tmp_60_fu_3379_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_23_fu_3438_p3 = ((tmp_67_fu_3430_p3[0:0] == 1'b1) ? 24'd16777215 : 24'd0);

assign select_ln116_2_fu_3344_p3 = ((icmp_ln116_3_reg_4451[0:0] == 1'b1) ? trunc_ln116_3_fu_3322_p1 : select_ln116_21_fu_3336_p3);

assign select_ln116_3_fu_3132_p3 = ((icmp_ln116_4_reg_4366[0:0] == 1'b1) ? shl_ln116_fu_3127_p2 : 24'd0);

assign select_ln116_4_fu_2946_p3 = ((tmp_58_reg_4296[0:0] == 1'b1) ? sub_ln116_3_fu_2940_p2 : zext_ln116_5_fu_2936_p1);

assign select_ln116_5_fu_2982_p3 = ((icmp_ln116_6_fu_2964_p2[0:0] == 1'b1) ? add_ln116_2_fu_2970_p2 : sub_ln116_5_fu_2976_p2);

assign select_ln116_6_fu_3395_p3 = ((icmp_ln116_8_reg_4471[0:0] == 1'b1) ? trunc_ln116_10_fu_3373_p1 : select_ln116_22_fu_3387_p3);

assign select_ln116_7_fu_3204_p3 = ((icmp_ln116_9_reg_4406[0:0] == 1'b1) ? shl_ln116_1_fu_3199_p2 : 24'd0);

assign select_ln116_8_fu_3036_p3 = ((tmp_65_reg_4316[0:0] == 1'b1) ? sub_ln116_6_fu_3030_p2 : zext_ln116_9_fu_3026_p1);

assign select_ln116_9_fu_3072_p3 = ((icmp_ln116_11_fu_3054_p2[0:0] == 1'b1) ? add_ln116_4_fu_3060_p2 : sub_ln116_8_fu_3066_p2);

assign select_ln116_fu_2856_p3 = ((tmp_51_reg_4276[0:0] == 1'b1) ? sub_ln116_fu_2850_p2 : zext_ln116_1_fu_2846_p1);

assign select_ln328_1_fu_624_p3 = ((icmp_ln191_reg_3625_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_0669_11280_fu_592_p3 : empty_40_fu_222);

assign select_ln328_2_fu_631_p3 = ((icmp_ln191_reg_3625_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_0669_21281_fu_610_p3 : empty_41_fu_226);

assign select_ln328_fu_617_p3 = ((icmp_ln191_reg_3625_pp0_iter2_reg[0:0] == 1'b1) ? p_0_0_06691279_fu_574_p3 : empty_fu_218);

assign select_ln349_fu_1402_p3 = ((icmp_ln336_reg_3651_pp0_iter3_reg[0:0] == 1'b1) ? select_ln328_1_reg_3661 : p_load133_reg_3764);

assign select_ln61_10_fu_938_p3 = ((tmp_27_fu_930_p3[0:0] == 1'b1) ? sub_ln61_10_fu_924_p2 : sub_ln61_22_fu_918_p2);

assign select_ln61_11_fu_984_p3 = ((tmp_34_fu_976_p3[0:0] == 1'b1) ? sub_ln61_11_fu_970_p2 : sub_ln61_23_fu_964_p2);

assign select_ln61_1_fu_734_p3 = ((tmp_8_fu_726_p3[0:0] == 1'b1) ? sub_ln61_1_fu_720_p2 : sub_ln61_13_fu_714_p2);

assign select_ln61_2_fu_794_p3 = ((tmp_11_fu_786_p3[0:0] == 1'b1) ? sub_ln61_2_fu_780_p2 : sub_ln61_14_fu_774_p2);

assign select_ln61_3_fu_1114_p3 = ((tmp_13_fu_1106_p3[0:0] == 1'b1) ? sub_ln61_3_fu_1100_p2 : sub_ln61_15_fu_1095_p2);

assign select_ln61_4_fu_1159_p3 = ((tmp_15_fu_1151_p3[0:0] == 1'b1) ? sub_ln61_4_fu_1145_p2 : sub_ln61_16_fu_1140_p2);

assign select_ln61_5_fu_1204_p3 = ((tmp_17_fu_1196_p3[0:0] == 1'b1) ? sub_ln61_5_fu_1190_p2 : sub_ln61_17_fu_1185_p2);

assign select_ln61_6_fu_1272_p3 = ((tmp_19_fu_1264_p3[0:0] == 1'b1) ? sub_ln61_6_fu_1258_p2 : sub_ln61_18_fu_1253_p2);

assign select_ln61_7_fu_1306_p3 = ((tmp_21_fu_1298_p3[0:0] == 1'b1) ? sub_ln61_7_fu_1292_p2 : sub_ln61_19_fu_1287_p2);

assign select_ln61_8_fu_1340_p3 = ((tmp_23_fu_1332_p3[0:0] == 1'b1) ? sub_ln61_8_fu_1326_p2 : sub_ln61_20_fu_1321_p2);

assign select_ln61_9_fu_892_p3 = ((tmp_25_fu_884_p3[0:0] == 1'b1) ? sub_ln61_9_fu_878_p2 : sub_ln61_21_fu_872_p2);

assign select_ln61_fu_674_p3 = ((tmp_7_fu_666_p3[0:0] == 1'b1) ? sub_ln61_fu_660_p2 : sub_ln61_12_fu_654_p2);

assign sext_ln116_1_fu_3178_p1 = select_ln116_5_reg_4388;

assign sext_ln116_1cast_fu_3195_p1 = sext_ln116_1_fu_3178_p1[23:0];

assign sext_ln116_2_fu_3250_p1 = select_ln116_9_reg_4428;

assign sext_ln116_2cast_fu_3267_p1 = sext_ln116_2_fu_3250_p1[23:0];

assign sext_ln116_fu_3106_p1 = select_ln116_1_reg_4348;

assign sext_ln116cast_fu_3123_p1 = sext_ln116_fu_3106_p1[23:0];

assign sext_ln92_1_fu_1222_p1 = add_ln93_1_fu_1216_p2;

assign sext_ln92_2_fu_1358_p1 = add_ln93_2_fu_1352_p2;

assign sext_ln92_3_fu_1002_p1 = add_ln93_3_fu_996_p2;

assign sext_ln92_4_fu_816_p1 = select_ln61_2_fu_794_p3;

assign sext_ln92_5_fu_1226_p1 = select_ln61_5_fu_1204_p3;

assign sext_ln92_6_fu_1362_p1 = select_ln61_8_fu_1340_p3;

assign sext_ln92_7_fu_1006_p1 = select_ln61_11_fu_984_p3;

assign sext_ln92_fu_812_p1 = add_ln93_fu_806_p2;

assign sext_ln93_1_fu_802_p1 = select_ln61_2_fu_794_p3;

assign sext_ln93_2_fu_1122_p1 = $signed(select_ln61_3_fu_1114_p3);

assign sext_ln93_3_fu_1212_p1 = select_ln61_5_fu_1204_p3;

assign sext_ln93_4_fu_1280_p1 = $signed(select_ln61_6_fu_1272_p3);

assign sext_ln93_5_fu_1348_p1 = select_ln61_8_fu_1340_p3;

assign sext_ln93_6_fu_900_p1 = $signed(select_ln61_9_fu_892_p3);

assign sext_ln93_7_fu_992_p1 = select_ln61_11_fu_984_p3;

assign sext_ln93_fu_682_p1 = $signed(select_ln61_fu_674_p3);

assign sext_ln94_1_fu_1167_p1 = $signed(select_ln61_4_fu_1159_p3);

assign sext_ln94_2_fu_1314_p1 = $signed(select_ln61_7_fu_1306_p3);

assign sext_ln94_3_fu_946_p1 = $signed(select_ln61_10_fu_938_p3);

assign sext_ln94_fu_742_p1 = $signed(select_ln61_1_fu_734_p3);

assign shl_ln107_1_fu_1840_p3 = {{tmp_38_reg_3754_pp0_iter8_reg}, {16'd0}};

assign shl_ln107_2_fu_1877_p3 = {{tmp_45_reg_3759_pp0_iter8_reg}, {16'd0}};

assign shl_ln107_fu_1730_p2 = p_load132_reg_3656_pp0_iter8_reg << 24'd16;

assign shl_ln114_fu_1712_p2 = zext_ln114_fu_1685_p1 << zext_ln114_2_fu_1708_p1;

assign shl_ln115_1_fu_2344_p2 = zext_ln115_4_fu_2311_p1 << zext_ln115_6_fu_2340_p1;

assign shl_ln115_2_fu_2476_p2 = zext_ln115_8_fu_2443_p1 << zext_ln115_10_fu_2472_p1;

assign shl_ln115_fu_2212_p2 = zext_ln115_fu_2179_p1 << zext_ln115_2_fu_2208_p1;

assign shl_ln116_1_fu_3199_p2 = trunc_ln116_8_reg_4400 << sext_ln116_1cast_fu_3195_p1;

assign shl_ln116_2_fu_3271_p2 = trunc_ln116_14_reg_4440 << sext_ln116_2cast_fu_3267_p1;

assign shl_ln116_fu_3127_p2 = trunc_ln116_2_reg_4360 << sext_ln116cast_fu_3123_p1;

assign shl_ln1_fu_1544_p3 = {{color_weights_3_reg_3832_pp0_iter6_reg}, {1'd0}};

assign sub_ln114_1_fu_1703_p2 = (32'd25 - sub_ln114_reg_3928);

assign sub_ln114_2_fu_1924_p2 = (8'd16 - trunc_ln114_1_reg_3940_pp0_iter9_reg);

assign sub_ln114_3_fu_1652_p2 = ($signed(5'd25) - $signed(trunc_ln114_reg_3935));

assign sub_ln114_fu_1593_p2 = (32'd32 - tmp_29_fu_1585_p3);

assign sub_ln115_10_fu_2035_p2 = ($signed(5'd25) - $signed(trunc_ln115_2_fu_2031_p1));

assign sub_ln115_11_fu_2076_p2 = ($signed(5'd25) - $signed(trunc_ln115_4_fu_2072_p1));

assign sub_ln115_1_fu_2203_p2 = (32'd25 - sub_ln115_reg_4063);

assign sub_ln115_2_fu_2025_p2 = (32'd32 - tmp_40_fu_2017_p3);

assign sub_ln115_3_fu_2335_p2 = (32'd25 - sub_ln115_2_reg_4086);

assign sub_ln115_4_fu_2066_p2 = (32'd32 - tmp_47_fu_2058_p3);

assign sub_ln115_5_fu_2467_p2 = (32'd25 - sub_ln115_4_reg_4109);

assign sub_ln115_6_fu_2588_p2 = (8'd16 - trunc_ln115_1_reg_4075_pp0_iter25_reg);

assign sub_ln115_7_fu_2644_p2 = (8'd16 - trunc_ln115_3_reg_4098_pp0_iter25_reg);

assign sub_ln115_8_fu_2700_p2 = (8'd16 - trunc_ln115_5_reg_4121_pp0_iter25_reg);

assign sub_ln115_9_fu_1994_p2 = ($signed(5'd25) - $signed(trunc_ln115_fu_1990_p1));

assign sub_ln115_fu_1984_p2 = (32'd32 - tmp_33_fu_1976_p3);

assign sub_ln116_1_fu_2868_p2 = (12'd1075 - zext_ln116_fu_2836_p1);

assign sub_ln116_2_fu_2886_p2 = (12'd16 - sub_ln116_1_fu_2868_p2);

assign sub_ln116_3_fu_2940_p2 = (54'd0 - zext_ln116_5_fu_2936_p1);

assign sub_ln116_4_fu_2958_p2 = (12'd1075 - zext_ln116_4_fu_2926_p1);

assign sub_ln116_5_fu_2976_p2 = (12'd16 - sub_ln116_4_fu_2958_p2);

assign sub_ln116_6_fu_3030_p2 = (54'd0 - zext_ln116_9_fu_3026_p1);

assign sub_ln116_7_fu_3048_p2 = (12'd1075 - zext_ln116_8_fu_3016_p1);

assign sub_ln116_8_fu_3066_p2 = (12'd16 - sub_ln116_7_fu_3048_p2);

assign sub_ln116_fu_2850_p2 = (54'd0 - zext_ln116_1_fu_2846_p1);

assign sub_ln61_10_fu_924_p2 = (9'd0 - sub_ln61_22_fu_918_p2);

assign sub_ln61_11_fu_970_p2 = (9'd0 - sub_ln61_23_fu_964_p2);

assign sub_ln61_12_fu_654_p2 = (zext_ln92_fu_646_p1 - zext_ln92_1_fu_650_p1);

assign sub_ln61_13_fu_714_p2 = (zext_ln93_fu_706_p1 - zext_ln93_1_fu_710_p1);

assign sub_ln61_14_fu_774_p2 = (zext_ln94_fu_766_p1 - zext_ln94_1_fu_770_p1);

assign sub_ln61_15_fu_1095_p2 = (zext_ln92_2_fu_1091_p1 - zext_ln92_1_reg_3671);

assign sub_ln61_16_fu_1140_p2 = (zext_ln93_2_fu_1136_p1 - zext_ln93_1_reg_3682);

assign sub_ln61_17_fu_1185_p2 = (zext_ln94_2_fu_1181_p1 - zext_ln94_1_reg_3693);

assign sub_ln61_18_fu_1253_p2 = (zext_ln92_4_fu_1250_p1 - zext_ln92_1_reg_3671);

assign sub_ln61_19_fu_1287_p2 = (zext_ln93_3_fu_1284_p1 - zext_ln93_1_reg_3682);

assign sub_ln61_1_fu_720_p2 = (9'd0 - sub_ln61_13_fu_714_p2);

assign sub_ln61_20_fu_1321_p2 = (zext_ln94_3_fu_1318_p1 - zext_ln94_1_reg_3693);

assign sub_ln61_21_fu_872_p2 = (zext_ln92_5_fu_868_p1 - zext_ln92_1_fu_650_p1);

assign sub_ln61_22_fu_918_p2 = (zext_ln93_4_fu_914_p1 - zext_ln93_1_fu_710_p1);

assign sub_ln61_23_fu_964_p2 = (zext_ln94_4_fu_960_p1 - zext_ln94_1_fu_770_p1);

assign sub_ln61_2_fu_780_p2 = (9'd0 - sub_ln61_14_fu_774_p2);

assign sub_ln61_3_fu_1100_p2 = (9'd0 - sub_ln61_15_fu_1095_p2);

assign sub_ln61_4_fu_1145_p2 = (9'd0 - sub_ln61_16_fu_1140_p2);

assign sub_ln61_5_fu_1190_p2 = (9'd0 - sub_ln61_17_fu_1185_p2);

assign sub_ln61_6_fu_1258_p2 = (9'd0 - sub_ln61_18_fu_1253_p2);

assign sub_ln61_7_fu_1292_p2 = (9'd0 - sub_ln61_19_fu_1287_p2);

assign sub_ln61_8_fu_1326_p2 = (9'd0 - sub_ln61_20_fu_1321_p2);

assign sub_ln61_9_fu_878_p2 = (9'd0 - sub_ln61_21_fu_872_p2);

assign sub_ln61_fu_660_p2 = (9'd0 - sub_ln61_12_fu_654_p2);

assign tmp22_fu_1536_p3 = {{tmp336_fu_1530_p2}, {1'd0}};

assign tmp23_fu_1751_p3 = {{tmp35_fu_1745_p2}, {1'd0}};

assign tmp336_fu_1530_p2 = (p_cast_fu_1527_p1 + color_weights_2_cast41_fu_1524_p1);

assign tmp35_fu_1745_p2 = (tmp41_cast_fu_1742_p1 + tmp_cast_fu_1739_p1);

assign tmp38_cast_fu_1851_p1 = grp_fu_3504_p3;

assign tmp39_fu_1863_p3 = {{tmp44_fu_1857_p2}, {1'd0}};

assign tmp41_cast_fu_1742_p1 = grp_fu_3495_p3;

assign tmp43_cast_fu_1854_p1 = grp_fu_3513_p3;

assign tmp44_fu_1857_p2 = (tmp43_cast_fu_1854_p1 + tmp38_cast_fu_1851_p1);

assign tmp46_cast_fu_1891_p1 = grp_fu_3531_p3;

assign tmp47_fu_1900_p3 = {{tmp54_fu_1894_p2}, {1'd0}};

assign tmp48_cast_fu_1888_p1 = grp_fu_3522_p3;

assign tmp54_fu_1894_p2 = (tmp46_cast_fu_1891_p1 + tmp48_cast_fu_1888_p1);

assign tmp_10_fu_756_p4 = {{empty_40_fu_222[23:16]}};

assign tmp_11_fu_786_p3 = sub_ln61_14_fu_774_p2[32'd8];

assign tmp_13_fu_1106_p3 = sub_ln61_15_fu_1095_p2[32'd8];

assign tmp_14_fu_1126_p4 = {{empty_42_fu_230[15:8]}};

assign tmp_15_fu_1151_p3 = sub_ln61_16_fu_1140_p2[32'd8];

assign tmp_16_fu_1171_p4 = {{empty_42_fu_230[23:16]}};

assign tmp_17_fu_1196_p3 = sub_ln61_17_fu_1185_p2[32'd8];

assign tmp_19_fu_1264_p3 = sub_ln61_18_fu_1253_p2[32'd8];

assign tmp_21_fu_1298_p3 = sub_ln61_19_fu_1287_p2[32'd8];

assign tmp_23_fu_1332_p3 = sub_ln61_20_fu_1321_p2[32'd8];

assign tmp_25_fu_884_p3 = sub_ln61_21_fu_872_p2[32'd8];

assign tmp_26_fu_904_p4 = {{empty_41_fu_226[15:8]}};

assign tmp_27_fu_930_p3 = sub_ln61_22_fu_918_p2[32'd8];

integer ap_tvar_int_0;

always @ (zext_ln64_fu_1571_p1) begin
    for (ap_tvar_int_0 = 32 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 31 - 0) begin
            tmp_28_fu_1575_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_28_fu_1575_p4[ap_tvar_int_0] = zext_ln64_fu_1571_p1[31 - ap_tvar_int_0];
        end
    end
end


always @ (tmp_28_fu_1575_p4) begin
    if (tmp_28_fu_1575_p4[0] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd0;
    end else if (tmp_28_fu_1575_p4[1] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd1;
    end else if (tmp_28_fu_1575_p4[2] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd2;
    end else if (tmp_28_fu_1575_p4[3] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd3;
    end else if (tmp_28_fu_1575_p4[4] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd4;
    end else if (tmp_28_fu_1575_p4[5] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd5;
    end else if (tmp_28_fu_1575_p4[6] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd6;
    end else if (tmp_28_fu_1575_p4[7] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd7;
    end else if (tmp_28_fu_1575_p4[8] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd8;
    end else if (tmp_28_fu_1575_p4[9] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd9;
    end else if (tmp_28_fu_1575_p4[10] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd10;
    end else if (tmp_28_fu_1575_p4[11] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd11;
    end else if (tmp_28_fu_1575_p4[12] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd12;
    end else if (tmp_28_fu_1575_p4[13] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd13;
    end else if (tmp_28_fu_1575_p4[14] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd14;
    end else if (tmp_28_fu_1575_p4[15] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd15;
    end else if (tmp_28_fu_1575_p4[16] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd16;
    end else if (tmp_28_fu_1575_p4[17] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd17;
    end else if (tmp_28_fu_1575_p4[18] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd18;
    end else if (tmp_28_fu_1575_p4[19] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd19;
    end else if (tmp_28_fu_1575_p4[20] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd20;
    end else if (tmp_28_fu_1575_p4[21] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd21;
    end else if (tmp_28_fu_1575_p4[22] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd22;
    end else if (tmp_28_fu_1575_p4[23] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd23;
    end else if (tmp_28_fu_1575_p4[24] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd24;
    end else if (tmp_28_fu_1575_p4[25] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd25;
    end else if (tmp_28_fu_1575_p4[26] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd26;
    end else if (tmp_28_fu_1575_p4[27] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd27;
    end else if (tmp_28_fu_1575_p4[28] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd28;
    end else if (tmp_28_fu_1575_p4[29] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd29;
    end else if (tmp_28_fu_1575_p4[30] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd30;
    end else if (tmp_28_fu_1575_p4[31] == 1'b1) begin
        tmp_29_fu_1585_p3 = 32'd31;
    end else begin
        tmp_29_fu_1585_p3 = 32'd32;
    end
end

assign tmp_30_fu_950_p4 = {{empty_41_fu_226[23:16]}};

assign tmp_31_fu_1935_p3 = {{1'd0}, {add_ln114_3_fu_1929_p2}};

integer ap_tvar_int_1;

always @ (zext_ln65_1_fu_1963_p1) begin
    for (ap_tvar_int_1 = 32 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 31 - 0) begin
            tmp_32_fu_1966_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_32_fu_1966_p4[ap_tvar_int_1] = zext_ln65_1_fu_1963_p1[31 - ap_tvar_int_1];
        end
    end
end


always @ (tmp_32_fu_1966_p4) begin
    if (tmp_32_fu_1966_p4[0] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd0;
    end else if (tmp_32_fu_1966_p4[1] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd1;
    end else if (tmp_32_fu_1966_p4[2] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd2;
    end else if (tmp_32_fu_1966_p4[3] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd3;
    end else if (tmp_32_fu_1966_p4[4] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd4;
    end else if (tmp_32_fu_1966_p4[5] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd5;
    end else if (tmp_32_fu_1966_p4[6] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd6;
    end else if (tmp_32_fu_1966_p4[7] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd7;
    end else if (tmp_32_fu_1966_p4[8] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd8;
    end else if (tmp_32_fu_1966_p4[9] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd9;
    end else if (tmp_32_fu_1966_p4[10] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd10;
    end else if (tmp_32_fu_1966_p4[11] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd11;
    end else if (tmp_32_fu_1966_p4[12] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd12;
    end else if (tmp_32_fu_1966_p4[13] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd13;
    end else if (tmp_32_fu_1966_p4[14] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd14;
    end else if (tmp_32_fu_1966_p4[15] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd15;
    end else if (tmp_32_fu_1966_p4[16] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd16;
    end else if (tmp_32_fu_1966_p4[17] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd17;
    end else if (tmp_32_fu_1966_p4[18] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd18;
    end else if (tmp_32_fu_1966_p4[19] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd19;
    end else if (tmp_32_fu_1966_p4[20] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd20;
    end else if (tmp_32_fu_1966_p4[21] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd21;
    end else if (tmp_32_fu_1966_p4[22] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd22;
    end else if (tmp_32_fu_1966_p4[23] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd23;
    end else if (tmp_32_fu_1966_p4[24] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd24;
    end else if (tmp_32_fu_1966_p4[25] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd25;
    end else if (tmp_32_fu_1966_p4[26] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd26;
    end else if (tmp_32_fu_1966_p4[27] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd27;
    end else if (tmp_32_fu_1966_p4[28] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd28;
    end else if (tmp_32_fu_1966_p4[29] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd29;
    end else if (tmp_32_fu_1966_p4[30] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd30;
    end else if (tmp_32_fu_1966_p4[31] == 1'b1) begin
        tmp_33_fu_1976_p3 = 32'd31;
    end else begin
        tmp_33_fu_1976_p3 = 32'd32;
    end
end

assign tmp_34_fu_976_p3 = sub_ln61_23_fu_964_p2[32'd8];

assign tmp_35_fu_2599_p3 = {{1'd0}, {add_ln115_3_fu_2593_p2}};

assign tmp_37_fu_1636_p4 = {{add_ln114_fu_1631_p2[31:1]}};

integer ap_tvar_int_2;

always @ (zext_ln65_3_fu_2004_p1) begin
    for (ap_tvar_int_2 = 32 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 31 - 0) begin
            tmp_39_fu_2007_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            tmp_39_fu_2007_p4[ap_tvar_int_2] = zext_ln65_3_fu_2004_p1[31 - ap_tvar_int_2];
        end
    end
end

assign tmp_3_fu_686_p4 = {{empty_fu_218[15:8]}};


always @ (tmp_39_fu_2007_p4) begin
    if (tmp_39_fu_2007_p4[0] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd0;
    end else if (tmp_39_fu_2007_p4[1] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd1;
    end else if (tmp_39_fu_2007_p4[2] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd2;
    end else if (tmp_39_fu_2007_p4[3] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd3;
    end else if (tmp_39_fu_2007_p4[4] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd4;
    end else if (tmp_39_fu_2007_p4[5] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd5;
    end else if (tmp_39_fu_2007_p4[6] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd6;
    end else if (tmp_39_fu_2007_p4[7] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd7;
    end else if (tmp_39_fu_2007_p4[8] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd8;
    end else if (tmp_39_fu_2007_p4[9] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd9;
    end else if (tmp_39_fu_2007_p4[10] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd10;
    end else if (tmp_39_fu_2007_p4[11] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd11;
    end else if (tmp_39_fu_2007_p4[12] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd12;
    end else if (tmp_39_fu_2007_p4[13] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd13;
    end else if (tmp_39_fu_2007_p4[14] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd14;
    end else if (tmp_39_fu_2007_p4[15] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd15;
    end else if (tmp_39_fu_2007_p4[16] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd16;
    end else if (tmp_39_fu_2007_p4[17] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd17;
    end else if (tmp_39_fu_2007_p4[18] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd18;
    end else if (tmp_39_fu_2007_p4[19] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd19;
    end else if (tmp_39_fu_2007_p4[20] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd20;
    end else if (tmp_39_fu_2007_p4[21] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd21;
    end else if (tmp_39_fu_2007_p4[22] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd22;
    end else if (tmp_39_fu_2007_p4[23] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd23;
    end else if (tmp_39_fu_2007_p4[24] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd24;
    end else if (tmp_39_fu_2007_p4[25] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd25;
    end else if (tmp_39_fu_2007_p4[26] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd26;
    end else if (tmp_39_fu_2007_p4[27] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd27;
    end else if (tmp_39_fu_2007_p4[28] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd28;
    end else if (tmp_39_fu_2007_p4[29] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd29;
    end else if (tmp_39_fu_2007_p4[30] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd30;
    end else if (tmp_39_fu_2007_p4[31] == 1'b1) begin
        tmp_40_fu_2017_p3 = 32'd31;
    end else begin
        tmp_40_fu_2017_p3 = 32'd32;
    end
end

assign tmp_41_fu_1769_p3 = add_ln114_reg_3965[32'd31];

assign tmp_42_fu_2655_p3 = {{1'd0}, {add_ln115_7_fu_2649_p2}};

assign tmp_44_fu_2096_p4 = {{add_ln115_fu_2091_p2[31:1]}};

integer ap_tvar_int_3;

always @ (zext_ln65_5_fu_2045_p1) begin
    for (ap_tvar_int_3 = 32 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 31 - 0) begin
            tmp_46_fu_2048_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            tmp_46_fu_2048_p4[ap_tvar_int_3] = zext_ln65_5_fu_2045_p1[31 - ap_tvar_int_3];
        end
    end
end


always @ (tmp_46_fu_2048_p4) begin
    if (tmp_46_fu_2048_p4[0] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd0;
    end else if (tmp_46_fu_2048_p4[1] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd1;
    end else if (tmp_46_fu_2048_p4[2] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd2;
    end else if (tmp_46_fu_2048_p4[3] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd3;
    end else if (tmp_46_fu_2048_p4[4] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd4;
    end else if (tmp_46_fu_2048_p4[5] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd5;
    end else if (tmp_46_fu_2048_p4[6] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd6;
    end else if (tmp_46_fu_2048_p4[7] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd7;
    end else if (tmp_46_fu_2048_p4[8] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd8;
    end else if (tmp_46_fu_2048_p4[9] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd9;
    end else if (tmp_46_fu_2048_p4[10] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd10;
    end else if (tmp_46_fu_2048_p4[11] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd11;
    end else if (tmp_46_fu_2048_p4[12] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd12;
    end else if (tmp_46_fu_2048_p4[13] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd13;
    end else if (tmp_46_fu_2048_p4[14] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd14;
    end else if (tmp_46_fu_2048_p4[15] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd15;
    end else if (tmp_46_fu_2048_p4[16] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd16;
    end else if (tmp_46_fu_2048_p4[17] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd17;
    end else if (tmp_46_fu_2048_p4[18] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd18;
    end else if (tmp_46_fu_2048_p4[19] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd19;
    end else if (tmp_46_fu_2048_p4[20] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd20;
    end else if (tmp_46_fu_2048_p4[21] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd21;
    end else if (tmp_46_fu_2048_p4[22] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd22;
    end else if (tmp_46_fu_2048_p4[23] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd23;
    end else if (tmp_46_fu_2048_p4[24] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd24;
    end else if (tmp_46_fu_2048_p4[25] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd25;
    end else if (tmp_46_fu_2048_p4[26] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd26;
    end else if (tmp_46_fu_2048_p4[27] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd27;
    end else if (tmp_46_fu_2048_p4[28] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd28;
    end else if (tmp_46_fu_2048_p4[29] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd29;
    end else if (tmp_46_fu_2048_p4[30] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd30;
    end else if (tmp_46_fu_2048_p4[31] == 1'b1) begin
        tmp_47_fu_2058_p3 = 32'd31;
    end else begin
        tmp_47_fu_2058_p3 = 32'd32;
    end
end

assign tmp_48_fu_2138_p3 = add_ln115_fu_2091_p2[32'd31];

assign tmp_49_fu_2711_p3 = {{1'd0}, {add_ln115_11_fu_2705_p2}};

assign tmp_4_fu_696_p4 = {{empty_40_fu_222[15:8]}};

assign tmp_53_fu_3328_p3 = bitcast_ln724_fu_3325_p1[32'd31];

assign tmp_54_fu_2910_p4 = {{select_ln116_1_fu_2892_p3[11:5]}};

assign tmp_55_fu_2228_p4 = {{add_ln115_4_fu_2223_p2[31:1]}};

assign tmp_56_fu_2270_p3 = add_ln115_4_fu_2223_p2[32'd31];

assign tmp_60_fu_3379_p3 = bitcast_ln724_4_fu_3376_p1[32'd31];

assign tmp_61_fu_3000_p4 = {{select_ln116_5_fu_2982_p3[11:5]}};

assign tmp_62_fu_2360_p4 = {{add_ln115_8_fu_2355_p2[31:1]}};

assign tmp_63_fu_2402_p3 = add_ln115_8_fu_2355_p2[32'd31];

assign tmp_67_fu_3430_p3 = bitcast_ln724_5_fu_3427_p1[32'd31];

assign tmp_68_fu_3090_p4 = {{select_ln116_9_fu_3072_p3[11:5]}};

assign tmp_7_fu_666_p3 = sub_ln61_12_fu_654_p2[32'd8];

assign tmp_8_fu_726_p3 = sub_ln61_13_fu_714_p2[32'd8];

assign tmp_9_fu_746_p4 = {{empty_fu_218[23:16]}};

assign tmp_cast_fu_1739_p1 = grp_fu_3486_p3;

assign trunc_ln114_1_fu_1603_p1 = tmp_29_fu_1585_p3[7:0];

assign trunc_ln114_fu_1599_p1 = sub_ln114_fu_1593_p2[4:0];

assign trunc_ln115_1_fu_2000_p1 = tmp_33_fu_1976_p3[7:0];

assign trunc_ln115_2_fu_2031_p1 = sub_ln115_2_fu_2025_p2[4:0];

assign trunc_ln115_3_fu_2041_p1 = tmp_40_fu_2017_p3[7:0];

assign trunc_ln115_4_fu_2072_p1 = sub_ln115_4_fu_2066_p2[4:0];

assign trunc_ln115_5_fu_2082_p1 = tmp_47_fu_2058_p3[7:0];

assign trunc_ln115_fu_1990_p1 = sub_ln115_fu_1984_p2[4:0];

assign trunc_ln116_10_fu_3373_p1 = ashr_ln116_1_reg_4476[23:0];

assign trunc_ln116_12_fu_2810_p1 = bitcast_ln724_3_fu_2806_p1[62:0];

assign trunc_ln116_13_fu_2832_p1 = bitcast_ln724_3_fu_2806_p1[51:0];

assign trunc_ln116_14_fu_3086_p1 = select_ln116_8_fu_3036_p3[23:0];

assign trunc_ln116_15_fu_3424_p1 = ashr_ln116_2_reg_4496[23:0];

assign trunc_ln116_1_fu_2772_p1 = bitcast_ln724_1_fu_2746_p1[51:0];

assign trunc_ln116_2_fu_2906_p1 = select_ln116_fu_2856_p3[23:0];

assign trunc_ln116_3_fu_3322_p1 = ashr_ln116_reg_4456[23:0];

assign trunc_ln116_4_fu_3363_p4 = {{add_ln116_1_fu_3357_p2[23:16]}};

assign trunc_ln116_6_fu_2780_p1 = bitcast_ln724_2_fu_2776_p1[62:0];

assign trunc_ln116_7_fu_2802_p1 = bitcast_ln724_2_fu_2776_p1[51:0];

assign trunc_ln116_8_fu_2996_p1 = select_ln116_4_fu_2946_p3[23:0];

assign trunc_ln116_9_fu_3414_p4 = {{add_ln116_3_fu_3408_p2[23:16]}};

assign trunc_ln116_fu_2750_p1 = bitcast_ln724_1_fu_2746_p1[62:0];

assign trunc_ln116_s_fu_3465_p4 = {{add_ln116_5_fu_3459_p2[23:16]}};

assign trunc_ln92_1_fu_642_p1 = empty_40_fu_222[7:0];

assign trunc_ln92_2_fu_1087_p1 = empty_42_fu_230[7:0];

assign trunc_ln92_3_fu_840_p1 = select_ln328_1_fu_624_p3[7:0];

assign trunc_ln92_4_fu_864_p1 = empty_41_fu_226[7:0];

assign trunc_ln92_fu_638_p1 = empty_fu_218[7:0];

assign weight_sum_fu_1565_p2 = (zext_ln108_1_fu_1561_p1 + tmp22_fu_1536_p3);

assign xor_ln114_fu_1776_p2 = (tmp_41_fu_1769_p3 ^ 1'd1);

assign xor_ln115_1_fu_2278_p2 = (tmp_56_fu_2270_p3 ^ 1'd1);

assign xor_ln115_2_fu_2410_p2 = (tmp_63_fu_2402_p3 ^ 1'd1);

assign xor_ln115_fu_2146_p2 = (tmp_48_fu_2138_p3 ^ 1'd1);

assign xor_ln116_1_fu_3167_p2 = (or_ln116_fu_3163_p2 ^ 1'd1);

assign xor_ln116_2_fu_3218_p2 = (icmp_ln116_5_reg_4376 ^ 1'd1);

assign xor_ln116_3_fu_3239_p2 = (or_ln116_1_fu_3235_p2 ^ 1'd1);

assign xor_ln116_4_fu_3290_p2 = (icmp_ln116_10_reg_4416 ^ 1'd1);

assign xor_ln116_5_fu_3311_p2 = (or_ln116_2_fu_3307_p2 ^ 1'd1);

assign xor_ln116_fu_3146_p2 = (icmp_ln116_reg_4336 ^ 1'd1);

assign zext_ln106_1_fu_1423_p1 = diffpx_5_fu_1417_p3;

assign zext_ln106_2_fu_1439_p1 = diffpx_8_fu_1433_p3;

assign zext_ln106_3_fu_1397_p1 = diffpx_11_fu_1391_p3;

assign zext_ln106_fu_1082_p1 = diffpx_2_fu_1076_p3;

assign zext_ln107_2_fu_1512_p1 = color_weights_1_reg_3850;

assign zext_ln107_5_fu_1450_p1 = exp_lut_sigma_color_1_r_q0;

assign zext_ln107_7_fu_1470_p1 = color_weights_3_reg_3832;

assign zext_ln107_fu_1444_p1 = color_weights_reg_3816;

assign zext_ln108_1_fu_1561_p1 = add_ln108_fu_1555_p2;

assign zext_ln108_fu_1551_p1 = shl_ln1_fu_1544_p3;

assign zext_ln114_1_fu_1693_p1 = add_ln114_1_fu_1688_p2;

assign zext_ln114_2_fu_1708_p1 = sub_ln114_1_fu_1703_p2;

assign zext_ln114_3_fu_1812_p1 = or_ln_fu_1793_p3;

assign zext_ln114_4_fu_1914_p1 = lshr_ln114_1_reg_4023;

assign zext_ln114_5_fu_1657_p1 = sub_ln114_3_fu_1652_p2;

assign zext_ln114_fu_1685_p1 = weight_sum_reg_3917;

assign zext_ln115_10_fu_2472_p1 = sub_ln115_5_fu_2467_p2;

assign zext_ln115_11_fu_2551_p1 = or_ln115_2_reg_4181;

assign zext_ln115_12_fu_2578_p1 = lshr_ln115_1_reg_4201;

assign zext_ln115_13_fu_2634_p1 = lshr_ln115_3_reg_4211;

assign zext_ln115_14_fu_2690_p1 = lshr_ln115_5_reg_4221;

assign zext_ln115_15_fu_2112_p1 = sub_ln115_9_reg_4070;

assign zext_ln115_16_fu_2244_p1 = sub_ln115_10_reg_4093;

assign zext_ln115_17_fu_2376_p1 = sub_ln115_11_reg_4116;

assign zext_ln115_1_fu_2193_p1 = add_ln115_1_fu_2188_p2;

assign zext_ln115_2_fu_2208_p1 = sub_ln115_1_fu_2203_p2;

assign zext_ln115_3_fu_2487_p1 = or_ln1_reg_4131;

assign zext_ln115_4_fu_2311_p1 = px_sum_3_reg_4033_pp0_iter23_reg;

assign zext_ln115_5_fu_2325_p1 = add_ln115_5_fu_2320_p2;

assign zext_ln115_6_fu_2340_p1 = sub_ln115_3_fu_2335_p2;

assign zext_ln115_7_fu_2519_p1 = or_ln115_1_reg_4156;

assign zext_ln115_8_fu_2443_p1 = px_sum_5_reg_4040_pp0_iter23_reg;

assign zext_ln115_9_fu_2457_p1 = add_ln115_9_fu_2452_p2;

assign zext_ln115_fu_2179_p1 = px_sum_1_reg_4016_pp0_iter23_reg;

assign zext_ln116_10_fu_3258_p1 = $unsigned(sext_ln116_2_fu_3250_p1);

assign zext_ln116_1_cast_fu_2839_p3 = {{1'd1}, {trunc_ln116_1_reg_4286}};

assign zext_ln116_1_fu_2846_p1 = zext_ln116_1_cast_fu_2839_p3;

assign zext_ln116_2_fu_3114_p1 = $unsigned(sext_ln116_fu_3106_p1);

assign zext_ln116_4_fu_2926_p1 = tmp_59_reg_4301;

assign zext_ln116_5_cast_fu_2929_p3 = {{1'd1}, {trunc_ln116_7_reg_4306}};

assign zext_ln116_5_fu_2936_p1 = zext_ln116_5_cast_fu_2929_p3;

assign zext_ln116_6_fu_3186_p1 = $unsigned(sext_ln116_1_fu_3178_p1);

assign zext_ln116_8_fu_3016_p1 = tmp_66_reg_4321;

assign zext_ln116_9_cast_fu_3019_p3 = {{1'd1}, {trunc_ln116_13_reg_4326}};

assign zext_ln116_9_fu_3026_p1 = zext_ln116_9_cast_fu_3019_p3;

assign zext_ln116_fu_2836_p1 = tmp_52_reg_4281;

assign zext_ln185_fu_484_p1 = ap_sig_allocacmp_col;

assign zext_ln192_fu_517_p1 = col_reg_3614;

assign zext_ln64_fu_1571_p1 = weight_sum_fu_1565_p2;

assign zext_ln65_1_fu_1963_p1 = px_sum_1_reg_4016_pp0_iter22_reg;

assign zext_ln65_3_fu_2004_p1 = px_sum_3_reg_4033_pp0_iter22_reg;

assign zext_ln65_5_fu_2045_p1 = px_sum_5_reg_4040_pp0_iter22_reg;

assign zext_ln68_1_fu_1884_p1 = shl_ln107_2_fu_1877_p3;

assign zext_ln68_fu_1847_p1 = shl_ln107_1_fu_1840_p3;

assign zext_ln92_1_fu_650_p1 = trunc_ln92_1_fu_642_p1;

assign zext_ln92_2_fu_1091_p1 = trunc_ln92_2_fu_1087_p1;

assign zext_ln92_3_fu_1735_p1 = shl_ln107_fu_1730_p2;

assign zext_ln92_4_fu_1250_p1 = trunc_ln92_3_reg_3710;

assign zext_ln92_5_fu_868_p1 = trunc_ln92_4_fu_864_p1;

assign zext_ln92_fu_646_p1 = trunc_ln92_fu_638_p1;

assign zext_ln93_1_fu_710_p1 = tmp_4_fu_696_p4;

assign zext_ln93_2_fu_1136_p1 = tmp_14_fu_1126_p4;

assign zext_ln93_3_fu_1284_p1 = tmp_20_reg_3716;

assign zext_ln93_4_fu_914_p1 = tmp_26_fu_904_p4;

assign zext_ln93_fu_706_p1 = tmp_3_fu_686_p4;

assign zext_ln94_1_fu_770_p1 = tmp_10_fu_756_p4;

assign zext_ln94_2_fu_1181_p1 = tmp_16_fu_1171_p4;

assign zext_ln94_3_fu_1318_p1 = tmp_22_reg_3722;

assign zext_ln94_4_fu_960_p1 = tmp_30_fu_950_p4;

assign zext_ln94_fu_766_p1 = tmp_9_fu_746_p4;

always @ (posedge ap_clk) begin
    zext_ln92_1_reg_3671[8] <= 1'b0;
    zext_ln93_1_reg_3682[8] <= 1'b0;
    zext_ln94_1_reg_3693[8] <= 1'b0;
    weight_sum_reg_3917[0] <= 1'b0;
    zext_ln64_reg_3922[0] <= 1'b0;
    zext_ln64_reg_3922[31:19] <= 13'b0000000000000;
    px_sum_1_reg_4016[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter10_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter11_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter12_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter13_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter14_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter15_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter16_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter17_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter18_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter19_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter20_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter21_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter22_reg[0] <= 1'b0;
    px_sum_1_reg_4016_pp0_iter23_reg[0] <= 1'b0;
    px_sum_3_reg_4033[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter10_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter11_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter12_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter13_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter14_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter15_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter16_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter17_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter18_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter19_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter20_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter21_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter22_reg[0] <= 1'b0;
    px_sum_3_reg_4033_pp0_iter23_reg[0] <= 1'b0;
    px_sum_5_reg_4040[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter10_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter11_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter12_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter13_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter14_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter15_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter16_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter17_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter18_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter19_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter20_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter21_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter22_reg[0] <= 1'b0;
    px_sum_5_reg_4040_pp0_iter23_reg[0] <= 1'b0;
    zext_ln65_1_reg_4057[0] <= 1'b0;
    zext_ln65_1_reg_4057[31:27] <= 5'b00000;
    zext_ln65_3_reg_4080[0] <= 1'b0;
    zext_ln65_3_reg_4080[31:27] <= 5'b00000;
    zext_ln65_5_reg_4103[0] <= 1'b0;
    zext_ln65_5_reg_4103[31:27] <= 5'b00000;
    or_ln1_reg_4131[1] <= 1'b0;
    or_ln115_1_reg_4156[1] <= 1'b0;
    or_ln115_2_reg_4181[1] <= 1'b0;
end

endmodule //bilateral_filter_accel_xFbilateralFilterKernel_16_3840_2160_3_16_1_2_2_16_3_Pipeline_Col_Loop
