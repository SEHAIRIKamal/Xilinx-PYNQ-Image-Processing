// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module scharr_accel_xFGradientX_16_0_s (
        ap_clk,
        ap_rst,
        vt0_val,
        vt2_val,
        vm0_val,
        vm2_val,
        vb0_val,
        vb2_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] vt0_val;
input  [7:0] vt2_val;
input  [14:0] vm0_val;
input  [7:0] vm2_val;
input  [15:0] vb0_val;
input  [7:0] vb2_val;
output  [7:0] ap_return;
input   ap_ce;

reg[7:0] ap_return;

reg   [7:0] vb2_val_read_reg_298;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] vb2_val_read_reg_298_pp0_iter1_reg;
reg   [7:0] vb2_val_read_reg_298_pp0_iter2_reg;
reg   [15:0] vb0_val_read_reg_305;
reg   [15:0] vb0_val_read_reg_305_pp0_iter1_reg;
reg   [7:0] vt2_val_read_reg_311;
reg   [7:0] vt2_val_read_reg_311_pp0_iter1_reg;
wire   [12:0] trunc_ln80_fu_102_p1;
reg   [12:0] trunc_ln80_reg_316;
wire   [6:0] empty_fu_116_p2;
reg   [6:0] empty_reg_321;
reg   [6:0] empty_reg_321_pp0_iter1_reg;
reg   [6:0] empty_reg_321_pp0_iter2_reg;
wire   [15:0] A01_fu_146_p2;
reg   [15:0] A01_reg_326;
wire   [15:0] add_ln90_fu_152_p2;
reg   [15:0] add_ln90_reg_331;
reg   [15:0] add_ln90_reg_331_pp0_iter1_reg;
wire   [15:0] A00_fu_170_p2;
reg   [15:0] A00_reg_336;
wire   [8:0] tmp3_fu_186_p2;
reg   [8:0] tmp3_reg_341;
wire   [15:0] S00_2_fu_196_p2;
reg   [15:0] S00_2_reg_346;
wire   [7:0] trunc_ln88_fu_202_p1;
reg   [7:0] trunc_ln88_reg_351;
wire    ap_block_pp0_stage0;
wire   [10:0] M00_fu_90_p3;
wire   [6:0] trunc_ln78_1_fu_86_p1;
wire   [6:0] trunc_ln78_fu_82_p1;
wire   [14:0] vm2_val_cast3_fu_122_p1;
wire   [14:0] tmp311_fu_126_p2;
wire   [15:0] S00_fu_110_p2;
wire   [15:0] zext_ln82_fu_106_p1;
wire   [15:0] add_ln92_fu_140_p2;
wire   [15:0] tmp10_fu_132_p3;
wire   [15:0] zext_ln78_fu_98_p1;
wire   [15:0] M01_fu_158_p3;
wire   [15:0] A00_2_fu_165_p2;
wire   [8:0] vb2_val_cast_fu_183_p1;
wire   [8:0] vt2_val_cast_fu_180_p1;
wire   [15:0] S01_2_fu_192_p2;
wire   [15:0] S01_fu_175_p2;
wire   [9:0] tmp_fu_209_p3;
wire   [10:0] tmp29_cast4_fu_216_p1;
wire   [10:0] zext_ln84_fu_206_p1;
wire   [10:0] add_ln94_fu_227_p2;
wire   [15:0] zext_ln94_fu_233_p1;
wire   [7:0] trunc_ln9_fu_220_p3;
wire   [7:0] add_ln95_1_fu_242_p2;
wire   [15:0] temp_g_fu_237_p2;
wire   [7:0] tmp_12_fu_260_p4;
wire   [0:0] icmp_ln99_fu_270_p2;
wire   [0:0] tmp_11_fu_252_p3;
wire   [0:0] or_ln99_fu_284_p2;
wire   [7:0] select_ln99_1_fu_276_p3;
wire   [7:0] add_ln95_fu_247_p2;
wire   [7:0] select_ln99_fu_290_p3;
reg    ap_ce_reg;
reg   [15:0] vt0_val_int_reg;
reg   [7:0] vt2_val_int_reg;
reg   [14:0] vm0_val_int_reg;
reg   [7:0] vm2_val_int_reg;
reg   [15:0] vb0_val_int_reg;
reg   [7:0] vb2_val_int_reg;
reg   [7:0] ap_return_int_reg;

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        A00_reg_336 <= A00_fu_170_p2;
        A01_reg_326 <= A01_fu_146_p2;
        S00_2_reg_346 <= S00_2_fu_196_p2;
        add_ln90_reg_331[15 : 1] <= add_ln90_fu_152_p2[15 : 1];
        add_ln90_reg_331_pp0_iter1_reg[15 : 1] <= add_ln90_reg_331[15 : 1];
        empty_reg_321 <= empty_fu_116_p2;
        empty_reg_321_pp0_iter1_reg <= empty_reg_321;
        empty_reg_321_pp0_iter2_reg <= empty_reg_321_pp0_iter1_reg;
        tmp3_reg_341 <= tmp3_fu_186_p2;
        trunc_ln80_reg_316 <= trunc_ln80_fu_102_p1;
        trunc_ln88_reg_351 <= trunc_ln88_fu_202_p1;
        vb0_val_read_reg_305 <= vb0_val_int_reg;
        vb0_val_read_reg_305_pp0_iter1_reg <= vb0_val_read_reg_305;
        vb2_val_read_reg_298 <= vb2_val_int_reg;
        vb2_val_read_reg_298_pp0_iter1_reg <= vb2_val_read_reg_298;
        vb2_val_read_reg_298_pp0_iter2_reg <= vb2_val_read_reg_298_pp0_iter1_reg;
        vt2_val_read_reg_311 <= vt2_val_int_reg;
        vt2_val_read_reg_311_pp0_iter1_reg <= vt2_val_read_reg_311;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= select_ln99_fu_290_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        vb0_val_int_reg <= vb0_val;
        vb2_val_int_reg <= vb2_val;
        vm0_val_int_reg <= vm0_val;
        vm2_val_int_reg <= vm2_val;
        vt0_val_int_reg <= vt0_val;
        vt2_val_int_reg <= vt2_val;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = select_ln99_fu_290_p3;
    end else begin
        ap_return = 'bx;
    end
end

assign A00_2_fu_165_p2 = (A01_reg_326 - M01_fu_158_p3);

assign A00_fu_170_p2 = (A00_2_fu_165_p2 - vb0_val_read_reg_305);

assign A01_fu_146_p2 = (zext_ln82_fu_106_p1 - add_ln92_fu_140_p2);

assign M00_fu_90_p3 = {{vm2_val_int_reg}, {3'd0}};

assign M01_fu_158_p3 = {{trunc_ln80_reg_316}, {3'd0}};

assign S00_2_fu_196_p2 = (S01_2_fu_192_p2 - S01_fu_175_p2);

assign S00_fu_110_p2 = vt0_val_int_reg << 16'd1;

assign S01_2_fu_192_p2 = (add_ln90_reg_331_pp0_iter1_reg + A00_reg_336);

assign S01_fu_175_p2 = vb0_val_read_reg_305_pp0_iter1_reg << 16'd1;

assign add_ln90_fu_152_p2 = (tmp10_fu_132_p3 + zext_ln78_fu_98_p1);

assign add_ln92_fu_140_p2 = (S00_fu_110_p2 + vt0_val_int_reg);

assign add_ln94_fu_227_p2 = (tmp29_cast4_fu_216_p1 + zext_ln84_fu_206_p1);

assign add_ln95_1_fu_242_p2 = (trunc_ln9_fu_220_p3 + vb2_val_read_reg_298_pp0_iter2_reg);

assign add_ln95_fu_247_p2 = (add_ln95_1_fu_242_p2 + trunc_ln88_reg_351);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign empty_fu_116_p2 = (trunc_ln78_1_fu_86_p1 + trunc_ln78_fu_82_p1);

assign icmp_ln99_fu_270_p2 = (($signed(tmp_12_fu_260_p4) > $signed(8'd0)) ? 1'b1 : 1'b0);

assign or_ln99_fu_284_p2 = (tmp_11_fu_252_p3 | icmp_ln99_fu_270_p2);

assign select_ln99_1_fu_276_p3 = ((icmp_ln99_fu_270_p2[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign select_ln99_fu_290_p3 = ((or_ln99_fu_284_p2[0:0] == 1'b1) ? select_ln99_1_fu_276_p3 : add_ln95_fu_247_p2);

assign temp_g_fu_237_p2 = (zext_ln94_fu_233_p1 + S00_2_reg_346);

assign tmp10_fu_132_p3 = {{tmp311_fu_126_p2}, {1'd0}};

assign tmp29_cast4_fu_216_p1 = tmp_fu_209_p3;

assign tmp311_fu_126_p2 = (vm2_val_cast3_fu_122_p1 - vm0_val_int_reg);

assign tmp3_fu_186_p2 = (vb2_val_cast_fu_183_p1 + vt2_val_cast_fu_180_p1);

assign tmp_11_fu_252_p3 = temp_g_fu_237_p2[32'd15];

assign tmp_12_fu_260_p4 = {{temp_g_fu_237_p2[15:8]}};

assign tmp_fu_209_p3 = {{tmp3_reg_341}, {1'd0}};

assign trunc_ln78_1_fu_86_p1 = vb2_val_int_reg[6:0];

assign trunc_ln78_fu_82_p1 = vt2_val_int_reg[6:0];

assign trunc_ln80_fu_102_p1 = vm0_val_int_reg[12:0];

assign trunc_ln88_fu_202_p1 = S00_2_fu_196_p2[7:0];

assign trunc_ln9_fu_220_p3 = {{empty_reg_321_pp0_iter2_reg}, {1'd0}};

assign vb2_val_cast_fu_183_p1 = vb2_val_read_reg_298_pp0_iter1_reg;

assign vm2_val_cast3_fu_122_p1 = vm2_val_int_reg;

assign vt2_val_cast_fu_180_p1 = vt2_val_read_reg_311_pp0_iter1_reg;

assign zext_ln78_fu_98_p1 = M00_fu_90_p3;

assign zext_ln82_fu_106_p1 = vt2_val_int_reg;

assign zext_ln84_fu_206_p1 = vb2_val_read_reg_298_pp0_iter2_reg;

assign zext_ln94_fu_233_p1 = add_ln94_fu_227_p2;

always @ (posedge ap_clk) begin
    add_ln90_reg_331[0] <= 1'b0;
    add_ln90_reg_331_pp0_iter1_reg[0] <= 1'b0;
end

endmodule //scharr_accel_xFGradientX_16_0_s
