// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module modefilter_accel_xFModeNxN_3840_2160_3_16_1_2_2_0_2162_5_25_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        add_ln446,
        buf_4_address0,
        buf_4_ce0,
        buf_4_q0,
        buf_4_address1,
        buf_4_ce1,
        buf_4_we1,
        buf_4_d1,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_3_address0,
        buf_3_ce0,
        buf_3_q0,
        buf_3_address1,
        buf_3_ce1,
        buf_3_we1,
        buf_3_d1,
        row_ind_15,
        row_ind_14,
        row_ind_13,
        row_ind_12,
        row_ind_11,
        sub_i213_i_cast,
        spec_select69,
        spec_select73,
        spec_select77,
        spec_select81,
        spec_select85,
        zext_ln415_2,
        cmp_i_i321_i
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] imgInput_data_dout;
input  [2:0] imgInput_data_num_data_valid;
input  [1:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [23:0] imgOutput_data_din;
input  [1:0] imgOutput_data_num_data_valid;
input  [1:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [12:0] add_ln446;
output  [11:0] buf_4_address0;
output   buf_4_ce0;
input  [23:0] buf_4_q0;
output  [11:0] buf_4_address1;
output   buf_4_ce1;
output   buf_4_we1;
output  [23:0] buf_4_d1;
output  [11:0] buf_r_address0;
output   buf_r_ce0;
input  [23:0] buf_r_q0;
output  [11:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [23:0] buf_r_d1;
output  [11:0] buf_1_address0;
output   buf_1_ce0;
input  [23:0] buf_1_q0;
output  [11:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [23:0] buf_1_d1;
output  [11:0] buf_2_address0;
output   buf_2_ce0;
input  [23:0] buf_2_q0;
output  [11:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [23:0] buf_2_d1;
output  [11:0] buf_3_address0;
output   buf_3_ce0;
input  [23:0] buf_3_q0;
output  [11:0] buf_3_address1;
output   buf_3_ce1;
output   buf_3_we1;
output  [23:0] buf_3_d1;
input  [2:0] row_ind_15;
input  [2:0] row_ind_14;
input  [2:0] row_ind_13;
input  [2:0] row_ind_12;
input  [2:0] row_ind_11;
input  [2:0] sub_i213_i_cast;
input  [0:0] spec_select69;
input  [0:0] spec_select73;
input  [0:0] spec_select77;
input  [0:0] spec_select81;
input  [0:0] spec_select85;
input  [11:0] zext_ln415_2;
input  [0:0] cmp_i_i321_i;

reg ap_idle;
reg imgInput_data_read;
reg imgOutput_data_write;
reg buf_4_ce0;
reg buf_4_ce1;
reg buf_4_we1;
reg buf_r_ce0;
reg buf_r_ce1;
reg buf_r_we1;
reg buf_1_ce0;
reg buf_1_ce1;
reg buf_1_we1;
reg buf_2_ce0;
reg buf_2_ce1;
reg buf_2_we1;
reg buf_3_ce0;
reg buf_3_ce1;
reg buf_3_we1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] and_ln185_reg_1323;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
wire    ap_block_state29_pp0_stage0_iter28;
reg   [0:0] icmp_ln333_reg_1352;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter28_reg;
reg    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln178_fu_568_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    imgInput_data_blk_n;
wire    ap_block_pp0_stage0;
wire    imgOutput_data_blk_n;
wire    ap_block_pp0_stage0_11001;
wire   [2:0] row_ind_15_read_reg_1296;
reg   [12:0] col_reg_1302;
reg   [12:0] col_reg_1302_pp0_iter1_reg;
reg   [0:0] icmp_ln178_reg_1310;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter1_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter2_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter3_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter4_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter5_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter6_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter7_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter8_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter9_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter10_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter11_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter12_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter13_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter14_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter15_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter16_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter17_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter18_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter19_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter20_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter21_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter22_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter23_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter24_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter25_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter26_reg;
reg   [0:0] icmp_ln178_reg_1310_pp0_iter27_reg;
wire   [0:0] icmp_ln185_fu_580_p2;
reg   [0:0] icmp_ln185_reg_1314;
reg   [0:0] icmp_ln185_reg_1314_pp0_iter1_reg;
reg   [0:0] icmp_ln185_reg_1314_pp0_iter2_reg;
reg   [0:0] icmp_ln185_reg_1314_pp0_iter3_reg;
wire   [0:0] and_ln185_fu_586_p2;
wire   [0:0] icmp_ln333_fu_622_p2;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter3_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter4_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter5_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter6_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter7_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter8_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter9_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter10_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter11_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter12_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter13_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter14_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter15_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter16_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter17_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter18_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter19_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter20_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter21_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter22_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter23_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter24_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter25_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter26_reg;
reg   [0:0] icmp_ln333_reg_1352_pp0_iter27_reg;
wire   [0:0] cmp_i_i_i_fu_628_p2;
reg   [0:0] cmp_i_i_i_reg_1356;
reg   [0:0] cmp_i_i_i_reg_1356_pp0_iter3_reg;
reg   [0:0] cmp_i_i_i_reg_1356_pp0_iter4_reg;
reg   [23:0] buf_4_load_reg_1375;
reg   [23:0] buf_load_reg_1385;
reg   [23:0] buf_1_load_reg_1395;
reg   [23:0] buf_2_load_reg_1405;
reg   [23:0] buf_3_load_reg_1415;
reg   [23:0] src_buf_3_load_1_reg_1425;
reg   [23:0] src_buf_7_load_1_reg_1430;
reg   [23:0] src_buf_11_load_1_reg_1435;
reg   [23:0] src_buf_15_load_1_reg_1440;
reg   [23:0] src_buf_19_load_1_reg_1445;
wire   [23:0] src_buf_39_fu_754_p3;
reg   [23:0] src_buf_39_reg_1450;
wire   [23:0] src_buf_35_fu_761_p3;
reg   [23:0] src_buf_35_reg_1458;
wire   [23:0] src_buf_31_fu_768_p3;
reg   [23:0] src_buf_31_reg_1465;
wire   [23:0] src_buf_27_fu_775_p3;
reg   [23:0] src_buf_27_reg_1473;
wire   [23:0] src_buf_23_fu_782_p3;
reg   [23:0] src_buf_23_reg_1481;
reg   [23:0] src_buf_3_load_reg_1489;
reg   [23:0] src_buf_7_load_reg_1494;
reg   [23:0] src_buf_11_load_reg_1499;
reg   [23:0] src_buf_19_load_reg_1504;
wire   [23:0] src_buf_34_fu_804_p3;
reg   [23:0] src_buf_34_reg_1509;
wire   [23:0] grp_xFModeProc_3_1_16_5_25_s_fu_427_ap_return;
reg   [23:0] OutputValues_reg_1589;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call48;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call48;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call48;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call48;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call48;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call48;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call48;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call48;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call48;
wire    ap_block_state10_pp0_stage0_iter9_ignore_call48;
wire    ap_block_state11_pp0_stage0_iter10_ignore_call48;
wire    ap_block_state12_pp0_stage0_iter11_ignore_call48;
wire    ap_block_state13_pp0_stage0_iter12_ignore_call48;
wire    ap_block_state14_pp0_stage0_iter13_ignore_call48;
wire    ap_block_state15_pp0_stage0_iter14_ignore_call48;
wire    ap_block_state16_pp0_stage0_iter15_ignore_call48;
wire    ap_block_state17_pp0_stage0_iter16_ignore_call48;
wire    ap_block_state18_pp0_stage0_iter17_ignore_call48;
wire    ap_block_state19_pp0_stage0_iter18_ignore_call48;
wire    ap_block_state20_pp0_stage0_iter19_ignore_call48;
wire    ap_block_state21_pp0_stage0_iter20_ignore_call48;
wire    ap_block_state22_pp0_stage0_iter21_ignore_call48;
wire    ap_block_state23_pp0_stage0_iter22_ignore_call48;
wire    ap_block_state24_pp0_stage0_iter23_ignore_call48;
wire    ap_block_state25_pp0_stage0_iter24_ignore_call48;
wire    ap_block_state26_pp0_stage0_iter25_ignore_call48;
wire    ap_block_state27_pp0_stage0_iter26_ignore_call48;
wire    ap_block_state28_pp0_stage0_iter27_ignore_call48;
wire    ap_block_state29_pp0_stage0_iter28_ignore_call48;
reg    ap_block_state30_pp0_stage0_iter29_ignore_call48;
wire    ap_block_pp0_stage0_11001_ignoreCallOp196;
wire   [63:0] zext_ln186_fu_597_p1;
wire   [63:0] conv_i130_i_fu_605_p1;
reg   [12:0] col_4_fu_116;
wire   [12:0] col_5_fu_574_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col;
reg   [23:0] src_buf_fu_120;
wire   [23:0] src_buf_20_fu_1000_p3;
reg   [23:0] src_buf_1_fu_124;
wire   [23:0] src_buf_21_fu_994_p3;
reg   [23:0] src_buf_2_fu_128;
wire   [23:0] src_buf_22_fu_989_p3;
reg   [23:0] src_buf_3_fu_132;
reg   [23:0] src_buf_4_fu_136;
wire   [23:0] src_buf_24_fu_983_p3;
reg   [23:0] src_buf_5_fu_140;
wire   [23:0] src_buf_25_fu_977_p3;
reg   [23:0] src_buf_6_fu_144;
wire   [23:0] src_buf_26_fu_972_p3;
reg   [23:0] src_buf_7_fu_148;
reg   [23:0] src_buf_8_fu_152;
wire   [23:0] src_buf_28_fu_966_p3;
reg   [23:0] src_buf_9_fu_156;
wire   [23:0] src_buf_29_fu_960_p3;
reg   [23:0] src_buf_10_fu_160;
wire   [23:0] src_buf_30_fu_955_p3;
reg   [23:0] src_buf_11_fu_164;
reg   [23:0] src_buf_12_fu_168;
wire   [23:0] src_buf_32_fu_949_p3;
reg   [23:0] src_buf_13_fu_172;
wire   [23:0] src_buf_33_fu_943_p3;
reg   [23:0] src_buf_14_fu_176;
reg   [23:0] src_buf_15_fu_180;
reg   [23:0] src_buf_16_fu_184;
wire   [23:0] src_buf_36_fu_937_p3;
reg   [23:0] src_buf_17_fu_188;
wire   [23:0] src_buf_37_fu_931_p3;
reg   [23:0] src_buf_18_fu_192;
wire   [23:0] src_buf_38_fu_926_p3;
reg   [23:0] src_buf_19_fu_196;
wire    ap_block_pp0_stage0_01001;
wire   [12:0] zext_ln415_2_cast_fu_456_p1;
wire   [11:0] tmp_fu_613_p4;
wire   [2:0] trunc_ln_fu_648_p7;
wire   [23:0] tmp_s_fu_658_p7;
wire   [23:0] tmp_53_fu_669_p7;
wire   [23:0] tmp_54_fu_686_p7;
wire   [23:0] tmp_55_fu_703_p7;
wire   [23:0] tmp_56_fu_720_p7;
wire   [23:0] tmp_57_fu_737_p7;
wire   [23:0] p_0_0_0428_490_fu_747_p3;
wire   [23:0] p_0_0_0428_389_fu_730_p3;
wire   [23:0] p_0_0_0428_288_fu_713_p3;
wire   [23:0] p_0_0_0428_187_fu_696_p3;
wire   [23:0] p_0_0_042886_fu_679_p3;
wire    ap_continue_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_done_int_frp;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [29:0] frp_pipeline_valid_U_valid_out;
wire   [5:0] frp_pipeline_valid_U_num_valid_datasets;
wire   [23:0] pf_imgOutput_data_U_data_out;
wire    pf_imgOutput_data_U_data_out_vld;
wire    pf_imgOutput_data_U_pf_ready;
wire    pf_imgOutput_data_U_pf_done;
reg   [0:0] ap_frp_data_next_issued_imgInput_data;
reg    ap_frp_data_issued_nxt_imgInput_data_op110;
reg   [4:0] ap_frp_data_req_imgInput_data;
reg   [0:0] ap_frp_data_req_imgInput_data_op110;
reg    ap_condition_frp_roi_pvb_no_fwd_prs;
reg    ap_condition_frp_pvb_no_bkwd_prs;
reg    ap_condition_frp_pvb_pf_start;
reg    ap_frp_vld_in;
reg    frp_pipeline_valid_U_exitcond;
reg    pf_imgOutput_data_U_data_in_vld;
reg    pf_all_done;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_frp_data_req_imgInput_data = 5'd0;
#0 pf_all_done = 1'b0;
end

modefilter_accel_xFModeProc_3_1_16_5_25_s grp_xFModeProc_3_1_16_5_25_s_fu_427(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .src_buf_0_0_val(src_buf_fu_120),
    .src_buf_0_1_val(src_buf_1_fu_124),
    .src_buf_0_2_val(src_buf_2_fu_128),
    .src_buf_0_3_val(src_buf_3_load_1_reg_1425),
    .src_buf_0_4_val(src_buf_23_reg_1481),
    .src_buf_1_0_val(src_buf_4_fu_136),
    .src_buf_1_1_val(src_buf_5_fu_140),
    .src_buf_1_2_val(src_buf_6_fu_144),
    .src_buf_1_3_val(src_buf_7_load_1_reg_1430),
    .src_buf_1_4_val(src_buf_27_reg_1473),
    .src_buf_2_0_val(src_buf_8_fu_152),
    .src_buf_2_1_val(src_buf_9_fu_156),
    .src_buf_2_2_val(src_buf_10_fu_160),
    .src_buf_2_3_val(src_buf_11_load_1_reg_1435),
    .src_buf_2_4_val(src_buf_31_reg_1465),
    .src_buf_3_0_val(src_buf_12_fu_168),
    .src_buf_3_1_val(src_buf_13_fu_172),
    .src_buf_3_2_val(src_buf_14_fu_176),
    .src_buf_3_3_val(src_buf_15_load_1_reg_1440),
    .src_buf_3_4_val(src_buf_35_reg_1458),
    .src_buf_4_0_val(src_buf_16_fu_184),
    .src_buf_4_1_val(src_buf_17_fu_188),
    .src_buf_4_2_val(src_buf_18_fu_192),
    .src_buf_4_3_val(src_buf_19_load_1_reg_1445),
    .src_buf_4_4_val(src_buf_39_reg_1450),
    .ap_return(grp_xFModeProc_3_1_16_5_25_s_fu_427_ap_return),
    .ap_ce(1'b1)
);

modefilter_accel_mux_5_3_3_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 3 ),
    .din1_WIDTH( 3 ),
    .din2_WIDTH( 3 ),
    .din3_WIDTH( 3 ),
    .din4_WIDTH( 3 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
mux_5_3_3_1_1_U83(
    .din0(row_ind_11),
    .din1(row_ind_12),
    .din2(row_ind_13),
    .din3(row_ind_14),
    .din4(row_ind_15),
    .din5(sub_i213_i_cast),
    .dout(trunc_ln_fu_648_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U84(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(trunc_ln_fu_648_p7),
    .dout(tmp_s_fu_658_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U85(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(row_ind_11),
    .dout(tmp_53_fu_669_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U86(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(row_ind_12),
    .dout(tmp_54_fu_686_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U87(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(row_ind_13),
    .dout(tmp_55_fu_703_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U88(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(row_ind_14),
    .dout(tmp_56_fu_720_p7)
);

modefilter_accel_mux_5_3_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 24 ),
    .din4_WIDTH( 24 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 24 ))
mux_5_3_24_1_1_U89(
    .din0(buf_load_reg_1385),
    .din1(buf_1_load_reg_1395),
    .din2(buf_2_load_reg_1405),
    .din3(buf_3_load_reg_1415),
    .din4(buf_4_load_reg_1375),
    .din5(row_ind_15),
    .dout(tmp_57_fu_737_p7)
);

modefilter_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(pf_all_done),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(pf_all_done)
);

modefilter_accel_frp_pipeline_valid #(
    .PipelineLatency( 30 ),
    .PipelineII( 1 ),
    .CeilLog2Stages( 5 ),
    .ExitLatency( 0 ))
frp_pipeline_valid_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .valid_in(ap_frp_vld_in),
    .exitcond(frp_pipeline_valid_U_exitcond),
    .valid_out(frp_pipeline_valid_U_valid_out),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

modefilter_accel_frp_fifoout #(
    .BlockingType( 1 ),
    .PipeLatency( 30 ),
    .PipelineII( 1 ),
    .DataWidth( 24 ),
    .NumWrites( 1 ),
    .CeilLog2Stages( 5 ),
    .CeilLog2FDepth( 5 ),
    .PfAllDoneEnable( 2 ))
pf_imgOutput_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(OutputValues_reg_1589),
    .data_out(pf_imgOutput_data_U_data_out),
    .valid(frp_pipeline_valid_U_valid_out),
    .data_in_vld(pf_imgOutput_data_U_data_in_vld),
    .data_out_vld(pf_imgOutput_data_U_data_out_vld),
    .data_in_last(ap_done_int_frp),
    .pf_continue(1'b1),
    .pf_all_done(pf_all_done),
    .pf_ready(pf_imgOutput_data_U_pf_ready),
    .pf_done(pf_imgOutput_data_U_pf_done),
    .data_out_read(imgOutput_data_full_n),
    .ap_start(1'b0),
    .num_valid_datasets(frp_pipeline_valid_U_num_valid_datasets)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_frp_data_req_imgInput_data <= 5'd0;
    end else begin
        if ((frp_pipeline_valid_U_valid_out[5'd0] == 1'b0)) begin
            ap_frp_data_req_imgInput_data <= (ap_frp_data_req_imgInput_data - ap_frp_data_next_issued_imgInput_data);
        end else begin
            ap_frp_data_req_imgInput_data <= ((ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op110) - ap_frp_data_next_issued_imgInput_data);
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        pf_all_done <= 1'b0;
    end else begin
        pf_all_done <= pf_imgOutput_data_U_pf_done;
    end
end

always @ (posedge ap_clk) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & ((icmp_ln178_fu_568_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        col_4_fu_116 <= col_5_fu_574_p2;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        col_4_fu_116 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_10_fu_160 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_10_fu_160 <= src_buf_30_fu_955_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_11_fu_164 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_11_fu_164 <= src_buf_31_fu_768_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_12_fu_168 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_12_fu_168 <= src_buf_32_fu_949_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_13_fu_172 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_13_fu_172 <= src_buf_33_fu_943_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_14_fu_176 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_14_fu_176 <= src_buf_34_reg_1509;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_15_fu_180 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_15_fu_180 <= src_buf_35_fu_761_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_16_fu_184 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_16_fu_184 <= src_buf_36_fu_937_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_17_fu_188 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_17_fu_188 <= src_buf_37_fu_931_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_18_fu_192 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_18_fu_192 <= src_buf_38_fu_926_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_19_fu_196 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_19_fu_196 <= src_buf_39_fu_754_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_1_fu_124 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_1_fu_124 <= src_buf_21_fu_994_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_2_fu_128 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_2_fu_128 <= src_buf_22_fu_989_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_3_fu_132 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_3_fu_132 <= src_buf_23_fu_782_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_4_fu_136 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_4_fu_136 <= src_buf_24_fu_983_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_5_fu_140 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_5_fu_140 <= src_buf_25_fu_977_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_6_fu_144 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_6_fu_144 <= src_buf_26_fu_972_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_7_fu_148 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            src_buf_7_fu_148 <= src_buf_27_fu_775_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_8_fu_152 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_8_fu_152 <= src_buf_28_fu_966_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_9_fu_156 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_9_fu_156 <= src_buf_29_fu_960_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            src_buf_fu_120 <= 24'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            src_buf_fu_120 <= src_buf_20_fu_1000_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln178_reg_1310_pp0_iter27_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        OutputValues_reg_1589 <= grp_xFModeProc_3_1_16_5_25_s_fu_427_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln178_fu_568_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln185_reg_1323 <= and_ln185_fu_586_p2;
        icmp_ln185_reg_1314 <= icmp_ln185_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        cmp_i_i_i_reg_1356 <= cmp_i_i_i_fu_628_p2;
        cmp_i_i_i_reg_1356_pp0_iter3_reg <= cmp_i_i_i_reg_1356;
        cmp_i_i_i_reg_1356_pp0_iter4_reg <= cmp_i_i_i_reg_1356_pp0_iter3_reg;
        icmp_ln178_reg_1310_pp0_iter10_reg <= icmp_ln178_reg_1310_pp0_iter9_reg;
        icmp_ln178_reg_1310_pp0_iter11_reg <= icmp_ln178_reg_1310_pp0_iter10_reg;
        icmp_ln178_reg_1310_pp0_iter12_reg <= icmp_ln178_reg_1310_pp0_iter11_reg;
        icmp_ln178_reg_1310_pp0_iter13_reg <= icmp_ln178_reg_1310_pp0_iter12_reg;
        icmp_ln178_reg_1310_pp0_iter14_reg <= icmp_ln178_reg_1310_pp0_iter13_reg;
        icmp_ln178_reg_1310_pp0_iter15_reg <= icmp_ln178_reg_1310_pp0_iter14_reg;
        icmp_ln178_reg_1310_pp0_iter16_reg <= icmp_ln178_reg_1310_pp0_iter15_reg;
        icmp_ln178_reg_1310_pp0_iter17_reg <= icmp_ln178_reg_1310_pp0_iter16_reg;
        icmp_ln178_reg_1310_pp0_iter18_reg <= icmp_ln178_reg_1310_pp0_iter17_reg;
        icmp_ln178_reg_1310_pp0_iter19_reg <= icmp_ln178_reg_1310_pp0_iter18_reg;
        icmp_ln178_reg_1310_pp0_iter20_reg <= icmp_ln178_reg_1310_pp0_iter19_reg;
        icmp_ln178_reg_1310_pp0_iter21_reg <= icmp_ln178_reg_1310_pp0_iter20_reg;
        icmp_ln178_reg_1310_pp0_iter22_reg <= icmp_ln178_reg_1310_pp0_iter21_reg;
        icmp_ln178_reg_1310_pp0_iter23_reg <= icmp_ln178_reg_1310_pp0_iter22_reg;
        icmp_ln178_reg_1310_pp0_iter24_reg <= icmp_ln178_reg_1310_pp0_iter23_reg;
        icmp_ln178_reg_1310_pp0_iter25_reg <= icmp_ln178_reg_1310_pp0_iter24_reg;
        icmp_ln178_reg_1310_pp0_iter26_reg <= icmp_ln178_reg_1310_pp0_iter25_reg;
        icmp_ln178_reg_1310_pp0_iter27_reg <= icmp_ln178_reg_1310_pp0_iter26_reg;
        icmp_ln178_reg_1310_pp0_iter2_reg <= icmp_ln178_reg_1310_pp0_iter1_reg;
        icmp_ln178_reg_1310_pp0_iter3_reg <= icmp_ln178_reg_1310_pp0_iter2_reg;
        icmp_ln178_reg_1310_pp0_iter4_reg <= icmp_ln178_reg_1310_pp0_iter3_reg;
        icmp_ln178_reg_1310_pp0_iter5_reg <= icmp_ln178_reg_1310_pp0_iter4_reg;
        icmp_ln178_reg_1310_pp0_iter6_reg <= icmp_ln178_reg_1310_pp0_iter5_reg;
        icmp_ln178_reg_1310_pp0_iter7_reg <= icmp_ln178_reg_1310_pp0_iter6_reg;
        icmp_ln178_reg_1310_pp0_iter8_reg <= icmp_ln178_reg_1310_pp0_iter7_reg;
        icmp_ln178_reg_1310_pp0_iter9_reg <= icmp_ln178_reg_1310_pp0_iter8_reg;
        icmp_ln185_reg_1314_pp0_iter2_reg <= icmp_ln185_reg_1314_pp0_iter1_reg;
        icmp_ln185_reg_1314_pp0_iter3_reg <= icmp_ln185_reg_1314_pp0_iter2_reg;
        icmp_ln333_reg_1352 <= icmp_ln333_fu_622_p2;
        icmp_ln333_reg_1352_pp0_iter10_reg <= icmp_ln333_reg_1352_pp0_iter9_reg;
        icmp_ln333_reg_1352_pp0_iter11_reg <= icmp_ln333_reg_1352_pp0_iter10_reg;
        icmp_ln333_reg_1352_pp0_iter12_reg <= icmp_ln333_reg_1352_pp0_iter11_reg;
        icmp_ln333_reg_1352_pp0_iter13_reg <= icmp_ln333_reg_1352_pp0_iter12_reg;
        icmp_ln333_reg_1352_pp0_iter14_reg <= icmp_ln333_reg_1352_pp0_iter13_reg;
        icmp_ln333_reg_1352_pp0_iter15_reg <= icmp_ln333_reg_1352_pp0_iter14_reg;
        icmp_ln333_reg_1352_pp0_iter16_reg <= icmp_ln333_reg_1352_pp0_iter15_reg;
        icmp_ln333_reg_1352_pp0_iter17_reg <= icmp_ln333_reg_1352_pp0_iter16_reg;
        icmp_ln333_reg_1352_pp0_iter18_reg <= icmp_ln333_reg_1352_pp0_iter17_reg;
        icmp_ln333_reg_1352_pp0_iter19_reg <= icmp_ln333_reg_1352_pp0_iter18_reg;
        icmp_ln333_reg_1352_pp0_iter20_reg <= icmp_ln333_reg_1352_pp0_iter19_reg;
        icmp_ln333_reg_1352_pp0_iter21_reg <= icmp_ln333_reg_1352_pp0_iter20_reg;
        icmp_ln333_reg_1352_pp0_iter22_reg <= icmp_ln333_reg_1352_pp0_iter21_reg;
        icmp_ln333_reg_1352_pp0_iter23_reg <= icmp_ln333_reg_1352_pp0_iter22_reg;
        icmp_ln333_reg_1352_pp0_iter24_reg <= icmp_ln333_reg_1352_pp0_iter23_reg;
        icmp_ln333_reg_1352_pp0_iter25_reg <= icmp_ln333_reg_1352_pp0_iter24_reg;
        icmp_ln333_reg_1352_pp0_iter26_reg <= icmp_ln333_reg_1352_pp0_iter25_reg;
        icmp_ln333_reg_1352_pp0_iter27_reg <= icmp_ln333_reg_1352_pp0_iter26_reg;
        icmp_ln333_reg_1352_pp0_iter28_reg <= icmp_ln333_reg_1352_pp0_iter27_reg;
        icmp_ln333_reg_1352_pp0_iter3_reg <= icmp_ln333_reg_1352;
        icmp_ln333_reg_1352_pp0_iter4_reg <= icmp_ln333_reg_1352_pp0_iter3_reg;
        icmp_ln333_reg_1352_pp0_iter5_reg <= icmp_ln333_reg_1352_pp0_iter4_reg;
        icmp_ln333_reg_1352_pp0_iter6_reg <= icmp_ln333_reg_1352_pp0_iter5_reg;
        icmp_ln333_reg_1352_pp0_iter7_reg <= icmp_ln333_reg_1352_pp0_iter6_reg;
        icmp_ln333_reg_1352_pp0_iter8_reg <= icmp_ln333_reg_1352_pp0_iter7_reg;
        icmp_ln333_reg_1352_pp0_iter9_reg <= icmp_ln333_reg_1352_pp0_iter8_reg;
        src_buf_11_load_1_reg_1435 <= src_buf_11_fu_164;
        src_buf_15_load_1_reg_1440 <= src_buf_15_fu_180;
        src_buf_19_load_1_reg_1445 <= src_buf_19_fu_196;
        src_buf_23_reg_1481 <= src_buf_23_fu_782_p3;
        src_buf_27_reg_1473 <= src_buf_27_fu_775_p3;
        src_buf_31_reg_1465 <= src_buf_31_fu_768_p3;
        src_buf_34_reg_1509 <= src_buf_34_fu_804_p3;
        src_buf_35_reg_1458 <= src_buf_35_fu_761_p3;
        src_buf_39_reg_1450 <= src_buf_39_fu_754_p3;
        src_buf_3_load_1_reg_1425 <= src_buf_3_fu_132;
        src_buf_7_load_1_reg_1430 <= src_buf_7_fu_148;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_reg_1302 <= ap_sig_allocacmp_col;
        col_reg_1302_pp0_iter1_reg <= col_reg_1302;
        icmp_ln178_reg_1310 <= icmp_ln178_fu_568_p2;
        icmp_ln178_reg_1310_pp0_iter1_reg <= icmp_ln178_reg_1310;
        icmp_ln185_reg_1314_pp0_iter1_reg <= icmp_ln185_reg_1314;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_load_reg_1395 <= buf_1_q0;
        buf_2_load_reg_1405 <= buf_2_q0;
        buf_3_load_reg_1415 <= buf_3_q0;
        buf_4_load_reg_1375 <= buf_4_q0;
        buf_load_reg_1385 <= buf_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp_i_i_i_reg_1356_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        src_buf_11_load_reg_1499 <= src_buf_11_fu_164;
        src_buf_19_load_reg_1504 <= src_buf_19_fu_196;
        src_buf_3_load_reg_1489 <= src_buf_3_fu_132;
        src_buf_7_load_reg_1494 <= src_buf_7_fu_148;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & ((icmp_ln178_fu_568_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter28_reg == 1'b1))) begin
        ap_done_int_frp = 1'b1;
    end else begin
        ap_done_int_frp = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1)) begin
        ap_enable_reg_pp0_iter1 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter1 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd10] == 1'b1)) begin
        ap_enable_reg_pp0_iter10 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter10 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd11] == 1'b1)) begin
        ap_enable_reg_pp0_iter11 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter11 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd12] == 1'b1)) begin
        ap_enable_reg_pp0_iter12 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter12 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd13] == 1'b1)) begin
        ap_enable_reg_pp0_iter13 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter13 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd14] == 1'b1)) begin
        ap_enable_reg_pp0_iter14 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter14 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd15] == 1'b1)) begin
        ap_enable_reg_pp0_iter15 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter15 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd16] == 1'b1)) begin
        ap_enable_reg_pp0_iter16 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter16 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd17] == 1'b1)) begin
        ap_enable_reg_pp0_iter17 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter17 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd18] == 1'b1)) begin
        ap_enable_reg_pp0_iter18 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter18 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd19] == 1'b1)) begin
        ap_enable_reg_pp0_iter19 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter19 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd2] == 1'b1)) begin
        ap_enable_reg_pp0_iter2 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter2 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd20] == 1'b1)) begin
        ap_enable_reg_pp0_iter20 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter20 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd21] == 1'b1)) begin
        ap_enable_reg_pp0_iter21 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter21 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd22] == 1'b1)) begin
        ap_enable_reg_pp0_iter22 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter22 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd23] == 1'b1)) begin
        ap_enable_reg_pp0_iter23 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter23 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd24] == 1'b1)) begin
        ap_enable_reg_pp0_iter24 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter24 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd25] == 1'b1)) begin
        ap_enable_reg_pp0_iter25 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter25 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd26] == 1'b1)) begin
        ap_enable_reg_pp0_iter26 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter26 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd27] == 1'b1)) begin
        ap_enable_reg_pp0_iter27 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter27 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd28] == 1'b1)) begin
        ap_enable_reg_pp0_iter28 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter28 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd29] == 1'b1)) begin
        ap_enable_reg_pp0_iter29 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter29 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd3] == 1'b1)) begin
        ap_enable_reg_pp0_iter3 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter3 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd4] == 1'b1)) begin
        ap_enable_reg_pp0_iter4 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter4 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd5] == 1'b1)) begin
        ap_enable_reg_pp0_iter5 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter5 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd6] == 1'b1)) begin
        ap_enable_reg_pp0_iter6 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter6 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd7] == 1'b1)) begin
        ap_enable_reg_pp0_iter7 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter7 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd8] == 1'b1)) begin
        ap_enable_reg_pp0_iter8 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter8 = 1'b0;
    end
end

always @ (*) begin
    if ((frp_pipeline_valid_U_valid_out[5'd9] == 1'b1)) begin
        ap_enable_reg_pp0_iter9 = 1'b1;
    end else begin
        ap_enable_reg_pp0_iter9 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'd1 == and_ln185_reg_1323))) begin
        ap_frp_data_issued_nxt_imgInput_data_op110 = 1'b1;
    end else begin
        ap_frp_data_issued_nxt_imgInput_data_op110 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_frp_data_issued_nxt_imgInput_data_op110 == 1'b1)) begin
        ap_frp_data_next_issued_imgInput_data = 1'd1;
    end else begin
        ap_frp_data_next_issued_imgInput_data = 1'd0;
    end
end

always @ (*) begin
    if ((~(icmp_ln178_fu_568_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln185_fu_586_p2))) begin
        ap_frp_data_req_imgInput_data_op110 = 1'd1;
    end else begin
        ap_frp_data_req_imgInput_data_op110 = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_condition_frp_pvb_pf_start) & (1'b1 == ap_condition_frp_pvb_no_bkwd_prs) & (1'b1 == ap_condition_frp_roi_pvb_no_fwd_prs))) begin
        ap_frp_vld_in = 1'b1;
    end else begin
        ap_frp_vld_in = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) 
    & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd0] == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_col = 13'd0;
    end else begin
        ap_sig_allocacmp_col = col_4_fu_116;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & ((row_ind_15_read_reg_1296 == 3'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & ((row_ind_15_read_reg_1296 == 3'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_ce0 = 1'b1;
    end else begin
        buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_3_ce1 = 1'b1;
    end else begin
        buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & ((row_ind_15_read_reg_1296 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        buf_3_we1 = 1'b1;
    end else begin
        buf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_ce0 = 1'b1;
    end else begin
        buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_4_ce1 = 1'b1;
    end else begin
        buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (~(row_ind_15_read_reg_1296 == 3'd0) & ~(row_ind_15_read_reg_1296 == 3'd1) & ~(row_ind_15_read_reg_1296 == 3'd2) & ~(row_ind_15_read_reg_1296 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        buf_4_we1 = 1'b1;
    end else begin
        buf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & ((row_ind_15_read_reg_1296 == 3'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln178_fu_568_p2 == 1'd1))) begin
        frp_pipeline_valid_U_exitcond = 1'b1;
    end else begin
        frp_pipeline_valid_U_exitcond = 1'b0;
    end
end

always @ (*) begin
    if (((frp_pipeline_valid_U_valid_out[5'd1] == 1'b1) & ((1'b0 == ap_block_pp0_stage0_11001) & (1'd1 == and_ln185_reg_1323)))) begin
        imgInput_data_read = 1'b1;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((pf_imgOutput_data_U_data_out_vld == 1'b1)) begin
        imgOutput_data_write = 1'b1;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln333_reg_1352_pp0_iter28_reg == 1'd0) & (ap_enable_reg_pp0_iter29 == 1'b1))) begin
        pf_imgOutput_data_U_data_in_vld = 1'b1;
    end else begin
        pf_imgOutput_data_U_data_in_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln185_fu_586_p2 = (icmp_ln185_fu_580_p2 & cmp_i_i321_i);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = 1'b0;

assign ap_block_pp0_stage0_01001 = 1'b0;

assign ap_block_pp0_stage0_11001 = 1'b0;

assign ap_block_pp0_stage0_11001_ignoreCallOp196 = 1'b0;

assign ap_block_pp0_stage0_subdone = 1'b0;

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter27_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((1'b1 == 1'b0) & (1'd1 == and_ln185_reg_1323));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call48 = ((1'b1 == 1'b0) & (1'd1 == and_ln185_reg_1323));
end

always @ (*) begin
    ap_block_state30_pp0_stage0_iter29 = ((1'b1 == 1'b0) & (icmp_ln333_reg_1352_pp0_iter28_reg == 1'd0));
end

always @ (*) begin
    ap_block_state30_pp0_stage0_iter29_ignore_call48 = ((1'b1 == 1'b0) & (icmp_ln333_reg_1352_pp0_iter28_reg == 1'd0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call48 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call48 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_frp_pvb_no_bkwd_prs = (pf_imgOutput_data_U_pf_ready == 1'b1);
end

always @ (*) begin
    ap_condition_frp_pvb_pf_start = ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b1));
end

always @ (*) begin
    ap_condition_frp_roi_pvb_no_fwd_prs = ~(imgInput_data_num_data_valid < (ap_frp_data_req_imgInput_data + ap_frp_data_req_imgInput_data_op110));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign buf_1_address0 = conv_i130_i_fu_605_p1;

assign buf_1_address1 = zext_ln186_fu_597_p1;

assign buf_1_d1 = imgInput_data_dout;

assign buf_2_address0 = conv_i130_i_fu_605_p1;

assign buf_2_address1 = zext_ln186_fu_597_p1;

assign buf_2_d1 = imgInput_data_dout;

assign buf_3_address0 = conv_i130_i_fu_605_p1;

assign buf_3_address1 = zext_ln186_fu_597_p1;

assign buf_3_d1 = imgInput_data_dout;

assign buf_4_address0 = conv_i130_i_fu_605_p1;

assign buf_4_address1 = zext_ln186_fu_597_p1;

assign buf_4_d1 = imgInput_data_dout;

assign buf_r_address0 = conv_i130_i_fu_605_p1;

assign buf_r_address1 = zext_ln186_fu_597_p1;

assign buf_r_d1 = imgInput_data_dout;

assign cmp_i_i_i_fu_628_p2 = ((col_reg_1302_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign col_5_fu_574_p2 = (ap_sig_allocacmp_col + 13'd1);

assign conv_i130_i_fu_605_p1 = col_reg_1302_pp0_iter1_reg;

assign icmp_ln178_fu_568_p2 = ((ap_sig_allocacmp_col == add_ln446) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_580_p2 = ((zext_ln415_2_cast_fu_456_p1 > ap_sig_allocacmp_col) ? 1'b1 : 1'b0);

assign icmp_ln333_fu_622_p2 = ((tmp_fu_613_p4 == 12'd0) ? 1'b1 : 1'b0);

assign imgInput_data_blk_n = 1'b1;

assign imgOutput_data_blk_n = 1'b1;

assign imgOutput_data_din = pf_imgOutput_data_U_data_out;

assign p_0_0_042886_fu_679_p3 = ((spec_select69[0:0] == 1'b1) ? tmp_s_fu_658_p7 : tmp_53_fu_669_p7);

assign p_0_0_0428_187_fu_696_p3 = ((spec_select73[0:0] == 1'b1) ? tmp_s_fu_658_p7 : tmp_54_fu_686_p7);

assign p_0_0_0428_288_fu_713_p3 = ((spec_select77[0:0] == 1'b1) ? tmp_s_fu_658_p7 : tmp_55_fu_703_p7);

assign p_0_0_0428_389_fu_730_p3 = ((spec_select81[0:0] == 1'b1) ? tmp_s_fu_658_p7 : tmp_56_fu_720_p7);

assign p_0_0_0428_490_fu_747_p3 = ((spec_select85[0:0] == 1'b1) ? tmp_s_fu_658_p7 : tmp_57_fu_737_p7);

assign row_ind_15_read_reg_1296 = row_ind_15;

assign src_buf_20_fu_1000_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_23_reg_1481 : src_buf_1_fu_124);

assign src_buf_21_fu_994_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_23_reg_1481 : src_buf_2_fu_128);

assign src_buf_22_fu_989_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_23_reg_1481 : src_buf_3_load_reg_1489);

assign src_buf_23_fu_782_p3 = ((icmp_ln185_reg_1314_pp0_iter3_reg[0:0] == 1'b1) ? p_0_0_042886_fu_679_p3 : src_buf_3_fu_132);

assign src_buf_24_fu_983_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_27_reg_1473 : src_buf_5_fu_140);

assign src_buf_25_fu_977_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_27_reg_1473 : src_buf_6_fu_144);

assign src_buf_26_fu_972_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_27_reg_1473 : src_buf_7_load_reg_1494);

assign src_buf_27_fu_775_p3 = ((icmp_ln185_reg_1314_pp0_iter3_reg[0:0] == 1'b1) ? p_0_0_0428_187_fu_696_p3 : src_buf_7_fu_148);

assign src_buf_28_fu_966_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_31_reg_1465 : src_buf_9_fu_156);

assign src_buf_29_fu_960_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_31_reg_1465 : src_buf_10_fu_160);

assign src_buf_30_fu_955_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_31_reg_1465 : src_buf_11_load_reg_1499);

assign src_buf_31_fu_768_p3 = ((icmp_ln185_reg_1314_pp0_iter3_reg[0:0] == 1'b1) ? p_0_0_0428_288_fu_713_p3 : src_buf_11_fu_164);

assign src_buf_32_fu_949_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_35_reg_1458 : src_buf_13_fu_172);

assign src_buf_33_fu_943_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_35_reg_1458 : src_buf_14_fu_176);

assign src_buf_34_fu_804_p3 = ((cmp_i_i_i_reg_1356_pp0_iter3_reg[0:0] == 1'b1) ? src_buf_35_fu_761_p3 : src_buf_15_fu_180);

assign src_buf_35_fu_761_p3 = ((icmp_ln185_reg_1314_pp0_iter3_reg[0:0] == 1'b1) ? p_0_0_0428_389_fu_730_p3 : src_buf_15_fu_180);

assign src_buf_36_fu_937_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_39_reg_1450 : src_buf_17_fu_188);

assign src_buf_37_fu_931_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_39_reg_1450 : src_buf_18_fu_192);

assign src_buf_38_fu_926_p3 = ((cmp_i_i_i_reg_1356_pp0_iter4_reg[0:0] == 1'b1) ? src_buf_39_reg_1450 : src_buf_19_load_reg_1504);

assign src_buf_39_fu_754_p3 = ((icmp_ln185_reg_1314_pp0_iter3_reg[0:0] == 1'b1) ? p_0_0_0428_490_fu_747_p3 : src_buf_19_fu_196);

assign tmp_fu_613_p4 = {{col_reg_1302_pp0_iter1_reg[12:1]}};

assign zext_ln186_fu_597_p1 = col_reg_1302;

assign zext_ln415_2_cast_fu_456_p1 = zext_ln415_2;

endmodule //modefilter_accel_xFModeNxN_3840_2160_3_16_1_2_2_0_2162_5_25_Pipeline_Col_Loop
