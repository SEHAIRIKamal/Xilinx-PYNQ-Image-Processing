// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Filter2d_accel_Filter2d_accel,hls_ip_2023_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=7.268000,HLS_SYN_LAT=-1,HLS_SYN_TPT=-1,HLS_SYN_MEM=18,HLS_SYN_DSP=0,HLS_SYN_FF=3828,HLS_SYN_LUT=3862,HLS_VERSION=2023_1}" *)

module Filter2d_accel (
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        ap_clk,
        ap_rst_n,
        interrupt,
        img_in_TDATA,
        img_in_TKEEP,
        img_in_TSTRB,
        img_in_TUSER,
        img_in_TLAST,
        img_in_TID,
        img_in_TDEST,
        filter_TDATA,
        img_out_TDATA,
        img_out_TKEEP,
        img_out_TSTRB,
        img_out_TUSER,
        img_out_TLAST,
        img_out_TID,
        img_out_TDEST,
        img_in_TVALID,
        img_in_TREADY,
        filter_TVALID,
        filter_TREADY,
        img_out_TVALID,
        img_out_TREADY
);

parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
input   ap_clk;
input   ap_rst_n;
output   interrupt;
input  [23:0] img_in_TDATA;
input  [2:0] img_in_TKEEP;
input  [2:0] img_in_TSTRB;
input  [0:0] img_in_TUSER;
input  [0:0] img_in_TLAST;
input  [0:0] img_in_TID;
input  [0:0] img_in_TDEST;
input  [15:0] filter_TDATA;
output  [23:0] img_out_TDATA;
output  [2:0] img_out_TKEEP;
output  [2:0] img_out_TSTRB;
output  [0:0] img_out_TUSER;
output  [0:0] img_out_TLAST;
output  [0:0] img_out_TID;
output  [0:0] img_out_TDEST;
input   img_in_TVALID;
output   img_in_TREADY;
input   filter_TVALID;
output   filter_TREADY;
output   img_out_TVALID;
input   img_out_TREADY;

 reg    ap_rst_n_inv;
wire   [7:0] shift;
wire   [31:0] rows;
wire   [31:0] cols;
wire    ap_start;
wire    ap_ready;
wire    ap_done;
wire    ap_idle;
wire    entry_proc_U0_ap_start;
wire    entry_proc_U0_ap_done;
wire    entry_proc_U0_ap_continue;
wire    entry_proc_U0_ap_idle;
wire    entry_proc_U0_ap_ready;
wire    entry_proc_U0_start_out;
wire    entry_proc_U0_start_write;
wire   [7:0] entry_proc_U0_shift_c_din;
wire    entry_proc_U0_shift_c_write;
wire    Block_entry1_proc_U0_ap_start;
wire    Block_entry1_proc_U0_ap_done;
wire    Block_entry1_proc_U0_ap_continue;
wire    Block_entry1_proc_U0_ap_idle;
wire    Block_entry1_proc_U0_ap_ready;
wire   [31:0] Block_entry1_proc_U0_ap_return_0;
wire   [31:0] Block_entry1_proc_U0_ap_return_1;
wire   [31:0] Block_entry1_proc_U0_ap_return_2;
wire   [31:0] Block_entry1_proc_U0_ap_return_3;
wire    ap_channel_done_imgInput_cols_c10_channel;
wire    imgInput_cols_c10_channel_full_n;
reg    ap_sync_reg_channel_write_imgInput_cols_c10_channel;
wire    ap_sync_channel_write_imgInput_cols_c10_channel;
wire    ap_channel_done_imgInput_rows_c9_channel;
wire    imgInput_rows_c9_channel_full_n;
reg    ap_sync_reg_channel_write_imgInput_rows_c9_channel;
wire    ap_sync_channel_write_imgInput_rows_c9_channel;
wire    ap_channel_done_imgOutput_cols_channel;
wire    imgOutput_cols_channel_full_n;
reg    ap_sync_reg_channel_write_imgOutput_cols_channel;
wire    ap_sync_channel_write_imgOutput_cols_channel;
wire    ap_channel_done_imgOutput_rows_channel;
wire    imgOutput_rows_channel_full_n;
reg    ap_sync_reg_channel_write_imgOutput_rows_channel;
wire    ap_sync_channel_write_imgOutput_rows_channel;
wire    axis2xfMat_24_16_3840_2160_1_U0_ap_start;
wire    axis2xfMat_24_16_3840_2160_1_U0_ap_done;
wire    axis2xfMat_24_16_3840_2160_1_U0_ap_continue;
wire    axis2xfMat_24_16_3840_2160_1_U0_ap_idle;
wire    axis2xfMat_24_16_3840_2160_1_U0_ap_ready;
wire    axis2xfMat_24_16_3840_2160_1_U0_img_in_TREADY;
wire   [23:0] axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_din;
wire    axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_write;
wire   [31:0] axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_din;
wire    axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_write;
wire   [31:0] axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_din;
wire    axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_write;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_start;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_done;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_continue;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_idle;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_ready;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_rows_read;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_cols_read;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgInput_data_read;
wire   [23:0] filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_din;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_write;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_filter_TREADY;
wire    filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_shift_read;
wire    xfMat2axis_24_16_3840_2160_1_U0_ap_start;
wire    xfMat2axis_24_16_3840_2160_1_U0_ap_done;
wire    xfMat2axis_24_16_3840_2160_1_U0_ap_continue;
wire    xfMat2axis_24_16_3840_2160_1_U0_ap_idle;
wire    xfMat2axis_24_16_3840_2160_1_U0_ap_ready;
wire    xfMat2axis_24_16_3840_2160_1_U0_imgOutput_data_read;
wire   [23:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TDATA;
wire    xfMat2axis_24_16_3840_2160_1_U0_img_out_TVALID;
wire   [2:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TKEEP;
wire   [2:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TSTRB;
wire   [0:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TUSER;
wire   [0:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TLAST;
wire   [0:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TID;
wire   [0:0] xfMat2axis_24_16_3840_2160_1_U0_img_out_TDEST;
wire    shift_c_full_n;
wire   [7:0] shift_c_dout;
wire   [2:0] shift_c_num_data_valid;
wire   [2:0] shift_c_fifo_cap;
wire    shift_c_empty_n;
wire   [31:0] imgOutput_rows_channel_dout;
wire   [2:0] imgOutput_rows_channel_num_data_valid;
wire   [2:0] imgOutput_rows_channel_fifo_cap;
wire    imgOutput_rows_channel_empty_n;
wire   [31:0] imgOutput_cols_channel_dout;
wire   [2:0] imgOutput_cols_channel_num_data_valid;
wire   [2:0] imgOutput_cols_channel_fifo_cap;
wire    imgOutput_cols_channel_empty_n;
wire   [31:0] imgInput_rows_c9_channel_dout;
wire   [1:0] imgInput_rows_c9_channel_num_data_valid;
wire   [1:0] imgInput_rows_c9_channel_fifo_cap;
wire    imgInput_rows_c9_channel_empty_n;
wire   [31:0] imgInput_cols_c10_channel_dout;
wire   [1:0] imgInput_cols_c10_channel_num_data_valid;
wire   [1:0] imgInput_cols_c10_channel_fifo_cap;
wire    imgInput_cols_c10_channel_empty_n;
wire    imgInput_data_full_n;
wire   [23:0] imgInput_data_dout;
wire   [1:0] imgInput_data_num_data_valid;
wire   [1:0] imgInput_data_fifo_cap;
wire    imgInput_data_empty_n;
wire    imgInput_rows_c_full_n;
wire   [31:0] imgInput_rows_c_dout;
wire   [1:0] imgInput_rows_c_num_data_valid;
wire   [1:0] imgInput_rows_c_fifo_cap;
wire    imgInput_rows_c_empty_n;
wire    imgInput_cols_c_full_n;
wire   [31:0] imgInput_cols_c_dout;
wire   [1:0] imgInput_cols_c_num_data_valid;
wire   [1:0] imgInput_cols_c_fifo_cap;
wire    imgInput_cols_c_empty_n;
wire    imgOutput_data_full_n;
wire   [23:0] imgOutput_data_dout;
wire   [1:0] imgOutput_data_num_data_valid;
wire   [1:0] imgOutput_data_fifo_cap;
wire    imgOutput_data_empty_n;
wire    ap_sync_ready;
reg    ap_sync_reg_entry_proc_U0_ap_ready;
wire    ap_sync_entry_proc_U0_ap_ready;
reg    ap_sync_reg_Block_entry1_proc_U0_ap_ready;
wire    ap_sync_Block_entry1_proc_U0_ap_ready;
wire   [0:0] start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_din;
wire    start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_full_n;
wire   [0:0] start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_dout;
wire    start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_empty_n;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_imgInput_cols_c10_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgInput_rows_c9_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgOutput_cols_channel = 1'b0;
#0 ap_sync_reg_channel_write_imgOutput_rows_channel = 1'b0;
#0 ap_sync_reg_entry_proc_U0_ap_ready = 1'b0;
#0 ap_sync_reg_Block_entry1_proc_U0_ap_ready = 1'b0;
end

Filter2d_accel_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .shift(shift),
    .rows(rows),
    .cols(cols),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

Filter2d_accel_entry_proc entry_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(entry_proc_U0_ap_start),
    .start_full_n(start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_full_n),
    .ap_done(entry_proc_U0_ap_done),
    .ap_continue(entry_proc_U0_ap_continue),
    .ap_idle(entry_proc_U0_ap_idle),
    .ap_ready(entry_proc_U0_ap_ready),
    .start_out(entry_proc_U0_start_out),
    .start_write(entry_proc_U0_start_write),
    .shift(shift),
    .shift_c_din(entry_proc_U0_shift_c_din),
    .shift_c_num_data_valid(shift_c_num_data_valid),
    .shift_c_fifo_cap(shift_c_fifo_cap),
    .shift_c_full_n(shift_c_full_n),
    .shift_c_write(entry_proc_U0_shift_c_write)
);

Filter2d_accel_Block_entry1_proc Block_entry1_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_entry1_proc_U0_ap_start),
    .ap_done(Block_entry1_proc_U0_ap_done),
    .ap_continue(Block_entry1_proc_U0_ap_continue),
    .ap_idle(Block_entry1_proc_U0_ap_idle),
    .ap_ready(Block_entry1_proc_U0_ap_ready),
    .rows(rows),
    .cols(cols),
    .ap_return_0(Block_entry1_proc_U0_ap_return_0),
    .ap_return_1(Block_entry1_proc_U0_ap_return_1),
    .ap_return_2(Block_entry1_proc_U0_ap_return_2),
    .ap_return_3(Block_entry1_proc_U0_ap_return_3)
);

Filter2d_accel_axis2xfMat_24_16_3840_2160_1_s axis2xfMat_24_16_3840_2160_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(axis2xfMat_24_16_3840_2160_1_U0_ap_start),
    .ap_done(axis2xfMat_24_16_3840_2160_1_U0_ap_done),
    .ap_continue(axis2xfMat_24_16_3840_2160_1_U0_ap_continue),
    .ap_idle(axis2xfMat_24_16_3840_2160_1_U0_ap_idle),
    .ap_ready(axis2xfMat_24_16_3840_2160_1_U0_ap_ready),
    .img_in_TDATA(img_in_TDATA),
    .img_in_TVALID(img_in_TVALID),
    .img_in_TREADY(axis2xfMat_24_16_3840_2160_1_U0_img_in_TREADY),
    .img_in_TKEEP(img_in_TKEEP),
    .img_in_TSTRB(img_in_TSTRB),
    .img_in_TUSER(img_in_TUSER),
    .img_in_TLAST(img_in_TLAST),
    .img_in_TID(img_in_TID),
    .img_in_TDEST(img_in_TDEST),
    .p_read(imgInput_rows_c9_channel_dout),
    .p_read1(imgInput_cols_c10_channel_dout),
    .imgInput_data_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_din),
    .imgInput_data_num_data_valid(imgInput_data_num_data_valid),
    .imgInput_data_fifo_cap(imgInput_data_fifo_cap),
    .imgInput_data_full_n(imgInput_data_full_n),
    .imgInput_data_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_write),
    .imgInput_rows_c_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_din),
    .imgInput_rows_c_num_data_valid(imgInput_rows_c_num_data_valid),
    .imgInput_rows_c_fifo_cap(imgInput_rows_c_fifo_cap),
    .imgInput_rows_c_full_n(imgInput_rows_c_full_n),
    .imgInput_rows_c_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_write),
    .imgInput_cols_c_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_din),
    .imgInput_cols_c_num_data_valid(imgInput_cols_c_num_data_valid),
    .imgInput_cols_c_fifo_cap(imgInput_cols_c_fifo_cap),
    .imgInput_cols_c_full_n(imgInput_cols_c_full_n),
    .imgInput_cols_c_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_write)
);

Filter2d_accel_filter2D_0_3_3_16_16_3840_2160_1_2_2_s filter2D_0_3_3_16_16_3840_2160_1_2_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_start),
    .ap_done(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_done),
    .ap_continue(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_continue),
    .ap_idle(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_idle),
    .ap_ready(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_ready),
    .p_src_mat_rows_dout(imgInput_rows_c_dout),
    .p_src_mat_rows_num_data_valid(imgInput_rows_c_num_data_valid),
    .p_src_mat_rows_fifo_cap(imgInput_rows_c_fifo_cap),
    .p_src_mat_rows_empty_n(imgInput_rows_c_empty_n),
    .p_src_mat_rows_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_rows_read),
    .p_src_mat_cols_dout(imgInput_cols_c_dout),
    .p_src_mat_cols_num_data_valid(imgInput_cols_c_num_data_valid),
    .p_src_mat_cols_fifo_cap(imgInput_cols_c_fifo_cap),
    .p_src_mat_cols_empty_n(imgInput_cols_c_empty_n),
    .p_src_mat_cols_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_cols_read),
    .imgInput_data_dout(imgInput_data_dout),
    .imgInput_data_num_data_valid(imgInput_data_num_data_valid),
    .imgInput_data_fifo_cap(imgInput_data_fifo_cap),
    .imgInput_data_empty_n(imgInput_data_empty_n),
    .imgInput_data_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgInput_data_read),
    .imgOutput_data_din(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_din),
    .imgOutput_data_num_data_valid(imgOutput_data_num_data_valid),
    .imgOutput_data_fifo_cap(imgOutput_data_fifo_cap),
    .imgOutput_data_full_n(imgOutput_data_full_n),
    .imgOutput_data_write(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_write),
    .filter_TDATA(filter_TDATA),
    .filter_TVALID(filter_TVALID),
    .filter_TREADY(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_filter_TREADY),
    .p_shift_dout(shift_c_dout),
    .p_shift_num_data_valid(shift_c_num_data_valid),
    .p_shift_fifo_cap(shift_c_fifo_cap),
    .p_shift_empty_n(shift_c_empty_n),
    .p_shift_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_shift_read)
);

Filter2d_accel_xfMat2axis_24_16_3840_2160_1_s xfMat2axis_24_16_3840_2160_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(xfMat2axis_24_16_3840_2160_1_U0_ap_start),
    .ap_done(xfMat2axis_24_16_3840_2160_1_U0_ap_done),
    .ap_continue(xfMat2axis_24_16_3840_2160_1_U0_ap_continue),
    .ap_idle(xfMat2axis_24_16_3840_2160_1_U0_ap_idle),
    .ap_ready(xfMat2axis_24_16_3840_2160_1_U0_ap_ready),
    .p_read(imgOutput_rows_channel_dout),
    .p_read1(imgOutput_cols_channel_dout),
    .imgOutput_data_dout(imgOutput_data_dout),
    .imgOutput_data_num_data_valid(imgOutput_data_num_data_valid),
    .imgOutput_data_fifo_cap(imgOutput_data_fifo_cap),
    .imgOutput_data_empty_n(imgOutput_data_empty_n),
    .imgOutput_data_read(xfMat2axis_24_16_3840_2160_1_U0_imgOutput_data_read),
    .img_out_TDATA(xfMat2axis_24_16_3840_2160_1_U0_img_out_TDATA),
    .img_out_TVALID(xfMat2axis_24_16_3840_2160_1_U0_img_out_TVALID),
    .img_out_TREADY(img_out_TREADY),
    .img_out_TKEEP(xfMat2axis_24_16_3840_2160_1_U0_img_out_TKEEP),
    .img_out_TSTRB(xfMat2axis_24_16_3840_2160_1_U0_img_out_TSTRB),
    .img_out_TUSER(xfMat2axis_24_16_3840_2160_1_U0_img_out_TUSER),
    .img_out_TLAST(xfMat2axis_24_16_3840_2160_1_U0_img_out_TLAST),
    .img_out_TID(xfMat2axis_24_16_3840_2160_1_U0_img_out_TID),
    .img_out_TDEST(xfMat2axis_24_16_3840_2160_1_U0_img_out_TDEST)
);

Filter2d_accel_fifo_w8_d4_S shift_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(entry_proc_U0_shift_c_din),
    .if_full_n(shift_c_full_n),
    .if_write(entry_proc_U0_shift_c_write),
    .if_dout(shift_c_dout),
    .if_num_data_valid(shift_c_num_data_valid),
    .if_fifo_cap(shift_c_fifo_cap),
    .if_empty_n(shift_c_empty_n),
    .if_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_shift_read)
);

Filter2d_accel_fifo_w32_d4_S imgOutput_rows_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_0),
    .if_full_n(imgOutput_rows_channel_full_n),
    .if_write(ap_channel_done_imgOutput_rows_channel),
    .if_dout(imgOutput_rows_channel_dout),
    .if_num_data_valid(imgOutput_rows_channel_num_data_valid),
    .if_fifo_cap(imgOutput_rows_channel_fifo_cap),
    .if_empty_n(imgOutput_rows_channel_empty_n),
    .if_read(xfMat2axis_24_16_3840_2160_1_U0_ap_ready)
);

Filter2d_accel_fifo_w32_d4_S imgOutput_cols_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_1),
    .if_full_n(imgOutput_cols_channel_full_n),
    .if_write(ap_channel_done_imgOutput_cols_channel),
    .if_dout(imgOutput_cols_channel_dout),
    .if_num_data_valid(imgOutput_cols_channel_num_data_valid),
    .if_fifo_cap(imgOutput_cols_channel_fifo_cap),
    .if_empty_n(imgOutput_cols_channel_empty_n),
    .if_read(xfMat2axis_24_16_3840_2160_1_U0_ap_ready)
);

Filter2d_accel_fifo_w32_d2_S imgInput_rows_c9_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_2),
    .if_full_n(imgInput_rows_c9_channel_full_n),
    .if_write(ap_channel_done_imgInput_rows_c9_channel),
    .if_dout(imgInput_rows_c9_channel_dout),
    .if_num_data_valid(imgInput_rows_c9_channel_num_data_valid),
    .if_fifo_cap(imgInput_rows_c9_channel_fifo_cap),
    .if_empty_n(imgInput_rows_c9_channel_empty_n),
    .if_read(axis2xfMat_24_16_3840_2160_1_U0_ap_ready)
);

Filter2d_accel_fifo_w32_d2_S imgInput_cols_c10_channel_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_entry1_proc_U0_ap_return_3),
    .if_full_n(imgInput_cols_c10_channel_full_n),
    .if_write(ap_channel_done_imgInput_cols_c10_channel),
    .if_dout(imgInput_cols_c10_channel_dout),
    .if_num_data_valid(imgInput_cols_c10_channel_num_data_valid),
    .if_fifo_cap(imgInput_cols_c10_channel_fifo_cap),
    .if_empty_n(imgInput_cols_c10_channel_empty_n),
    .if_read(axis2xfMat_24_16_3840_2160_1_U0_ap_ready)
);

Filter2d_accel_fifo_w24_d2_S imgInput_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_din),
    .if_full_n(imgInput_data_full_n),
    .if_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_data_write),
    .if_dout(imgInput_data_dout),
    .if_num_data_valid(imgInput_data_num_data_valid),
    .if_fifo_cap(imgInput_data_fifo_cap),
    .if_empty_n(imgInput_data_empty_n),
    .if_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgInput_data_read)
);

Filter2d_accel_fifo_w32_d2_S imgInput_rows_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_din),
    .if_full_n(imgInput_rows_c_full_n),
    .if_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_rows_c_write),
    .if_dout(imgInput_rows_c_dout),
    .if_num_data_valid(imgInput_rows_c_num_data_valid),
    .if_fifo_cap(imgInput_rows_c_fifo_cap),
    .if_empty_n(imgInput_rows_c_empty_n),
    .if_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_rows_read)
);

Filter2d_accel_fifo_w32_d2_S imgInput_cols_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_din),
    .if_full_n(imgInput_cols_c_full_n),
    .if_write(axis2xfMat_24_16_3840_2160_1_U0_imgInput_cols_c_write),
    .if_dout(imgInput_cols_c_dout),
    .if_num_data_valid(imgInput_cols_c_num_data_valid),
    .if_fifo_cap(imgInput_cols_c_fifo_cap),
    .if_empty_n(imgInput_cols_c_empty_n),
    .if_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_p_src_mat_cols_read)
);

Filter2d_accel_fifo_w24_d2_S imgOutput_data_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_din),
    .if_full_n(imgOutput_data_full_n),
    .if_write(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_imgOutput_data_write),
    .if_dout(imgOutput_data_dout),
    .if_num_data_valid(imgOutput_data_num_data_valid),
    .if_fifo_cap(imgOutput_data_fifo_cap),
    .if_empty_n(imgOutput_data_empty_n),
    .if_read(xfMat2axis_24_16_3840_2160_1_U0_imgOutput_data_read)
);

Filter2d_accel_start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0 start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_din),
    .if_full_n(start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_full_n),
    .if_write(entry_proc_U0_start_write),
    .if_dout(start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_dout),
    .if_empty_n(start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_empty_n),
    .if_read(filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_Block_entry1_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_Block_entry1_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_Block_entry1_proc_U0_ap_ready <= ap_sync_Block_entry1_proc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgInput_cols_c10_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgInput_cols_c10_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgInput_cols_c10_channel <= ap_sync_channel_write_imgInput_cols_c10_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgInput_rows_c9_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgInput_rows_c9_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgInput_rows_c9_channel <= ap_sync_channel_write_imgInput_rows_c9_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgOutput_cols_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgOutput_cols_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgOutput_cols_channel <= ap_sync_channel_write_imgOutput_cols_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_channel_write_imgOutput_rows_channel <= 1'b0;
    end else begin
        if (((Block_entry1_proc_U0_ap_done & Block_entry1_proc_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_imgOutput_rows_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_imgOutput_rows_channel <= ap_sync_channel_write_imgOutput_rows_channel;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_entry_proc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_entry_proc_U0_ap_ready <= ap_sync_entry_proc_U0_ap_ready;
        end
    end
end

assign Block_entry1_proc_U0_ap_continue = (ap_sync_channel_write_imgOutput_rows_channel & ap_sync_channel_write_imgOutput_cols_channel & ap_sync_channel_write_imgInput_rows_c9_channel & ap_sync_channel_write_imgInput_cols_c10_channel);

assign Block_entry1_proc_U0_ap_start = ((ap_sync_reg_Block_entry1_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign ap_channel_done_imgInput_cols_c10_channel = ((ap_sync_reg_channel_write_imgInput_cols_c10_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgInput_rows_c9_channel = ((ap_sync_reg_channel_write_imgInput_rows_c9_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgOutput_cols_channel = ((ap_sync_reg_channel_write_imgOutput_cols_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_channel_done_imgOutput_rows_channel = ((ap_sync_reg_channel_write_imgOutput_rows_channel ^ 1'b1) & Block_entry1_proc_U0_ap_done);

assign ap_done = xfMat2axis_24_16_3840_2160_1_U0_ap_done;

assign ap_idle = (xfMat2axis_24_16_3840_2160_1_U0_ap_idle & filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_idle & (imgInput_cols_c10_channel_empty_n ^ 1'b1) & (imgInput_rows_c9_channel_empty_n ^ 1'b1) & (imgOutput_cols_channel_empty_n ^ 1'b1) & (imgOutput_rows_channel_empty_n ^ 1'b1) & entry_proc_U0_ap_idle & axis2xfMat_24_16_3840_2160_1_U0_ap_idle & Block_entry1_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_Block_entry1_proc_U0_ap_ready = (ap_sync_reg_Block_entry1_proc_U0_ap_ready | Block_entry1_proc_U0_ap_ready);

assign ap_sync_channel_write_imgInput_cols_c10_channel = ((imgInput_cols_c10_channel_full_n & ap_channel_done_imgInput_cols_c10_channel) | ap_sync_reg_channel_write_imgInput_cols_c10_channel);

assign ap_sync_channel_write_imgInput_rows_c9_channel = ((imgInput_rows_c9_channel_full_n & ap_channel_done_imgInput_rows_c9_channel) | ap_sync_reg_channel_write_imgInput_rows_c9_channel);

assign ap_sync_channel_write_imgOutput_cols_channel = ((imgOutput_cols_channel_full_n & ap_channel_done_imgOutput_cols_channel) | ap_sync_reg_channel_write_imgOutput_cols_channel);

assign ap_sync_channel_write_imgOutput_rows_channel = ((imgOutput_rows_channel_full_n & ap_channel_done_imgOutput_rows_channel) | ap_sync_reg_channel_write_imgOutput_rows_channel);

assign ap_sync_entry_proc_U0_ap_ready = (entry_proc_U0_ap_ready | ap_sync_reg_entry_proc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_entry_proc_U0_ap_ready & ap_sync_Block_entry1_proc_U0_ap_ready);

assign axis2xfMat_24_16_3840_2160_1_U0_ap_continue = 1'b1;

assign axis2xfMat_24_16_3840_2160_1_U0_ap_start = (imgInput_rows_c9_channel_empty_n & imgInput_cols_c10_channel_empty_n);

assign entry_proc_U0_ap_continue = 1'b1;

assign entry_proc_U0_ap_start = ((ap_sync_reg_entry_proc_U0_ap_ready ^ 1'b1) & ap_start);

assign filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_continue = 1'b1;

assign filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_ap_start = start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_empty_n;

assign filter_TREADY = filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_filter_TREADY;

assign img_in_TREADY = axis2xfMat_24_16_3840_2160_1_U0_img_in_TREADY;

assign img_out_TDATA = xfMat2axis_24_16_3840_2160_1_U0_img_out_TDATA;

assign img_out_TDEST = xfMat2axis_24_16_3840_2160_1_U0_img_out_TDEST;

assign img_out_TID = xfMat2axis_24_16_3840_2160_1_U0_img_out_TID;

assign img_out_TKEEP = xfMat2axis_24_16_3840_2160_1_U0_img_out_TKEEP;

assign img_out_TLAST = xfMat2axis_24_16_3840_2160_1_U0_img_out_TLAST;

assign img_out_TSTRB = xfMat2axis_24_16_3840_2160_1_U0_img_out_TSTRB;

assign img_out_TUSER = xfMat2axis_24_16_3840_2160_1_U0_img_out_TUSER;

assign img_out_TVALID = xfMat2axis_24_16_3840_2160_1_U0_img_out_TVALID;

assign start_for_filter2D_0_3_3_16_16_3840_2160_1_2_2_U0_din = 1'b1;

assign xfMat2axis_24_16_3840_2160_1_U0_ap_continue = 1'b1;

assign xfMat2axis_24_16_3840_2160_1_U0_ap_start = (imgOutput_rows_channel_empty_n & imgOutput_cols_channel_empty_n);


reg find_df_deadlock = 0;
// synthesis translate_off
`include "Filter2d_accel_hls_deadlock_detector.vh"
// synthesis translate_on

reg find_kernel_block = 0;
// synthesis translate_off
`include "Filter2d_accel_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //Filter2d_accel

