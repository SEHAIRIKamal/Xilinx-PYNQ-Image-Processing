// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module Filter2d_accel_filter2D_0_3_3_16_16_3840_2160_1_2_2_s (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        p_src_mat_rows_dout,
        p_src_mat_rows_num_data_valid,
        p_src_mat_rows_fifo_cap,
        p_src_mat_rows_empty_n,
        p_src_mat_rows_read,
        p_src_mat_cols_dout,
        p_src_mat_cols_num_data_valid,
        p_src_mat_cols_fifo_cap,
        p_src_mat_cols_empty_n,
        p_src_mat_cols_read,
        imgInput_data_dout,
        imgInput_data_num_data_valid,
        imgInput_data_fifo_cap,
        imgInput_data_empty_n,
        imgInput_data_read,
        imgOutput_data_din,
        imgOutput_data_num_data_valid,
        imgOutput_data_fifo_cap,
        imgOutput_data_full_n,
        imgOutput_data_write,
        filter_TDATA,
        filter_TVALID,
        filter_TREADY,
        p_shift_dout,
        p_shift_num_data_valid,
        p_shift_fifo_cap,
        p_shift_empty_n,
        p_shift_read
);

parameter    ap_ST_fsm_state1 = 4'd1;
parameter    ap_ST_fsm_pp0_stage0 = 4'd2;
parameter    ap_ST_fsm_state4 = 4'd4;
parameter    ap_ST_fsm_state5 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [31:0] p_src_mat_rows_dout;
input  [1:0] p_src_mat_rows_num_data_valid;
input  [1:0] p_src_mat_rows_fifo_cap;
input   p_src_mat_rows_empty_n;
output   p_src_mat_rows_read;
input  [31:0] p_src_mat_cols_dout;
input  [1:0] p_src_mat_cols_num_data_valid;
input  [1:0] p_src_mat_cols_fifo_cap;
input   p_src_mat_cols_empty_n;
output   p_src_mat_cols_read;
input  [23:0] imgInput_data_dout;
input  [1:0] imgInput_data_num_data_valid;
input  [1:0] imgInput_data_fifo_cap;
input   imgInput_data_empty_n;
output   imgInput_data_read;
output  [23:0] imgOutput_data_din;
input  [1:0] imgOutput_data_num_data_valid;
input  [1:0] imgOutput_data_fifo_cap;
input   imgOutput_data_full_n;
output   imgOutput_data_write;
input  [15:0] filter_TDATA;
input   filter_TVALID;
output   filter_TREADY;
input  [7:0] p_shift_dout;
input  [2:0] p_shift_num_data_valid;
input  [2:0] p_shift_fifo_cap;
input   p_shift_empty_n;
output   p_shift_read;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_mat_rows_read;
reg p_src_mat_cols_read;
reg imgInput_data_read;
reg imgOutput_data_write;
reg p_shift_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_rows_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] first_iter_0_reg_158;
reg    p_src_mat_cols_blk_n;
reg    filter_TDATA_blk_n;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] icmp_ln833_fu_209_p2;
reg    p_shift_blk_n;
reg   [0:0] icmp_ln833_reg_485;
reg    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [15:0] img_width_fu_382_p1;
reg   [15:0] img_width_reg_525;
wire    ap_CS_fsm_state4;
wire   [15:0] img_height_fu_387_p1;
reg   [15:0] img_height_reg_530;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_idle;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_ready;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgInput_data_read;
wire   [23:0] grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_din;
wire    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_write;
reg    grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg;
wire    ap_CS_fsm_state5;
reg   [1:0] j_fu_74;
wire   [1:0] add_ln834_fu_300_p2;
reg   [1:0] i_fu_78;
wire   [1:0] select_ln833_1_fu_247_p3;
reg   [3:0] indvar_flatten_fu_82;
wire   [3:0] add_ln833_fu_215_p2;
reg   [15:0] lfilter_fu_86;
wire   [1:0] select_ln833_fu_233_p3;
reg   [15:0] lfilter_1_fu_90;
reg   [15:0] lfilter_2_fu_94;
reg   [15:0] lfilter_3_fu_98;
reg   [15:0] lfilter_4_fu_102;
reg   [15:0] lfilter_5_fu_106;
reg   [15:0] lfilter_6_fu_110;
reg   [15:0] lfilter_7_fu_114;
reg   [15:0] lfilter_8_fu_118;
reg   [31:0] p_src_mat_rows_load22_fu_122;
reg   [31:0] p_src_mat_cols_load24_fu_126;
reg   [7:0] p_shift_load26_fu_130;
wire   [0:0] icmp_ln834_fu_227_p2;
wire   [1:0] add_ln833_1_fu_241_p2;
reg   [3:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_filter_U_apdone_blk;
wire   [15:0] filter_TDATA_int_regslice;
wire    filter_TVALID_int_regslice;
reg    filter_TREADY_int_regslice;
wire    regslice_both_filter_U_ack_in;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg = 1'b0;
end

Filter2d_accel_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start),
    .ap_done(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done),
    .ap_idle(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_idle),
    .ap_ready(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_ready),
    .imgInput_data_dout(imgInput_data_dout),
    .imgInput_data_num_data_valid(2'd0),
    .imgInput_data_fifo_cap(2'd0),
    .imgInput_data_empty_n(imgInput_data_empty_n),
    .imgInput_data_read(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgInput_data_read),
    .imgOutput_data_din(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_din),
    .imgOutput_data_num_data_valid(2'd0),
    .imgOutput_data_fifo_cap(2'd0),
    .imgOutput_data_full_n(imgOutput_data_full_n),
    .imgOutput_data_write(grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_write),
    .p_filter_kernel_0_0_val1(lfilter_4_fu_102),
    .p_filter_kernel_0_1_val2(lfilter_3_fu_98),
    .p_filter_kernel_0_2_val3(lfilter_5_fu_106),
    .p_filter_kernel_1_0_val4(lfilter_1_fu_90),
    .p_filter_kernel_1_1_val5(lfilter_fu_86),
    .p_filter_kernel_1_2_val6(lfilter_2_fu_94),
    .p_filter_kernel_2_0_val7(lfilter_7_fu_114),
    .p_filter_kernel_2_1_val8(lfilter_6_fu_110),
    .p_filter_kernel_2_2_val9(lfilter_8_fu_118),
    .shift(p_shift_load26_fu_130),
    .rows(img_height_reg_530),
    .cols(img_width_reg_525)
);

Filter2d_accel_regslice_both #(
    .DataWidth( 16 ))
regslice_both_filter_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(filter_TDATA),
    .vld_in(filter_TVALID),
    .ack_in(regslice_both_filter_U_ack_in),
    .data_out(filter_TDATA_int_regslice),
    .vld_out(filter_TVALID_int_regslice),
    .ack_out(filter_TREADY_int_regslice),
    .apdone_blk(regslice_both_filter_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg <= 1'b1;
        end else if ((grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_ready == 1'b1)) begin
            grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_reg_485 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        first_iter_0_reg_158 <= 1'd0;
    end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        first_iter_0_reg_158 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_fu_78 <= 2'd0;
    end else if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_fu_78 <= select_ln833_1_fu_247_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_fu_82 <= 4'd0;
    end else if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_fu_82 <= add_ln833_fu_215_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_fu_74 <= 2'd0;
    end else if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_fu_74 <= add_ln834_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln833_reg_485 <= icmp_ln833_fu_209_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        img_height_reg_530 <= img_height_fu_387_p1;
        img_width_reg_525 <= img_width_fu_382_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd1))) begin
        lfilter_1_fu_90 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln833_fu_233_p3 == 2'd0) & ~(select_ln833_fu_233_p3 == 2'd1) & (icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd1))) begin
        lfilter_2_fu_94 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd0))) begin
        lfilter_3_fu_98 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd0))) begin
        lfilter_4_fu_102 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln833_fu_233_p3 == 2'd0) & ~(select_ln833_fu_233_p3 == 2'd1) & (icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd0))) begin
        lfilter_5_fu_106 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln833_1_fu_247_p3 == 2'd0) & ~(select_ln833_1_fu_247_p3 == 2'd1) & (icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lfilter_6_fu_110 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln833_1_fu_247_p3 == 2'd0) & ~(select_ln833_1_fu_247_p3 == 2'd1) & (icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lfilter_7_fu_114 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if ((~(select_ln833_1_fu_247_p3 == 2'd0) & ~(select_ln833_fu_233_p3 == 2'd0) & ~(select_ln833_fu_233_p3 == 2'd1) & ~(select_ln833_1_fu_247_p3 == 2'd1) & (icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        lfilter_8_fu_118 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (select_ln833_fu_233_p3 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln833_1_fu_247_p3 == 2'd1))) begin
        lfilter_fu_86 <= filter_TDATA_int_regslice;
    end
end

always @ (posedge ap_clk) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_shift_load26_fu_130 <= p_shift_dout;
        p_src_mat_cols_load24_fu_126 <= p_src_mat_cols_dout;
        p_src_mat_rows_load22_fu_122 <= p_src_mat_rows_dout;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln833_fu_209_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_TDATA_blk_n = filter_TVALID_int_regslice;
    end else begin
        filter_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        filter_TREADY_int_regslice = 1'b1;
    end else begin
        filter_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        imgInput_data_read = grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgInput_data_read;
    end else begin
        imgInput_data_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        imgOutput_data_write = grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_write;
    end else begin
        imgOutput_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_shift_blk_n = p_shift_empty_n;
    end else begin
        p_shift_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_shift_read = 1'b1;
    end else begin
        p_shift_read = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_mat_cols_blk_n = p_src_mat_cols_empty_n;
    end else begin
        p_src_mat_cols_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_mat_cols_read = 1'b1;
    end else begin
        p_src_mat_cols_read = 1'b0;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_mat_rows_blk_n = p_src_mat_rows_empty_n;
    end else begin
        p_src_mat_rows_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((first_iter_0_reg_158 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_src_mat_rows_read = 1'b1;
    end else begin
        p_src_mat_rows_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln833_fu_209_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)) & ~((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln833_fu_209_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln833_1_fu_241_p2 = (i_fu_78 + 2'd1);

assign add_ln833_fu_215_p2 = (indvar_flatten_fu_82 + 4'd1);

assign add_ln834_fu_300_p2 = (select_ln833_fu_233_p3 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (filter_TVALID_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((first_iter_0_reg_158 == 1'd1) & (p_src_mat_rows_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_src_mat_cols_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_shift_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln833_fu_209_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (filter_TVALID_int_regslice == 1'b0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (((first_iter_0_reg_158 == 1'd1) & (p_src_mat_rows_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_src_mat_cols_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_shift_empty_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter0 = ((icmp_ln833_fu_209_p2 == 1'd0) & (filter_TVALID_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (((first_iter_0_reg_158 == 1'd1) & (p_src_mat_rows_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_src_mat_cols_empty_n == 1'b0)) | ((first_iter_0_reg_158 == 1'd1) & (p_shift_empty_n == 1'b0)));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign filter_TREADY = regslice_both_filter_U_ack_in;

assign grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start = grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_ap_start_reg;

assign icmp_ln833_fu_209_p2 = ((indvar_flatten_fu_82 == 4'd9) ? 1'b1 : 1'b0);

assign icmp_ln834_fu_227_p2 = ((j_fu_74 == 2'd3) ? 1'b1 : 1'b0);

assign imgOutput_data_din = grp_xFFilter2Dkernel_16_16_3840_2160_16_16_1_2_2_10_10_2160_3_3_3_s_fu_171_imgOutput_data_din;

assign img_height_fu_387_p1 = p_src_mat_rows_load22_fu_122[15:0];

assign img_width_fu_382_p1 = p_src_mat_cols_load24_fu_126[15:0];

assign select_ln833_1_fu_247_p3 = ((icmp_ln834_fu_227_p2[0:0] == 1'b1) ? add_ln833_1_fu_241_p2 : i_fu_78);

assign select_ln833_fu_233_p3 = ((icmp_ln834_fu_227_p2[0:0] == 1'b1) ? 2'd0 : j_fu_74);

endmodule //Filter2d_accel_filter2D_0_3_3_16_16_3840_2160_1_2_2_s
