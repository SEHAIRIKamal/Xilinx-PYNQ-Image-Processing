// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cornerHarris_accel_xFApplyMask3x3_4_s (
        ap_clk,
        ap_rst,
        p_i00_val,
        p_i01_val,
        p_i02_val,
        p_i10_val,
        p_i11_val,
        p_i12_val,
        p_i20_val,
        p_i21_val,
        p_i22_val,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [15:0] p_i00_val;
input  [15:0] p_i01_val;
input  [15:0] p_i02_val;
input  [15:0] p_i10_val;
input  [15:0] p_i11_val;
input  [15:0] p_i12_val;
input  [15:0] p_i20_val;
input  [15:0] p_i21_val;
input  [15:0] p_i22_val;
output  [15:0] ap_return;
input   ap_ce;

reg[15:0] ap_return;

reg  signed [15:0] p_i11_val_read_reg_204;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
wire   [18:0] add_ln73_fu_174_p2;
reg  signed [18:0] add_ln73_reg_209;
wire    ap_block_pp0_stage0;
wire  signed [16:0] sext_ln66_1_fu_86_p1;
wire  signed [16:0] sext_ln66_fu_82_p1;
wire  signed [16:0] sext_ln67_1_fu_100_p1;
wire  signed [16:0] sext_ln67_fu_96_p1;
wire  signed [16:0] sext_ln68_1_fu_114_p1;
wire  signed [16:0] sext_ln68_fu_110_p1;
wire  signed [16:0] sext_ln69_1_fu_128_p1;
wire  signed [16:0] sext_ln69_fu_124_p1;
wire   [16:0] add_ln66_fu_90_p2;
wire   [16:0] add_ln67_fu_104_p2;
wire  signed [17:0] sext_ln70_1_fu_142_p1;
wire  signed [17:0] sext_ln70_fu_138_p1;
wire   [16:0] add_ln68_fu_118_p2;
wire   [16:0] add_ln69_fu_132_p2;
wire  signed [17:0] sext_ln71_1_fu_156_p1;
wire  signed [17:0] sext_ln71_fu_152_p1;
wire   [17:0] g0_fu_146_p2;
wire   [17:0] g1_fu_160_p2;
wire  signed [18:0] sext_ln73_fu_166_p1;
wire  signed [18:0] sext_ln73_1_fu_170_p1;
wire  signed [30:0] grp_fu_195_p3;
wire   [11:0] grp_fu_195_p2;
reg    grp_fu_195_ce;
reg    ap_ce_reg;
reg   [15:0] p_i00_val_int_reg;
reg   [15:0] p_i01_val_int_reg;
reg   [15:0] p_i02_val_int_reg;
reg   [15:0] p_i10_val_int_reg;
reg   [15:0] p_i11_val_int_reg;
reg   [15:0] p_i12_val_int_reg;
reg   [15:0] p_i20_val_int_reg;
reg   [15:0] p_i21_val_int_reg;
reg   [15:0] p_i22_val_int_reg;
reg   [15:0] ap_return_int_reg;

cornerHarris_accel_am_addmul_19s_16s_12ns_31_4_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 12 ),
    .dout_WIDTH( 31 ))
am_addmul_19s_16s_12ns_31_4_0_U174(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln73_reg_209),
    .din1(p_i11_val_read_reg_204),
    .din2(grp_fu_195_p2),
    .ce(grp_fu_195_ce),
    .dout(grp_fu_195_p3)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        add_ln73_reg_209 <= add_ln73_fu_174_p2;
        p_i11_val_read_reg_204 <= p_i11_val_int_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_int_reg <= {{grp_fu_195_p3[30:15]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        p_i00_val_int_reg <= p_i00_val;
        p_i01_val_int_reg <= p_i01_val;
        p_i02_val_int_reg <= p_i02_val;
        p_i10_val_int_reg <= p_i10_val;
        p_i11_val_int_reg <= p_i11_val;
        p_i12_val_int_reg <= p_i12_val;
        p_i20_val_int_reg <= p_i20_val;
        p_i21_val_int_reg <= p_i21_val;
        p_i22_val_int_reg <= p_i22_val;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return = ap_return_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return = {{grp_fu_195_p3[30:15]}};
    end else begin
        ap_return = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_195_ce = 1'b1;
    end else begin
        grp_fu_195_ce = 1'b0;
    end
end

assign add_ln66_fu_90_p2 = ($signed(sext_ln66_1_fu_86_p1) + $signed(sext_ln66_fu_82_p1));

assign add_ln67_fu_104_p2 = ($signed(sext_ln67_1_fu_100_p1) + $signed(sext_ln67_fu_96_p1));

assign add_ln68_fu_118_p2 = ($signed(sext_ln68_1_fu_114_p1) + $signed(sext_ln68_fu_110_p1));

assign add_ln69_fu_132_p2 = ($signed(sext_ln69_1_fu_128_p1) + $signed(sext_ln69_fu_124_p1));

assign add_ln73_fu_174_p2 = ($signed(sext_ln73_fu_166_p1) + $signed(sext_ln73_1_fu_170_p1));

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign g0_fu_146_p2 = ($signed(sext_ln70_1_fu_142_p1) + $signed(sext_ln70_fu_138_p1));

assign g1_fu_160_p2 = ($signed(sext_ln71_1_fu_156_p1) + $signed(sext_ln71_fu_152_p1));

assign grp_fu_195_p2 = 31'd3641;

assign sext_ln66_1_fu_86_p1 = $signed(p_i02_val_int_reg);

assign sext_ln66_fu_82_p1 = $signed(p_i00_val_int_reg);

assign sext_ln67_1_fu_100_p1 = $signed(p_i22_val_int_reg);

assign sext_ln67_fu_96_p1 = $signed(p_i20_val_int_reg);

assign sext_ln68_1_fu_114_p1 = $signed(p_i10_val_int_reg);

assign sext_ln68_fu_110_p1 = $signed(p_i01_val_int_reg);

assign sext_ln69_1_fu_128_p1 = $signed(p_i21_val_int_reg);

assign sext_ln69_fu_124_p1 = $signed(p_i12_val_int_reg);

assign sext_ln70_1_fu_142_p1 = $signed(add_ln67_fu_104_p2);

assign sext_ln70_fu_138_p1 = $signed(add_ln66_fu_90_p2);

assign sext_ln71_1_fu_156_p1 = $signed(add_ln69_fu_132_p2);

assign sext_ln71_fu_152_p1 = $signed(add_ln68_fu_118_p2);

assign sext_ln73_1_fu_170_p1 = $signed(g1_fu_160_p2);

assign sext_ln73_fu_166_p1 = $signed(g0_fu_146_p2);

endmodule //cornerHarris_accel_xFApplyMask3x3_4_s
