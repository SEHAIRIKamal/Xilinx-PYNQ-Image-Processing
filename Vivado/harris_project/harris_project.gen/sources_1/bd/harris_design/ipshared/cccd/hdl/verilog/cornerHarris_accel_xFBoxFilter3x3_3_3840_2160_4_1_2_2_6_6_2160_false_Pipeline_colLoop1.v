// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cornerHarris_accel_xFBoxFilter3x3_3_3840_2160_4_1_2_2_6_6_2160_false_Pipeline_colLoop1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        gradxy_data_dout,
        gradxy_data_num_data_valid,
        gradxy_data_fifo_cap,
        gradxy_data_empty_n,
        gradxy_data_read,
        gradxyg_data_din,
        gradxyg_data_num_data_valid,
        gradxyg_data_fifo_cap,
        gradxyg_data_full_n,
        gradxyg_data_write,
        img_width,
        buf_r_address0,
        buf_r_ce0,
        buf_r_q0,
        buf_r_address1,
        buf_r_ce1,
        buf_r_we1,
        buf_r_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        top_1,
        mid_2,
        bottom_2,
        trunc_ln,
        cmp_i_i488_i,
        p_0_0_078458_out,
        p_0_0_078458_out_ap_vld,
        p_0_0_078757_out,
        p_0_0_078757_out_ap_vld,
        p_0_0_079155_out,
        p_0_0_079155_out_ap_vld,
        p_0_0_079454_out,
        p_0_0_079454_out_ap_vld,
        p_0_0_079852_out,
        p_0_0_079852_out_ap_vld,
        p_0_0_080151_out,
        p_0_0_080151_out_ap_vld,
        grp_xFApplyMask3x3_4_s_fu_173_p_din1,
        grp_xFApplyMask3x3_4_s_fu_173_p_din2,
        grp_xFApplyMask3x3_4_s_fu_173_p_din3,
        grp_xFApplyMask3x3_4_s_fu_173_p_din4,
        grp_xFApplyMask3x3_4_s_fu_173_p_din5,
        grp_xFApplyMask3x3_4_s_fu_173_p_din6,
        grp_xFApplyMask3x3_4_s_fu_173_p_din7,
        grp_xFApplyMask3x3_4_s_fu_173_p_din8,
        grp_xFApplyMask3x3_4_s_fu_173_p_din9,
        grp_xFApplyMask3x3_4_s_fu_173_p_dout0,
        grp_xFApplyMask3x3_4_s_fu_173_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] gradxy_data_dout;
input  [1:0] gradxy_data_num_data_valid;
input  [1:0] gradxy_data_fifo_cap;
input   gradxy_data_empty_n;
output   gradxy_data_read;
output  [15:0] gradxyg_data_din;
input  [1:0] gradxyg_data_num_data_valid;
input  [1:0] gradxyg_data_fifo_cap;
input   gradxyg_data_full_n;
output   gradxyg_data_write;
input  [15:0] img_width;
output  [11:0] buf_r_address0;
output   buf_r_ce0;
input  [15:0] buf_r_q0;
output  [11:0] buf_r_address1;
output   buf_r_ce1;
output   buf_r_we1;
output  [15:0] buf_r_d1;
output  [11:0] buf_1_address0;
output   buf_1_ce0;
input  [15:0] buf_1_q0;
output  [11:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [15:0] buf_1_d1;
output  [11:0] buf_2_address0;
output   buf_2_ce0;
input  [15:0] buf_2_q0;
output  [11:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [15:0] buf_2_d1;
input  [1:0] top_1;
input  [1:0] mid_2;
input  [1:0] bottom_2;
input  [1:0] trunc_ln;
input  [0:0] cmp_i_i488_i;
output  [15:0] p_0_0_078458_out;
output   p_0_0_078458_out_ap_vld;
output  [15:0] p_0_0_078757_out;
output   p_0_0_078757_out_ap_vld;
output  [15:0] p_0_0_079155_out;
output   p_0_0_079155_out_ap_vld;
output  [15:0] p_0_0_079454_out;
output   p_0_0_079454_out_ap_vld;
output  [15:0] p_0_0_079852_out;
output   p_0_0_079852_out_ap_vld;
output  [15:0] p_0_0_080151_out;
output   p_0_0_080151_out_ap_vld;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din1;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din2;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din3;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din4;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din5;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din6;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din7;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din8;
output  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_din9;
input  [15:0] grp_xFApplyMask3x3_4_s_fu_173_p_dout0;
output   grp_xFApplyMask3x3_4_s_fu_173_p_ce;

reg ap_idle;
reg gradxy_data_read;
reg gradxyg_data_write;
reg buf_r_ce0;
reg[11:0] buf_r_address1;
reg buf_r_ce1;
reg buf_r_we1;
reg[15:0] buf_r_d1;
reg buf_1_ce0;
reg[11:0] buf_1_address1;
reg buf_1_ce1;
reg buf_1_we1;
reg[15:0] buf_1_d1;
reg buf_2_ce0;
reg[11:0] buf_2_address1;
reg buf_2_ce1;
reg buf_2_we1;
reg[15:0] buf_2_d1;
reg p_0_0_078458_out_ap_vld;
reg p_0_0_078757_out_ap_vld;
reg p_0_0_079155_out_ap_vld;
reg p_0_0_079454_out_ap_vld;
reg p_0_0_079852_out_ap_vld;
reg p_0_0_080151_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln142_reg_588;
wire   [0:0] cmp_i_i488_i_read_reg_557;
reg    ap_predicate_op63_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
reg   [0:0] icmp_ln170_reg_607;
reg   [0:0] icmp_ln170_reg_607_pp0_iter8_reg;
reg    ap_block_state10_pp0_stage0_iter9;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln142_fu_372_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gradxy_data_blk_n;
wire    ap_block_pp0_stage0;
reg    gradxyg_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] trunc_ln_read_reg_561;
wire   [1:0] bottom_2_read_reg_565;
reg   [12:0] col_reg_580;
reg   [12:0] col_reg_580_pp0_iter1_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter1_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter2_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter3_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter4_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter5_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter6_reg;
reg   [0:0] icmp_ln142_reg_588_pp0_iter7_reg;
wire   [0:0] icmp_ln170_fu_407_p2;
reg   [0:0] icmp_ln170_reg_607_pp0_iter3_reg;
reg   [0:0] icmp_ln170_reg_607_pp0_iter4_reg;
reg   [0:0] icmp_ln170_reg_607_pp0_iter5_reg;
reg   [0:0] icmp_ln170_reg_607_pp0_iter6_reg;
reg   [0:0] icmp_ln170_reg_607_pp0_iter7_reg;
reg   [15:0] buf0_1_load_reg_611;
reg   [15:0] buf0_1_load_reg_611_pp0_iter4_reg;
reg   [15:0] buf0_1_load_reg_611_pp0_iter5_reg;
reg   [15:0] buf0_1_load_reg_611_pp0_iter6_reg;
reg   [15:0] buf0_1_load_reg_611_pp0_iter7_reg;
reg   [15:0] buf1_2_load_reg_618;
reg   [15:0] buf1_2_load_reg_618_pp0_iter4_reg;
reg   [15:0] buf1_2_load_reg_618_pp0_iter5_reg;
reg   [15:0] buf1_2_load_reg_618_pp0_iter6_reg;
reg   [15:0] buf1_2_load_reg_618_pp0_iter7_reg;
reg   [15:0] buf2_1_load_reg_625;
reg   [15:0] buf2_1_load_reg_625_pp0_iter4_reg;
reg   [15:0] buf2_1_load_reg_625_pp0_iter5_reg;
reg   [15:0] buf2_1_load_reg_625_pp0_iter6_reg;
reg   [15:0] buf2_1_load_reg_625_pp0_iter7_reg;
wire   [15:0] buf0_fu_421_p5;
reg   [15:0] buf0_reg_632;
wire   [15:0] buf1_fu_432_p5;
reg   [15:0] buf1_reg_637;
wire   [15:0] buf2_fu_443_p5;
reg   [15:0] buf2_reg_642;
reg    ap_condition_exit_pp0_iter3_stage0;
reg    grp_xFApplyMask3x3_4_s_fu_316_ap_ce;
wire    ap_block_state1_pp0_stage0_iter0_ignore_call13;
reg    ap_block_state2_pp0_stage0_iter1_ignore_call13;
wire    ap_block_state3_pp0_stage0_iter2_ignore_call13;
wire    ap_block_state4_pp0_stage0_iter3_ignore_call13;
wire    ap_block_state5_pp0_stage0_iter4_ignore_call13;
wire    ap_block_state6_pp0_stage0_iter5_ignore_call13;
wire    ap_block_state7_pp0_stage0_iter6_ignore_call13;
wire    ap_block_state8_pp0_stage0_iter7_ignore_call13;
wire    ap_block_state9_pp0_stage0_iter8_ignore_call13;
reg    ap_block_state10_pp0_stage0_iter9_ignore_call13;
reg    ap_block_pp0_stage0_11001_ignoreCallOp98;
wire   [63:0] zext_ln152_fu_389_p1;
wire   [63:0] zext_ln149_fu_395_p1;
wire   [63:0] zext_ln154_fu_401_p1;
reg   [12:0] col_5_fu_92;
wire   [12:0] col_12_fu_378_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_col;
reg   [15:0] p_0_0_080151_fu_96;
reg   [15:0] p_0_0_079454_fu_100;
reg   [15:0] p_0_0_078757_fu_104;
reg   [15:0] buf0_1_fu_108;
reg   [15:0] buf1_2_fu_112;
reg   [15:0] buf2_1_fu_116;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln142_fu_368_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_580;
reg    ap_condition_586;
reg    ap_condition_590;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_done_reg = 1'b0;
end

cornerHarris_accel_mux_3_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_3_2_16_1_1_U185(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(top_1),
    .dout(buf0_fu_421_p5)
);

cornerHarris_accel_mux_3_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_3_2_16_1_1_U186(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(mid_2),
    .dout(buf1_fu_432_p5)
);

cornerHarris_accel_mux_3_2_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_3_2_16_1_1_U187(
    .din0(buf_r_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(bottom_2),
    .dout(buf2_fu_443_p5)
);

cornerHarris_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf0_1_fu_108 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln142_reg_588_pp0_iter2_reg == 1'd1))) begin
            buf0_1_fu_108 <= buf0_fu_421_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf1_2_fu_112 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln142_reg_588_pp0_iter2_reg == 1'd1))) begin
            buf1_2_fu_112 <= buf1_fu_432_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            buf2_1_fu_116 <= 16'd0;
        end else if (((ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln142_reg_588_pp0_iter2_reg == 1'd1))) begin
            buf2_1_fu_116 <= buf2_fu_443_p5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln142_fu_372_p2 == 1'd1))) begin
            col_5_fu_92 <= col_12_fu_378_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            col_5_fu_92 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_078757_fu_104 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            p_0_0_078757_fu_104 <= buf2_1_load_reg_625;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_079454_fu_100 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            p_0_0_079454_fu_100 <= buf1_2_load_reg_618;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            p_0_0_080151_fu_96 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter4 == 1'b1)) begin
            p_0_0_080151_fu_96 <= buf0_1_load_reg_611;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        col_reg_580 <= ap_sig_allocacmp_col;
        col_reg_580_pp0_iter1_reg <= col_reg_580;
        icmp_ln142_reg_588 <= icmp_ln142_fu_372_p2;
        icmp_ln142_reg_588_pp0_iter1_reg <= icmp_ln142_reg_588;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        buf0_1_load_reg_611_pp0_iter4_reg <= buf0_1_load_reg_611;
        buf0_1_load_reg_611_pp0_iter5_reg <= buf0_1_load_reg_611_pp0_iter4_reg;
        buf0_1_load_reg_611_pp0_iter6_reg <= buf0_1_load_reg_611_pp0_iter5_reg;
        buf0_1_load_reg_611_pp0_iter7_reg <= buf0_1_load_reg_611_pp0_iter6_reg;
        buf1_2_load_reg_618_pp0_iter4_reg <= buf1_2_load_reg_618;
        buf1_2_load_reg_618_pp0_iter5_reg <= buf1_2_load_reg_618_pp0_iter4_reg;
        buf1_2_load_reg_618_pp0_iter6_reg <= buf1_2_load_reg_618_pp0_iter5_reg;
        buf1_2_load_reg_618_pp0_iter7_reg <= buf1_2_load_reg_618_pp0_iter6_reg;
        buf2_1_load_reg_625_pp0_iter4_reg <= buf2_1_load_reg_625;
        buf2_1_load_reg_625_pp0_iter5_reg <= buf2_1_load_reg_625_pp0_iter4_reg;
        buf2_1_load_reg_625_pp0_iter6_reg <= buf2_1_load_reg_625_pp0_iter5_reg;
        buf2_1_load_reg_625_pp0_iter7_reg <= buf2_1_load_reg_625_pp0_iter6_reg;
        icmp_ln142_reg_588_pp0_iter2_reg <= icmp_ln142_reg_588_pp0_iter1_reg;
        icmp_ln142_reg_588_pp0_iter3_reg <= icmp_ln142_reg_588_pp0_iter2_reg;
        icmp_ln142_reg_588_pp0_iter4_reg <= icmp_ln142_reg_588_pp0_iter3_reg;
        icmp_ln142_reg_588_pp0_iter5_reg <= icmp_ln142_reg_588_pp0_iter4_reg;
        icmp_ln142_reg_588_pp0_iter6_reg <= icmp_ln142_reg_588_pp0_iter5_reg;
        icmp_ln142_reg_588_pp0_iter7_reg <= icmp_ln142_reg_588_pp0_iter6_reg;
        icmp_ln170_reg_607_pp0_iter3_reg <= icmp_ln170_reg_607;
        icmp_ln170_reg_607_pp0_iter4_reg <= icmp_ln170_reg_607_pp0_iter3_reg;
        icmp_ln170_reg_607_pp0_iter5_reg <= icmp_ln170_reg_607_pp0_iter4_reg;
        icmp_ln170_reg_607_pp0_iter6_reg <= icmp_ln170_reg_607_pp0_iter5_reg;
        icmp_ln170_reg_607_pp0_iter7_reg <= icmp_ln170_reg_607_pp0_iter6_reg;
        icmp_ln170_reg_607_pp0_iter8_reg <= icmp_ln170_reg_607_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf0_1_load_reg_611 <= buf0_1_fu_108;
        buf1_2_load_reg_618 <= buf1_2_fu_112;
        buf2_1_load_reg_625 <= buf2_1_fu_116;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter2_reg == 1'd1))) begin
        buf0_reg_632 <= buf0_fu_421_p5;
        buf1_reg_637 <= buf1_fu_432_p5;
        buf2_reg_642 <= buf2_fu_443_p5;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter1_reg == 1'd1))) begin
        icmp_ln170_reg_607 <= icmp_ln170_fu_407_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln142_fu_372_p2 == 1'd0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln142_reg_588_pp0_iter2_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_col = 13'd0;
    end else begin
        ap_sig_allocacmp_col = col_5_fu_92;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if (((cmp_i_i488_i == 1'd1) & (trunc_ln_read_reg_561 == 2'd1))) begin
            buf_1_address1 = zext_ln149_fu_395_p1;
        end else if (((cmp_i_i488_i_read_reg_557 == 1'd0) & (bottom_2_read_reg_565 == 2'd1))) begin
            buf_1_address1 = zext_ln152_fu_389_p1;
        end else begin
            buf_1_address1 = 'bx;
        end
    end else begin
        buf_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_561 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bottom_2_read_reg_565 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if (((cmp_i_i488_i == 1'd1) & (trunc_ln_read_reg_561 == 2'd1))) begin
            buf_1_d1 = gradxy_data_dout;
        end else if (((cmp_i_i488_i_read_reg_557 == 1'd0) & (bottom_2_read_reg_565 == 2'd1))) begin
            buf_1_d1 = 16'd0;
        end else begin
            buf_1_d1 = 'bx;
        end
    end else begin
        buf_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_561 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bottom_2_read_reg_565 == 2'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if ((1'b1 == ap_condition_590)) begin
            buf_2_address1 = zext_ln149_fu_395_p1;
        end else if ((1'b1 == ap_condition_586)) begin
            buf_2_address1 = zext_ln152_fu_389_p1;
        end else begin
            buf_2_address1 = 'bx;
        end
    end else begin
        buf_2_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((~(trunc_ln_read_reg_561 == 2'd0) & ~(trunc_ln_read_reg_561 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_2_read_reg_565 == 2'd0) & ~(bottom_2_read_reg_565 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if ((1'b1 == ap_condition_590)) begin
            buf_2_d1 = gradxy_data_dout;
        end else if ((1'b1 == ap_condition_586)) begin
            buf_2_d1 = 16'd0;
        end else begin
            buf_2_d1 = 'bx;
        end
    end else begin
        buf_2_d1 = 'bx;
    end
end

always @ (*) begin
    if (((~(trunc_ln_read_reg_561 == 2'd0) & ~(trunc_ln_read_reg_561 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~(bottom_2_read_reg_565 == 2'd0) & ~(bottom_2_read_reg_565 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if (((cmp_i_i488_i == 1'd1) & (trunc_ln_read_reg_561 == 2'd0))) begin
            buf_r_address1 = zext_ln149_fu_395_p1;
        end else if (((cmp_i_i488_i_read_reg_557 == 1'd0) & (bottom_2_read_reg_565 == 2'd0))) begin
            buf_r_address1 = zext_ln152_fu_389_p1;
        end else begin
            buf_r_address1 = 'bx;
        end
    end else begin
        buf_r_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_r_ce0 = 1'b1;
    end else begin
        buf_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_561 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bottom_2_read_reg_565 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_r_ce1 = 1'b1;
    end else begin
        buf_r_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_580)) begin
        if (((cmp_i_i488_i == 1'd1) & (trunc_ln_read_reg_561 == 2'd0))) begin
            buf_r_d1 = gradxy_data_dout;
        end else if (((cmp_i_i488_i_read_reg_557 == 1'd0) & (bottom_2_read_reg_565 == 2'd0))) begin
            buf_r_d1 = 16'd0;
        end else begin
            buf_r_d1 = 'bx;
        end
    end else begin
        buf_r_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln_read_reg_561 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (cmp_i_i488_i_read_reg_557 == 1'd0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (bottom_2_read_reg_565 == 2'd0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        buf_r_we1 = 1'b1;
    end else begin
        buf_r_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op63_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradxy_data_blk_n = gradxy_data_empty_n;
    end else begin
        gradxy_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op63_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gradxy_data_read = 1'b1;
    end else begin
        gradxy_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        gradxyg_data_blk_n = gradxyg_data_full_n;
    end else begin
        gradxyg_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        gradxyg_data_write = 1'b1;
    end else begin
        gradxyg_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp98) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_xFApplyMask3x3_4_s_fu_316_ap_ce = 1'b1;
    end else begin
        grp_xFApplyMask3x3_4_s_fu_316_ap_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_078458_out_ap_vld = 1'b1;
    end else begin
        p_0_0_078458_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_078757_out_ap_vld = 1'b1;
    end else begin
        p_0_0_078757_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_079155_out_ap_vld = 1'b1;
    end else begin
        p_0_0_079155_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_079454_out_ap_vld = 1'b1;
    end else begin
        p_0_0_079454_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_079852_out_ap_vld = 1'b1;
    end else begin
        p_0_0_079852_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln142_reg_588_pp0_iter7_reg == 1'd0))) begin
        p_0_0_080151_out_ap_vld = 1'b1;
    end else begin
        p_0_0_080151_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_ignoreCallOp98 = (((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b1)) | ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9 = ((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter9_ignore_call13 = ((icmp_ln170_reg_607_pp0_iter8_reg == 1'd0) & (gradxyg_data_full_n == 1'b0));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1_ignore_call13 = ((ap_predicate_op63_read_state2 == 1'b1) & (gradxy_data_empty_n == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7_ignore_call13 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8_ignore_call13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_580 = ((1'b0 == ap_block_pp0_stage0) & (icmp_ln142_reg_588 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_condition_586 = (~(bottom_2_read_reg_565 == 2'd0) & ~(bottom_2_read_reg_565 == 2'd1) & (cmp_i_i488_i_read_reg_557 == 1'd0));
end

always @ (*) begin
    ap_condition_590 = (~(trunc_ln_read_reg_561 == 2'd0) & ~(trunc_ln_read_reg_561 == 2'd1) & (cmp_i_i488_i == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op63_read_state2 = ((cmp_i_i488_i == 1'd1) & (icmp_ln142_reg_588 == 1'd1));
end

assign bottom_2_read_reg_565 = bottom_2;

assign buf_1_address0 = zext_ln154_fu_401_p1;

assign buf_2_address0 = zext_ln154_fu_401_p1;

assign buf_r_address0 = zext_ln154_fu_401_p1;

assign cmp_i_i488_i_read_reg_557 = cmp_i_i488_i;

assign col_12_fu_378_p2 = (ap_sig_allocacmp_col + 13'd1);

assign gradxyg_data_din = grp_xFApplyMask3x3_4_s_fu_173_p_dout0;

assign grp_xFApplyMask3x3_4_s_fu_173_p_ce = grp_xFApplyMask3x3_4_s_fu_316_ap_ce;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din1 = p_0_0_080151_fu_96;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din2 = buf0_1_load_reg_611;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din3 = buf0_reg_632;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din4 = p_0_0_079454_fu_100;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din5 = buf1_2_load_reg_618;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din6 = buf1_reg_637;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din7 = p_0_0_078757_fu_104;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din8 = buf2_1_load_reg_625;

assign grp_xFApplyMask3x3_4_s_fu_173_p_din9 = buf2_reg_642;

assign icmp_ln142_fu_372_p2 = ((zext_ln142_fu_368_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_407_p2 = ((col_reg_580_pp0_iter1_reg == 13'd0) ? 1'b1 : 1'b0);

assign p_0_0_078458_out = buf2_1_load_reg_625_pp0_iter7_reg;

assign p_0_0_078757_out = p_0_0_078757_fu_104;

assign p_0_0_079155_out = buf1_2_load_reg_618_pp0_iter7_reg;

assign p_0_0_079454_out = p_0_0_079454_fu_100;

assign p_0_0_079852_out = buf0_1_load_reg_611_pp0_iter7_reg;

assign p_0_0_080151_out = p_0_0_080151_fu_96;

assign trunc_ln_read_reg_561 = trunc_ln;

assign zext_ln142_fu_368_p1 = ap_sig_allocacmp_col;

assign zext_ln149_fu_395_p1 = col_reg_580;

assign zext_ln152_fu_389_p1 = col_reg_580;

assign zext_ln154_fu_401_p1 = col_reg_580_pp0_iter1_reg;

endmodule //cornerHarris_accel_xFBoxFilter3x3_3_3840_2160_4_1_2_2_6_6_2160_false_Pipeline_colLoop1
