// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module cornerHarris_accel_ProcessRad2_8_0_3840_2160_6_0_1_2_2_14_1_2160_Pipeline_Col_Loop (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        thresh_data_dout,
        thresh_data_num_data_valid,
        thresh_data_fifo_cap,
        thresh_data_empty_n,
        thresh_data_read,
        out_mat_data_din,
        out_mat_data_num_data_valid,
        out_mat_data_fifo_cap,
        out_mat_data_full_n,
        out_mat_data_write,
        p_read13,
        p_read12,
        p_read11,
        p_read38,
        p_read39,
        p_read3,
        p_read5,
        p_read6,
        p_read7,
        p_read14,
        p_read19,
        img_width,
        buf_0_address0,
        buf_0_ce0,
        buf_0_q0,
        buf_0_address1,
        buf_0_ce1,
        buf_0_we1,
        buf_0_d1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_2_address0,
        buf_2_ce0,
        buf_2_q0,
        buf_2_address1,
        buf_2_ce1,
        buf_2_we1,
        buf_2_d1,
        buf_3_address0,
        buf_3_ce0,
        buf_3_q0,
        buf_3_address1,
        buf_3_ce1,
        buf_3_we1,
        buf_3_d1,
        buf_4_address0,
        buf_4_ce0,
        buf_4_q0,
        buf_4_address1,
        buf_4_ce1,
        buf_4_we1,
        buf_4_d1,
        tp1_val,
        tp2_val,
        mid_val,
        bottom1_val,
        bottom2_val,
        flag,
        row_ind_val,
        l20_buf_3_0_out,
        l20_buf_3_0_out_ap_vld,
        l20_buf_2_0_out,
        l20_buf_2_0_out_ap_vld,
        l30_buf_1_0_out,
        l30_buf_1_0_out_ap_vld,
        l30_buf_2_0_out,
        l30_buf_2_0_out_ap_vld,
        l30_buf_3_0_out,
        l30_buf_3_0_out_ap_vld,
        l20_buf_1_0_out,
        l20_buf_1_0_out_ap_vld,
        l20_buf_0_0_out,
        l20_buf_0_0_out_ap_vld,
        l40_buf_2_0_out,
        l40_buf_2_0_out_ap_vld,
        l10_buf_3_0_out,
        l10_buf_3_0_out_ap_vld,
        write_flag28_0_out,
        write_flag28_0_out_ap_vld,
        l10_buf_2_0_out,
        l10_buf_2_0_out_ap_vld,
        inter_valx_0_out,
        inter_valx_0_out_ap_vld,
        write_flag31_0_out,
        write_flag31_0_out_ap_vld,
        l10_buf_1_0_out,
        l10_buf_1_0_out_ap_vld,
        read_pointer_0_out,
        read_pointer_0_out_ap_vld,
        write_pointer_0_out,
        write_pointer_0_out_ap_vld,
        l00_buf_2_0_out,
        l00_buf_2_0_out_ap_vld,
        l00_buf_4_0_out,
        l00_buf_4_0_out_ap_vld,
        l10_buf_4_0_out,
        l10_buf_4_0_out_ap_vld,
        l20_buf_4_0_out,
        l20_buf_4_0_out_ap_vld,
        l30_buf_4_0_out,
        l30_buf_4_0_out_ap_vld,
        l40_buf_4_0_out,
        l40_buf_4_0_out_ap_vld,
        Array_0_out,
        Array_0_out_ap_vld,
        l40_buf_3_0_out,
        l40_buf_3_0_out_ap_vld,
        l00_buf_3_0_out,
        l00_buf_3_0_out_ap_vld,
        l10_buf_0_0_out,
        l10_buf_0_0_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] thresh_data_dout;
input  [1:0] thresh_data_num_data_valid;
input  [1:0] thresh_data_fifo_cap;
input   thresh_data_empty_n;
output   thresh_data_read;
output  [7:0] out_mat_data_din;
input  [1:0] out_mat_data_num_data_valid;
input  [1:0] out_mat_data_fifo_cap;
input   out_mat_data_full_n;
output   out_mat_data_write;
input  [31:0] p_read13;
input  [31:0] p_read12;
input  [31:0] p_read11;
input  [31:0] p_read38;
input  [31:0] p_read39;
input  [31:0] p_read3;
input  [31:0] p_read5;
input  [31:0] p_read6;
input  [31:0] p_read7;
input  [31:0] p_read14;
input  [7:0] p_read19;
input  [15:0] img_width;
output  [11:0] buf_0_address0;
output   buf_0_ce0;
input  [31:0] buf_0_q0;
output  [11:0] buf_0_address1;
output   buf_0_ce1;
output   buf_0_we1;
output  [31:0] buf_0_d1;
output  [11:0] buf_1_address0;
output   buf_1_ce0;
input  [31:0] buf_1_q0;
output  [11:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [31:0] buf_1_d1;
output  [11:0] buf_2_address0;
output   buf_2_ce0;
input  [31:0] buf_2_q0;
output  [11:0] buf_2_address1;
output   buf_2_ce1;
output   buf_2_we1;
output  [31:0] buf_2_d1;
output  [11:0] buf_3_address0;
output   buf_3_ce0;
input  [31:0] buf_3_q0;
output  [11:0] buf_3_address1;
output   buf_3_ce1;
output   buf_3_we1;
output  [31:0] buf_3_d1;
output  [11:0] buf_4_address0;
output   buf_4_ce0;
input  [31:0] buf_4_q0;
output  [11:0] buf_4_address1;
output   buf_4_ce1;
output   buf_4_we1;
output  [31:0] buf_4_d1;
input  [2:0] tp1_val;
input  [2:0] tp2_val;
input  [2:0] mid_val;
input  [2:0] bottom1_val;
input  [2:0] bottom2_val;
input  [0:0] flag;
input  [2:0] row_ind_val;
output  [31:0] l20_buf_3_0_out;
output   l20_buf_3_0_out_ap_vld;
output  [31:0] l20_buf_2_0_out;
output   l20_buf_2_0_out_ap_vld;
output  [31:0] l30_buf_1_0_out;
output   l30_buf_1_0_out_ap_vld;
output  [31:0] l30_buf_2_0_out;
output   l30_buf_2_0_out_ap_vld;
output  [31:0] l30_buf_3_0_out;
output   l30_buf_3_0_out_ap_vld;
output  [31:0] l20_buf_1_0_out;
output   l20_buf_1_0_out_ap_vld;
output  [31:0] l20_buf_0_0_out;
output   l20_buf_0_0_out_ap_vld;
output  [31:0] l40_buf_2_0_out;
output   l40_buf_2_0_out_ap_vld;
output  [31:0] l10_buf_3_0_out;
output   l10_buf_3_0_out_ap_vld;
output  [0:0] write_flag28_0_out;
output   write_flag28_0_out_ap_vld;
output  [31:0] l10_buf_2_0_out;
output   l10_buf_2_0_out_ap_vld;
output  [7:0] inter_valx_0_out;
output   inter_valx_0_out_ap_vld;
output  [0:0] write_flag31_0_out;
output   write_flag31_0_out_ap_vld;
output  [31:0] l10_buf_1_0_out;
output   l10_buf_1_0_out_ap_vld;
output  [31:0] read_pointer_0_out;
output   read_pointer_0_out_ap_vld;
output  [31:0] write_pointer_0_out;
output   write_pointer_0_out_ap_vld;
output  [31:0] l00_buf_2_0_out;
output   l00_buf_2_0_out_ap_vld;
output  [31:0] l00_buf_4_0_out;
output   l00_buf_4_0_out_ap_vld;
output  [31:0] l10_buf_4_0_out;
output   l10_buf_4_0_out_ap_vld;
output  [31:0] l20_buf_4_0_out;
output   l20_buf_4_0_out_ap_vld;
output  [31:0] l30_buf_4_0_out;
output   l30_buf_4_0_out_ap_vld;
output  [31:0] l40_buf_4_0_out;
output   l40_buf_4_0_out_ap_vld;
output  [7:0] Array_0_out;
output   Array_0_out_ap_vld;
output  [31:0] l40_buf_3_0_out;
output   l40_buf_3_0_out_ap_vld;
output  [31:0] l00_buf_3_0_out;
output   l00_buf_3_0_out_ap_vld;
output  [31:0] l10_buf_0_0_out;
output   l10_buf_0_0_out_ap_vld;

reg ap_idle;
reg thresh_data_read;
reg out_mat_data_write;
reg buf_0_ce0;
reg buf_0_ce1;
reg buf_0_we1;
reg buf_1_ce0;
reg buf_1_ce1;
reg buf_1_we1;
reg buf_2_ce0;
reg buf_2_ce1;
reg buf_2_we1;
reg buf_3_ce0;
reg buf_3_ce1;
reg buf_3_we1;
reg buf_4_ce0;
reg buf_4_ce1;
reg buf_4_we1;
reg l20_buf_3_0_out_ap_vld;
reg l20_buf_2_0_out_ap_vld;
reg l30_buf_1_0_out_ap_vld;
reg l30_buf_2_0_out_ap_vld;
reg l30_buf_3_0_out_ap_vld;
reg l20_buf_1_0_out_ap_vld;
reg l20_buf_0_0_out_ap_vld;
reg l40_buf_2_0_out_ap_vld;
reg l10_buf_3_0_out_ap_vld;
reg write_flag28_0_out_ap_vld;
reg l10_buf_2_0_out_ap_vld;
reg inter_valx_0_out_ap_vld;
reg write_flag31_0_out_ap_vld;
reg l10_buf_1_0_out_ap_vld;
reg read_pointer_0_out_ap_vld;
reg write_pointer_0_out_ap_vld;
reg l00_buf_2_0_out_ap_vld;
reg l00_buf_4_0_out_ap_vld;
reg l10_buf_4_0_out_ap_vld;
reg l20_buf_4_0_out_ap_vld;
reg l30_buf_4_0_out_ap_vld;
reg l40_buf_4_0_out_ap_vld;
reg Array_0_out_ap_vld;
reg l40_buf_3_0_out_ap_vld;
reg l00_buf_3_0_out_ap_vld;
reg l10_buf_0_0_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln407_reg_1563;
reg    ap_predicate_op108_read_state3;
reg    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
reg   [0:0] icmp_ln437_reg_1567;
reg   [0:0] icmp_ln437_reg_1567_pp0_iter5_reg;
reg   [0:0] icmp_ln450_reg_1571;
reg   [0:0] icmp_ln450_reg_1571_pp0_iter5_reg;
reg    ap_predicate_op194_write_state7;
reg    ap_block_state7_pp0_stage0_iter6;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln407_fu_909_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    thresh_data_blk_n;
wire    ap_block_pp0_stage0;
reg    out_mat_data_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] row_ind_val_read_reg_1519;
reg   [12:0] col_reg_1557;
reg   [12:0] col_reg_1557_pp0_iter2_reg;
reg   [0:0] icmp_ln407_reg_1563_pp0_iter2_reg;
reg   [0:0] icmp_ln407_reg_1563_pp0_iter3_reg;
reg   [0:0] icmp_ln407_reg_1563_pp0_iter4_reg;
wire   [0:0] icmp_ln437_fu_934_p2;
reg   [0:0] icmp_ln437_reg_1567_pp0_iter2_reg;
reg   [0:0] icmp_ln437_reg_1567_pp0_iter3_reg;
reg   [0:0] icmp_ln437_reg_1567_pp0_iter4_reg;
wire   [0:0] icmp_ln450_fu_950_p2;
reg   [0:0] icmp_ln450_reg_1571_pp0_iter2_reg;
reg   [0:0] icmp_ln450_reg_1571_pp0_iter3_reg;
reg   [0:0] icmp_ln450_reg_1571_pp0_iter4_reg;
reg   [31:0] l00_buf_3_0_load_reg_1600;
reg   [31:0] l40_buf_3_0_load_reg_1606;
reg   [31:0] l10_buf_1_0_load_reg_1612;
reg   [31:0] l10_buf_2_0_load_reg_1618;
reg   [31:0] l10_buf_3_0_load_reg_1624;
reg   [31:0] l20_buf_1_0_load_reg_1630;
reg   [31:0] l30_buf_2_0_load_reg_1637;
reg   [31:0] l20_buf_2_0_load_reg_1644;
reg   [31:0] l20_buf_3_0_load_reg_1650;
reg   [31:0] l30_buf_3_0_load_2_reg_1656;
wire   [31:0] call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_return;
reg   [31:0] call_ret2_reg_1661;
wire   [0:0] call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760_ap_return;
reg   [0:0] call_ret5_reg_1666;
reg    ap_condition_exit_pp0_iter4_stage0;
wire    call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_ready;
wire   [31:0] call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_return;
wire    call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_ready;
wire   [31:0] call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_return;
wire    call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_ready;
wire    call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_ready;
wire   [31:0] call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_return;
wire    call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_ready;
wire   [31:0] call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_return;
wire    call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760_ap_ready;
wire   [31:0] buf0_fu_1007_p7;
wire   [31:0] buf1_fu_1023_p7;
wire   [31:0] buf2_fu_1039_p7;
wire   [31:0] buf3_fu_1055_p7;
wire   [31:0] buf4_fu_1071_p7;
wire   [63:0] zext_ln412_fu_961_p1;
wire   [63:0] zext_ln413_fu_969_p1;
reg   [31:0] l10_buf_0_0_fu_188;
reg   [12:0] col_011_fu_192;
wire   [12:0] col_15_fu_914_p2;
wire    ap_loop_init;
reg   [7:0] Array_0_fu_196;
wire   [7:0] select_ln437_fu_1217_p3;
reg   [31:0] l40_buf_4_0_fu_200;
reg   [31:0] l30_buf_4_0_fu_204;
reg   [31:0] l20_buf_4_0_fu_208;
reg   [31:0] l10_buf_4_0_fu_212;
reg   [31:0] l00_buf_4_0_fu_216;
reg   [31:0] l00_buf_2_0_fu_220;
reg   [31:0] l40_buf_2_0_fu_224;
reg   [31:0] l20_buf_0_0_fu_228;
reg   [31:0] l30_buf_3_0_fu_232;
reg   [31:0] l30_buf_1_0_fu_236;
reg   [31:0] write_pointer_0_fu_240;
wire   [31:0] add_ln452_fu_1228_p2;
reg   [0:0] write_flag31_0_fu_244;
reg   [31:0] l00_buf_3_0_fu_248;
reg   [31:0] l40_buf_3_0_fu_252;
reg   [31:0] read_pointer_0_fu_256;
wire   [31:0] add_ln412_fu_923_p2;
reg   [31:0] l10_buf_1_0_fu_260;
reg   [7:0] inter_valx_0_fu_264;
reg   [31:0] l10_buf_2_0_fu_268;
reg   [0:0] write_flag28_0_fu_272;
reg   [31:0] l10_buf_3_0_fu_276;
reg   [31:0] l20_buf_1_0_fu_280;
reg   [31:0] l30_buf_2_0_fu_284;
reg   [31:0] l20_buf_2_0_fu_288;
reg   [31:0] l20_buf_3_0_fu_292;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln407_fu_905_p1;
wire   [11:0] tmp_fu_940_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_865;
reg    ap_condition_870;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

cornerHarris_accel_xfExtractPixels_1_14_6_s call_ret4_xfExtractPixels_1_14_6_s_fu_735(
    .ap_ready(call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_ready),
    .val1_val(buf0_fu_1007_p7),
    .ap_return(call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_14_6_s call_ret3_xfExtractPixels_1_14_6_s_fu_740(
    .ap_ready(call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_ready),
    .val1_val(buf1_fu_1023_p7),
    .ap_return(call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_14_6_s call_ret2_xfExtractPixels_1_14_6_s_fu_745(
    .ap_ready(call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_ready),
    .val1_val(buf2_fu_1039_p7),
    .ap_return(call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_14_6_s call_ret1_xfExtractPixels_1_14_6_s_fu_750(
    .ap_ready(call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_ready),
    .val1_val(buf3_fu_1055_p7),
    .ap_return(call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_return)
);

cornerHarris_accel_xfExtractPixels_1_14_6_s call_ret_xfExtractPixels_1_14_6_s_fu_755(
    .ap_ready(call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_ready),
    .val1_val(buf4_fu_1071_p7),
    .ap_return(call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_return)
);

cornerHarris_accel_xFSuppressionRad2_1_6_ap_uint_8_s call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760(
    .ap_ready(call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760_ap_ready),
    .l00_buf_2_val(l00_buf_2_0_fu_220),
    .l10_buf_1_val(l10_buf_1_0_load_reg_1612),
    .l10_buf_2_val(l10_buf_2_0_load_reg_1618),
    .l10_buf_3_val(l10_buf_3_0_load_reg_1624),
    .l20_buf_0_val(l20_buf_0_0_fu_228),
    .l20_buf_1_val(l20_buf_1_0_load_reg_1630),
    .l20_buf_2_val(l20_buf_2_0_load_reg_1644),
    .l20_buf_3_val(l20_buf_3_0_load_reg_1650),
    .l20_buf_4_val(call_ret2_reg_1661),
    .l30_buf_1_val(l30_buf_1_0_fu_236),
    .l30_buf_2_val(l30_buf_2_0_load_reg_1637),
    .l30_buf_3_val(l30_buf_3_0_load_2_reg_1656),
    .l40_buf_2_val(l40_buf_2_0_fu_224),
    .ap_return(call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760_ap_return)
);

cornerHarris_accel_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U293(
    .din0(buf_0_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(tp1_val),
    .dout(buf0_fu_1007_p7)
);

cornerHarris_accel_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U294(
    .din0(buf_0_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(tp2_val),
    .dout(buf1_fu_1023_p7)
);

cornerHarris_accel_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U295(
    .din0(buf_0_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(mid_val),
    .dout(buf2_fu_1039_p7)
);

cornerHarris_accel_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U296(
    .din0(buf_0_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(bottom1_val),
    .dout(buf3_fu_1055_p7)
);

cornerHarris_accel_mux_5_3_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_5_3_32_1_1_U297(
    .din0(buf_0_q0),
    .din1(buf_1_q0),
    .din2(buf_2_q0),
    .din3(buf_3_q0),
    .din4(buf_4_q0),
    .din5(bottom2_val),
    .dout(buf4_fu_1071_p7)
);

cornerHarris_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter4_stage0)) begin
            ap_enable_reg_pp0_iter5 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            Array_0_fu_196 <= p_read19;
        end else if ((ap_enable_reg_pp0_iter6 == 1'b1)) begin
            Array_0_fu_196 <= select_ln437_fu_1217_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            col_011_fu_192 <= 13'd0;
        end else if (((icmp_ln407_fu_909_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            col_011_fu_192 <= col_15_fu_914_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((icmp_ln437_reg_1567_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
            inter_valx_0_fu_264 <= 8'd0;
        end else if ((1'b1 == ap_condition_865)) begin
            inter_valx_0_fu_264 <= select_ln437_fu_1217_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l00_buf_2_0_fu_220 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            l00_buf_2_0_fu_220 <= l00_buf_3_0_load_reg_1600;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l00_buf_3_0_fu_248 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l00_buf_3_0_fu_248 <= call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l00_buf_4_0_fu_216 <= p_read3;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l00_buf_4_0_fu_216 <= call_ret4_xfExtractPixels_1_14_6_s_fu_735_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l10_buf_1_0_fu_260 <= p_read11;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l10_buf_1_0_fu_260 <= l10_buf_2_0_fu_268;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l10_buf_2_0_fu_268 <= p_read12;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l10_buf_2_0_fu_268 <= l10_buf_3_0_fu_276;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l10_buf_3_0_fu_276 <= p_read13;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l10_buf_3_0_fu_276 <= call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l10_buf_4_0_fu_212 <= p_read5;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l10_buf_4_0_fu_212 <= call_ret3_xfExtractPixels_1_14_6_s_fu_740_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l20_buf_0_0_fu_228 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            l20_buf_0_0_fu_228 <= l20_buf_1_0_load_reg_1630;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l20_buf_1_0_fu_280 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l20_buf_1_0_fu_280 <= l20_buf_2_0_fu_288;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l20_buf_2_0_fu_288 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l20_buf_2_0_fu_288 <= l20_buf_3_0_fu_292;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l20_buf_3_0_fu_292 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l20_buf_3_0_fu_292 <= call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l20_buf_4_0_fu_208 <= p_read6;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l20_buf_4_0_fu_208 <= call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l30_buf_1_0_fu_236 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            l30_buf_1_0_fu_236 <= l30_buf_2_0_load_reg_1637;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l30_buf_2_0_fu_284 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l30_buf_2_0_fu_284 <= l30_buf_3_0_fu_232;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l30_buf_3_0_fu_232 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l30_buf_3_0_fu_232 <= call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l30_buf_4_0_fu_204 <= p_read7;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l30_buf_4_0_fu_204 <= call_ret1_xfExtractPixels_1_14_6_s_fu_750_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l40_buf_2_0_fu_224 <= 32'd0;
        end else if ((ap_enable_reg_pp0_iter5 == 1'b1)) begin
            l40_buf_2_0_fu_224 <= l40_buf_3_0_load_reg_1606;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l40_buf_3_0_fu_252 <= 32'd0;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l40_buf_3_0_fu_252 <= call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            l40_buf_4_0_fu_200 <= p_read14;
        end else if (((icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
            l40_buf_4_0_fu_200 <= call_ret_xfExtractPixels_1_14_6_s_fu_755_ap_return;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            read_pointer_0_fu_256 <= p_read38;
        end else if ((1'b1 == ap_condition_870)) begin
            read_pointer_0_fu_256 <= add_ln412_fu_923_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        write_flag28_0_fu_272 <= 1'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln450_reg_1571_pp0_iter5_reg == 1'd0) & (icmp_ln437_reg_1567_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln437_reg_1567_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1)))) begin
        write_flag28_0_fu_272 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            write_flag31_0_fu_244 <= 1'd0;
        end else if (((icmp_ln437_reg_1567_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
            write_flag31_0_fu_244 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            write_pointer_0_fu_240 <= p_read39;
        end else if ((1'b1 == ap_condition_865)) begin
            write_pointer_0_fu_240 <= add_ln452_fu_1228_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        col_reg_1557 <= col_011_fu_192;
        icmp_ln407_reg_1563 <= icmp_ln407_fu_909_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        col_reg_1557_pp0_iter2_reg <= col_reg_1557;
        icmp_ln407_reg_1563_pp0_iter2_reg <= icmp_ln407_reg_1563;
        icmp_ln407_reg_1563_pp0_iter3_reg <= icmp_ln407_reg_1563_pp0_iter2_reg;
        icmp_ln407_reg_1563_pp0_iter4_reg <= icmp_ln407_reg_1563_pp0_iter3_reg;
        icmp_ln437_reg_1567_pp0_iter2_reg <= icmp_ln437_reg_1567;
        icmp_ln437_reg_1567_pp0_iter3_reg <= icmp_ln437_reg_1567_pp0_iter2_reg;
        icmp_ln437_reg_1567_pp0_iter4_reg <= icmp_ln437_reg_1567_pp0_iter3_reg;
        icmp_ln437_reg_1567_pp0_iter5_reg <= icmp_ln437_reg_1567_pp0_iter4_reg;
        icmp_ln450_reg_1571_pp0_iter2_reg <= icmp_ln450_reg_1571;
        icmp_ln450_reg_1571_pp0_iter3_reg <= icmp_ln450_reg_1571_pp0_iter2_reg;
        icmp_ln450_reg_1571_pp0_iter4_reg <= icmp_ln450_reg_1571_pp0_iter3_reg;
        icmp_ln450_reg_1571_pp0_iter5_reg <= icmp_ln450_reg_1571_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1))) begin
        call_ret2_reg_1661 <= call_ret2_xfExtractPixels_1_14_6_s_fu_745_ap_return;
        l30_buf_3_0_load_2_reg_1656 <= l30_buf_3_0_fu_232;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd1))) begin
        call_ret5_reg_1666 <= call_ret5_xFSuppressionRad2_1_6_ap_uint_8_s_fu_760_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln407_fu_909_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln437_reg_1567 <= icmp_ln437_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln407_fu_909_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln437_fu_934_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln450_reg_1571 <= icmp_ln450_fu_950_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        l00_buf_3_0_load_reg_1600 <= l00_buf_3_0_fu_248;
        l10_buf_1_0_load_reg_1612 <= l10_buf_1_0_fu_260;
        l10_buf_2_0_load_reg_1618 <= l10_buf_2_0_fu_268;
        l10_buf_3_0_load_reg_1624 <= l10_buf_3_0_fu_276;
        l20_buf_1_0_load_reg_1630 <= l20_buf_1_0_fu_280;
        l20_buf_2_0_load_reg_1644 <= l20_buf_2_0_fu_288;
        l20_buf_3_0_load_reg_1650 <= l20_buf_3_0_fu_292;
        l30_buf_2_0_load_reg_1637 <= l30_buf_2_0_fu_284;
        l40_buf_3_0_load_reg_1606 <= l40_buf_3_0_fu_252;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        l10_buf_0_0_fu_188 <= l10_buf_1_0_fu_260;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        Array_0_out_ap_vld = 1'b1;
    end else begin
        Array_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln407_fu_909_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln407_reg_1563_pp0_iter3_reg == 1'd0) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter4_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_0_ce0 = 1'b1;
    end else begin
        buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_0_ce1 = 1'b1;
    end else begin
        buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1) & (row_ind_val_read_reg_1519 == 3'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_0_we1 = 1'b1;
    end else begin
        buf_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_1_ce0 = 1'b1;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_ce1 = 1'b1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1) & (row_ind_val_read_reg_1519 == 3'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_1_we1 = 1'b1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_2_ce0 = 1'b1;
    end else begin
        buf_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_2_ce1 = 1'b1;
    end else begin
        buf_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1) & (row_ind_val_read_reg_1519 == 3'd2) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_2_we1 = 1'b1;
    end else begin
        buf_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_3_ce0 = 1'b1;
    end else begin
        buf_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_3_ce1 = 1'b1;
    end else begin
        buf_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1) & (row_ind_val_read_reg_1519 == 3'd3) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_3_we1 = 1'b1;
    end else begin
        buf_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        buf_4_ce0 = 1'b1;
    end else begin
        buf_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_4_ce1 = 1'b1;
    end else begin
        buf_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((~(row_ind_val_read_reg_1519 == 3'd0) & ~(row_ind_val_read_reg_1519 == 3'd1) & ~(row_ind_val_read_reg_1519 == 3'd2) & ~(row_ind_val_read_reg_1519 == 3'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        buf_4_we1 = 1'b1;
    end else begin
        buf_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        inter_valx_0_out_ap_vld = 1'b1;
    end else begin
        inter_valx_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l00_buf_2_0_out_ap_vld = 1'b1;
    end else begin
        l00_buf_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l00_buf_3_0_out_ap_vld = 1'b1;
    end else begin
        l00_buf_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l00_buf_4_0_out_ap_vld = 1'b1;
    end else begin
        l00_buf_4_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l10_buf_0_0_out_ap_vld = 1'b1;
    end else begin
        l10_buf_0_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l10_buf_1_0_out_ap_vld = 1'b1;
    end else begin
        l10_buf_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l10_buf_2_0_out_ap_vld = 1'b1;
    end else begin
        l10_buf_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l10_buf_3_0_out_ap_vld = 1'b1;
    end else begin
        l10_buf_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l10_buf_4_0_out_ap_vld = 1'b1;
    end else begin
        l10_buf_4_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l20_buf_0_0_out_ap_vld = 1'b1;
    end else begin
        l20_buf_0_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l20_buf_1_0_out_ap_vld = 1'b1;
    end else begin
        l20_buf_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l20_buf_2_0_out_ap_vld = 1'b1;
    end else begin
        l20_buf_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l20_buf_3_0_out_ap_vld = 1'b1;
    end else begin
        l20_buf_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l20_buf_4_0_out_ap_vld = 1'b1;
    end else begin
        l20_buf_4_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l30_buf_1_0_out_ap_vld = 1'b1;
    end else begin
        l30_buf_1_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l30_buf_2_0_out_ap_vld = 1'b1;
    end else begin
        l30_buf_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l30_buf_3_0_out_ap_vld = 1'b1;
    end else begin
        l30_buf_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l30_buf_4_0_out_ap_vld = 1'b1;
    end else begin
        l30_buf_4_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l40_buf_2_0_out_ap_vld = 1'b1;
    end else begin
        l40_buf_2_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l40_buf_3_0_out_ap_vld = 1'b1;
    end else begin
        l40_buf_3_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        l40_buf_4_0_out_ap_vld = 1'b1;
    end else begin
        l40_buf_4_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op194_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_mat_data_blk_n = out_mat_data_full_n;
    end else begin
        out_mat_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op194_write_state7 == 1'b1) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        out_mat_data_write = 1'b1;
    end else begin
        out_mat_data_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        read_pointer_0_out_ap_vld = 1'b1;
    end else begin
        read_pointer_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op108_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        thresh_data_blk_n = thresh_data_empty_n;
    end else begin
        thresh_data_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op108_read_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        thresh_data_read = 1'b1;
    end else begin
        thresh_data_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        write_flag28_0_out_ap_vld = 1'b1;
    end else begin
        write_flag28_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        write_flag31_0_out_ap_vld = 1'b1;
    end else begin
        write_flag31_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln407_reg_1563_pp0_iter4_reg == 1'd0))) begin
        write_pointer_0_out_ap_vld = 1'b1;
    end else begin
        write_pointer_0_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Array_0_out = Array_0_fu_196;

assign add_ln412_fu_923_p2 = (read_pointer_0_fu_256 + 32'd1);

assign add_ln452_fu_1228_p2 = (write_pointer_0_fu_240 + 32'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op194_write_state7 == 1'b1) & (out_mat_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_predicate_op108_read_state3 == 1'b1) & (thresh_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op194_write_state7 == 1'b1) & (out_mat_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_predicate_op108_read_state3 == 1'b1) & (thresh_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op194_write_state7 == 1'b1) & (out_mat_data_full_n == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b1)) | ((ap_predicate_op108_read_state3 == 1'b1) & (thresh_data_empty_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op108_read_state3 == 1'b1) & (thresh_data_empty_n == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter6 = ((ap_predicate_op194_write_state7 == 1'b1) & (out_mat_data_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_865 = ((icmp_ln450_reg_1571_pp0_iter5_reg == 1'd0) & (icmp_ln437_reg_1567_pp0_iter5_reg == 1'd0) & (ap_enable_reg_pp0_iter6 == 1'b1));
end

always @ (*) begin
    ap_condition_870 = ((icmp_ln407_fu_909_p2 == 1'd1) & (flag == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op108_read_state3 = ((flag == 1'd1) & (icmp_ln407_reg_1563 == 1'd1));
end

always @ (*) begin
    ap_predicate_op194_write_state7 = ((icmp_ln450_reg_1571_pp0_iter5_reg == 1'd0) & (icmp_ln437_reg_1567_pp0_iter5_reg == 1'd0));
end

assign buf_0_address0 = zext_ln413_fu_969_p1;

assign buf_0_address1 = zext_ln412_fu_961_p1;

assign buf_0_d1 = thresh_data_dout;

assign buf_1_address0 = zext_ln413_fu_969_p1;

assign buf_1_address1 = zext_ln412_fu_961_p1;

assign buf_1_d1 = thresh_data_dout;

assign buf_2_address0 = zext_ln413_fu_969_p1;

assign buf_2_address1 = zext_ln412_fu_961_p1;

assign buf_2_d1 = thresh_data_dout;

assign buf_3_address0 = zext_ln413_fu_969_p1;

assign buf_3_address1 = zext_ln412_fu_961_p1;

assign buf_3_d1 = thresh_data_dout;

assign buf_4_address0 = zext_ln413_fu_969_p1;

assign buf_4_address1 = zext_ln412_fu_961_p1;

assign buf_4_d1 = thresh_data_dout;

assign col_15_fu_914_p2 = (col_011_fu_192 + 13'd1);

assign icmp_ln407_fu_909_p2 = ((zext_ln407_fu_905_p1 < img_width) ? 1'b1 : 1'b0);

assign icmp_ln437_fu_934_p2 = ((col_011_fu_192 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln450_fu_950_p2 = ((tmp_fu_940_p4 == 12'd0) ? 1'b1 : 1'b0);

assign inter_valx_0_out = inter_valx_0_fu_264;

assign l00_buf_2_0_out = l00_buf_2_0_fu_220;

assign l00_buf_3_0_out = l00_buf_3_0_load_reg_1600;

assign l00_buf_4_0_out = l00_buf_4_0_fu_216;

assign l10_buf_0_0_out = l10_buf_0_0_fu_188;

assign l10_buf_1_0_out = l10_buf_1_0_load_reg_1612;

assign l10_buf_2_0_out = l10_buf_2_0_load_reg_1618;

assign l10_buf_3_0_out = l10_buf_3_0_load_reg_1624;

assign l10_buf_4_0_out = l10_buf_4_0_fu_212;

assign l20_buf_0_0_out = l20_buf_0_0_fu_228;

assign l20_buf_1_0_out = l20_buf_1_0_load_reg_1630;

assign l20_buf_2_0_out = l20_buf_2_0_load_reg_1644;

assign l20_buf_3_0_out = l20_buf_3_0_load_reg_1650;

assign l20_buf_4_0_out = l20_buf_4_0_fu_208;

assign l30_buf_1_0_out = l30_buf_1_0_fu_236;

assign l30_buf_2_0_out = l30_buf_2_0_load_reg_1637;

assign l30_buf_3_0_out = l30_buf_3_0_fu_232;

assign l30_buf_4_0_out = l30_buf_4_0_fu_204;

assign l40_buf_2_0_out = l40_buf_2_0_fu_224;

assign l40_buf_3_0_out = l40_buf_3_0_load_reg_1606;

assign l40_buf_4_0_out = l40_buf_4_0_fu_200;

assign out_mat_data_din = ((call_ret5_reg_1666[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign read_pointer_0_out = read_pointer_0_fu_256;

assign row_ind_val_read_reg_1519 = row_ind_val;

assign select_ln437_fu_1217_p3 = ((call_ret5_reg_1666[0:0] == 1'b1) ? 8'd255 : 8'd0);

assign tmp_fu_940_p4 = {{col_011_fu_192[12:1]}};

assign write_flag28_0_out = write_flag28_0_fu_272;

assign write_flag31_0_out = write_flag31_0_fu_244;

assign write_pointer_0_out = write_pointer_0_fu_240;

assign zext_ln407_fu_905_p1 = col_011_fu_192;

assign zext_ln412_fu_961_p1 = col_reg_1557;

assign zext_ln413_fu_969_p1 = col_reg_1557_pp0_iter2_reg;

endmodule //cornerHarris_accel_ProcessRad2_8_0_3840_2160_6_0_1_2_2_14_1_2160_Pipeline_Col_Loop
